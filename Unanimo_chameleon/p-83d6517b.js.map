{"version":3,"names":["t","e","a","variants","o","regex","n","r","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","relevance","contains","begin","className","s","BACKSLASH_ESCAPE","i","BINARY_NUMBER_MODE","C_NUMBER_MODE","l","end","APOS_STRING_MODE","QUOTE_STRING_MODE","c","match","UNDERSCORE_IDENT_RE","scope","name","keywords","literal","type","keyword","SHEBANG","binary","lookahead","excludeBegin","illegal"],"sources":["node_modules/@genexus/markdown-parser/dist/groovy-CntdHuBx.js"],"sourcesContent":["function t(e, a = {}) {\n  return a.variants = e, a;\n}\nfunction o(e) {\n  const a = e.regex, n = \"[A-Za-z0-9_$]+\", r = t([e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.COMMENT(\"/\\\\*\\\\*\", \"\\\\*/\", { relevance: 0, contains: [{ begin: /\\w+@/, relevance: 0 }, { className: \"doctag\", begin: \"@[A-Za-z]+\" }] })]), s = { className: \"regexp\", begin: /~?\\/[^\\/\\n]+\\//, contains: [e.BACKSLASH_ESCAPE] }, i = t([e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE]), l = t([{ begin: /\"\"\"/, end: /\"\"\"/ }, { begin: /'''/, end: /'''/ }, { begin: \"\\\\$/\", end: \"/\\\\$\", relevance: 10 }, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE], { className: \"string\" }), c = { match: [/(class|interface|trait|enum|record|extends|implements)/, /\\s+/, e.UNDERSCORE_IDENT_RE], scope: { 1: \"keyword\", 3: \"title.class\" } };\n  return { name: \"Groovy\", keywords: { \"variable.language\": \"this super\", literal: \"true false null\", type: [\"byte\", \"short\", \"char\", \"int\", \"long\", \"boolean\", \"float\", \"double\", \"void\"], keyword: [\"def\", \"as\", \"in\", \"assert\", \"trait\", \"abstract\", \"static\", \"volatile\", \"transient\", \"public\", \"private\", \"protected\", \"synchronized\", \"final\", \"class\", \"interface\", \"enum\", \"if\", \"else\", \"for\", \"while\", \"switch\", \"case\", \"break\", \"default\", \"continue\", \"throw\", \"throws\", \"try\", \"catch\", \"finally\", \"implements\", \"extends\", \"new\", \"import\", \"package\", \"return\", \"instanceof\", \"var\"] }, contains: [e.SHEBANG({ binary: \"groovy\", relevance: 10 }), r, l, s, i, c, { className: \"meta\", begin: \"@[A-Za-z]+\", relevance: 0 }, { className: \"attr\", begin: n + \"[ \t]*:\", relevance: 0 }, { begin: /\\?/, end: /:/, relevance: 0, contains: [r, l, s, i, \"self\"] }, { className: \"symbol\", begin: \"^[ \t]*\" + a.lookahead(n + \":\"), excludeBegin: !0, end: n + \":\", relevance: 0 }], illegal: /#|<\\// };\n}\nexport {\n  o as default\n};\n"],"mappings":"AAAA,SAASA,EAAEC,EAAGC,EAAI,IAChB,OAAOA,EAAEC,SAAWF,EAAGC,CACzB,CACA,SAASE,EAAEH,GACT,MAAMC,EAAID,EAAEI,MAAOC,EAAI,iBAAkBC,EAAIP,EAAE,CAACC,EAAEO,oBAAqBP,EAAEQ,qBAAsBR,EAAES,QAAQ,UAAW,OAAQ,CAAEC,UAAW,EAAGC,SAAU,CAAC,CAAEC,MAAO,OAAQF,UAAW,GAAK,CAAEG,UAAW,SAAUD,MAAO,mBAAsBE,EAAI,CAAED,UAAW,SAAUD,MAAO,iBAAkBD,SAAU,CAACX,EAAEe,mBAAqBC,EAAIjB,EAAE,CAACC,EAAEiB,mBAAoBjB,EAAEkB,gBAAiBC,EAAIpB,EAAE,CAAC,CAAEa,MAAO,MAAOQ,IAAK,OAAS,CAAER,MAAO,MAAOQ,IAAK,OAAS,CAAER,MAAO,OAAQQ,IAAK,OAAQV,UAAW,IAAMV,EAAEqB,iBAAkBrB,EAAEsB,mBAAoB,CAAET,UAAW,WAAaU,EAAI,CAAEC,MAAO,CAAC,yDAA0D,MAAOxB,EAAEyB,qBAAsBC,MAAO,CAAE,EAAG,UAAW,EAAG,gBACzqB,MAAO,CAAEC,KAAM,SAAUC,SAAU,CAAE,oBAAqB,aAAcC,QAAS,kBAAmBC,KAAM,CAAC,OAAQ,QAAS,OAAQ,MAAO,OAAQ,UAAW,QAAS,SAAU,QAASC,QAAS,CAAC,MAAO,KAAM,KAAM,SAAU,QAAS,WAAY,SAAU,WAAY,YAAa,SAAU,UAAW,YAAa,eAAgB,QAAS,QAAS,YAAa,OAAQ,KAAM,OAAQ,MAAO,QAAS,SAAU,OAAQ,QAAS,UAAW,WAAY,QAAS,SAAU,MAAO,QAAS,UAAW,aAAc,UAAW,MAAO,SAAU,UAAW,SAAU,aAAc,QAAUpB,SAAU,CAACX,EAAEgC,QAAQ,CAAEC,OAAQ,SAAUvB,UAAW,KAAOJ,EAAGa,EAAGL,EAAGE,EAAGO,EAAG,CAAEV,UAAW,OAAQD,MAAO,aAAcF,UAAW,GAAK,CAAEG,UAAW,OAAQD,MAAOP,EAAI,UAAUK,UAAW,GAAK,CAAEE,MAAO,KAAMQ,IAAK,IAAKV,UAAW,EAAGC,SAAU,CAACL,EAAGa,EAAGL,EAAGE,EAAG,SAAW,CAAEH,UAAW,SAAUD,MAAO,UAAWX,EAAEiC,UAAU7B,EAAI,KAAM8B,cAAe,EAAGf,IAAKf,EAAI,IAAKK,UAAW,IAAM0B,QAAS,QACz8B,Q"}