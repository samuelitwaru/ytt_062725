{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","i","defaultToken","tokenPostfix","ignoreCase","token","keywords","builtinLiterals","builtinFunctions","operators","escapes","digits","octaldigits","hexdigits","tokenizer","root","include","common","cases","numbers","strings","whitespace","comment","stringDouble","stringSingle","identifierBacktick"],"sources":["src/components/code-editor/monaco/output/cypher-BFvd4W4v.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }, { open: \"`\", close: \"`\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }, { open: \"`\", close: \"`\" }] }, i = { defaultToken: \"\", tokenPostfix: \".cypher\", ignoreCase: !0, brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.bracket\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }], keywords: [\"ALL\", \"AND\", \"AS\", \"ASC\", \"ASCENDING\", \"BY\", \"CALL\", \"CASE\", \"CONTAINS\", \"CREATE\", \"DELETE\", \"DESC\", \"DESCENDING\", \"DETACH\", \"DISTINCT\", \"ELSE\", \"END\", \"ENDS\", \"EXISTS\", \"IN\", \"IS\", \"LIMIT\", \"MANDATORY\", \"MATCH\", \"MERGE\", \"NOT\", \"ON\", \"ON\", \"OPTIONAL\", \"OR\", \"ORDER\", \"REMOVE\", \"RETURN\", \"SET\", \"SKIP\", \"STARTS\", \"THEN\", \"UNION\", \"UNWIND\", \"WHEN\", \"WHERE\", \"WITH\", \"XOR\", \"YIELD\"], builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"], builtinFunctions: [\"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endNode\", \"exists\", \"exp\", \"floor\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lTrim\", \"max\", \"min\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"properties\", \"radians\", \"rand\", \"range\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rTrim\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startNode\", \"stDev\", \"stDevP\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toBoolean\", \"toFloat\", \"toInteger\", \"toLower\", \"toString\", \"toUpper\", \"trim\", \"type\"], operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"^\", \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"->\", \"<-\", \"-->\", \"<--\"], escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, digits: /\\d+/, octaldigits: /[0-7]+/, hexdigits: /[0-9a-fA-F]+/, tokenizer: { root: [[/[{}[\\]()]/, \"@brackets\"], { include: \"common\" }], common: [{ include: \"@whitespace\" }, { include: \"@numbers\" }, { include: \"@strings\" }, [/:[a-zA-Z_][\\w]*/, \"type.identifier\"], [/[a-zA-Z_][\\w]*(?=\\()/, { cases: { \"@builtinFunctions\": \"predefined.function\" } }], [/[a-zA-Z_$][\\w$]*/, { cases: { \"@keywords\": \"keyword\", \"@builtinLiterals\": \"predefined.literal\", \"@default\": \"identifier\" } }], [/`/, \"identifier.escape\", \"@identifierBacktick\"], [/[;,.:|]/, \"delimiter\"], [/[<>=%+\\-*/^]+/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }]], numbers: [[/-?(@digits)[eE](-?(@digits))?/, \"number.float\"], [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"], [/-?0x(@hexdigits)/, \"number.hex\"], [/-?0(@octaldigits)/, \"number.octal\"], [/-?(@digits)/, \"number\"]], strings: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@stringDouble\"], [/'/, \"string\", \"@stringSingle\"]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/\\/\\/.*/, \"comment\"], [/[^/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[/*]/, \"comment\"]], stringDouble: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/\"/, \"string\", \"@pop\"]], stringSingle: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/'/, \"string\", \"@pop\"]], identifierBacktick: [[/[^\\\\`]+/, \"identifier.escape\"], [/@escapes/, \"identifier.escape\"], [/\\\\./, \"identifier.escape.invalid\"], [/`/, \"identifier.escape\", \"@pop\"]] } };\nexport {\n  e as conf,\n  i as language\n};\n"],"mappings":"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"}