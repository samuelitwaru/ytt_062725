{"version":3,"names":["s","Object","defineProperty","d","getOwnPropertyDescriptor","m","getOwnPropertyNames","b","prototype","hasOwnProperty","a","t","e","c","r","n","call","get","enumerable","i","u","f","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","offSide","onEnterRules","beforeText","action","indentAction","languages","IndentAction","Indent","g","tokenPostfix","token","keywords","numberInteger","numberFloat","numberOctal","numberHex","numberInfinity","numberNaN","numberDate","escapes","tokenizer","root","include","cases","object","array","multiString","multiStringContinued","next","whitespace","comment","flowCollections","flowScalars","doubleQuotedString","blockStyle","flowNumber","tagHandle","anchor"],"sources":["src/components/code-editor/monaco/output/yaml-DSNA6IKC.js"],"sourcesContent":["import { m as u } from \"./monaco-BGD7mUXf.js\";\nvar o, l, s = Object.defineProperty, d = Object.getOwnPropertyDescriptor, m = Object.getOwnPropertyNames, b = Object.prototype.hasOwnProperty, a = (t, e, c, r) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\")\n    for (let n of m(e))\n      b.call(t, n) || n === c || s(t, n, { get: () => e[n], enumerable: !(r = d(e, n)) || r.enumerable });\n  return t;\n}, i = {};\na(i, o = u, \"default\"), l && a(l, o, \"default\");\nvar f = { comments: { lineComment: \"#\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], folding: { offSide: !0 }, onEnterRules: [{ beforeText: /:\\s*$/, action: { indentAction: i.languages.IndentAction.Indent } }] }, g = { tokenPostfix: \".yaml\", brackets: [{ token: \"delimiter.bracket\", open: \"{\", close: \"}\" }, { token: \"delimiter.square\", open: \"[\", close: \"]\" }], keywords: [\"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\", \"Null\", \"Null\", \"~\"], numberInteger: /(?:0|[+-]?[0-9]+)/, numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/, numberOctal: /0o[0-7]+/, numberHex: /0x[0-9a-fA-F]+/, numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/, numberNaN: /\\.(?:nan|Nan|NAN)/, numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/, escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/, tokenizer: { root: [{ include: \"@whitespace\" }, { include: \"@comment\" }, [/%[^ ]+.*$/, \"meta.directive\"], [/---/, \"operators.directivesEnd\"], [/\\.{3}/, \"operators.documentEnd\"], [/[-?:](?= )/, \"operators\"], { include: \"@anchor\" }, { include: \"@tagHandle\" }, { include: \"@flowCollections\" }, { include: \"@blockStyle\" }, [/@numberInteger(?![ \\t]*\\S+)/, \"number\"], [/@numberFloat(?![ \\t]*\\S+)/, \"number.float\"], [/@numberOctal(?![ \\t]*\\S+)/, \"number.octal\"], [/@numberHex(?![ \\t]*\\S+)/, \"number.hex\"], [/@numberInfinity(?![ \\t]*\\S+)/, \"number.infinity\"], [/@numberNaN(?![ \\t]*\\S+)/, \"number.nan\"], [/@numberDate(?![ \\t]*\\S+)/, \"number.date\"], [/(\".*?\"|'.*?'|[^#'\"]*?)([ \\t]*)(:)( |$)/, [\"type\", \"white\", \"operators\", \"white\"]], { include: \"@flowScalars\" }, [/.+?(?=(\\s+#|$))/, { cases: { \"@keywords\": \"keyword\", \"@default\": \"string\" } }]], object: [{ include: \"@whitespace\" }, { include: \"@comment\" }, [/\\}/, \"@brackets\", \"@pop\"], [/,/, \"delimiter.comma\"], [/:(?= )/, \"operators\"], [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, \"type\"], { include: \"@flowCollections\" }, { include: \"@flowScalars\" }, { include: \"@tagHandle\" }, { include: \"@anchor\" }, { include: \"@flowNumber\" }, [/[^\\},]+/, { cases: { \"@keywords\": \"keyword\", \"@default\": \"string\" } }]], array: [{ include: \"@whitespace\" }, { include: \"@comment\" }, [/\\]/, \"@brackets\", \"@pop\"], [/,/, \"delimiter.comma\"], { include: \"@flowCollections\" }, { include: \"@flowScalars\" }, { include: \"@tagHandle\" }, { include: \"@anchor\" }, { include: \"@flowNumber\" }, [/[^\\],]+/, { cases: { \"@keywords\": \"keyword\", \"@default\": \"string\" } }]], multiString: [[/^( +).+$/, \"string\", \"@multiStringContinued.$1\"]], multiStringContinued: [[/^( *).+$/, { cases: { \"$1==$S2\": \"string\", \"@default\": { token: \"@rematch\", next: \"@popall\" } } }]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"]], comment: [[/#.*$/, \"comment\"]], flowCollections: [[/\\[/, \"@brackets\", \"@array\"], [/\\{/, \"@brackets\", \"@object\"]], flowScalars: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/'[^']*'/, \"string\"], [/\"/, \"string\", \"@doubleQuotedString\"]], doubleQuotedString: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]], blockStyle: [[/[>|][0-9]*[+-]?$/, \"operators\", \"@multiString\"]], flowNumber: [[/@numberInteger(?=[ \\t]*[,\\]\\}])/, \"number\"], [/@numberFloat(?=[ \\t]*[,\\]\\}])/, \"number.float\"], [/@numberOctal(?=[ \\t]*[,\\]\\}])/, \"number.octal\"], [/@numberHex(?=[ \\t]*[,\\]\\}])/, \"number.hex\"], [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, \"number.infinity\"], [/@numberNaN(?=[ \\t]*[,\\]\\}])/, \"number.nan\"], [/@numberDate(?=[ \\t]*[,\\]\\}])/, \"number.date\"]], tagHandle: [[/\\![^ ]*/, \"tag\"]], anchor: [[/[&*][^ ]+/, \"namespace\"]] } };\nexport {\n  f as conf,\n  g as language\n};\n"],"mappings":"4DACG,IAAOA,EAAIC,OAAOC,eAAgBC,EAAIF,OAAOG,yBAA0BC,EAAIJ,OAAOK,oBAAqBC,EAAIN,OAAOO,UAAUC,eAAgBC,EAAI,CAACC,EAAGC,EAAGC,EAAGC,KAC3J,GAAIF,UAAYA,GAAK,iBAAmBA,GAAK,WAC3C,IAAK,IAAIG,KAAKV,EAAEO,GACdL,EAAES,KAAKL,EAAGI,IAAMA,IAAMF,GAAKb,EAAEW,EAAGI,EAAG,CAAEE,IAAK,IAAML,EAAEG,GAAIG,aAAcJ,EAAIX,EAAES,EAAGG,KAAOD,EAAEI,aAC1F,OAAOP,CAAC,EACPQ,EAAI,GACPT,EAAES,EAAOC,EAAG,WACT,IAACC,EAAI,CAAEC,SAAU,CAAEC,YAAa,KAAOC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,MAAQC,iBAAkB,CAAC,CAAEF,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,MAAQE,QAAS,CAAEC,SAAU,GAAKC,aAAc,CAAC,CAAEC,WAAY,QAASC,OAAQ,CAAEC,aAAcf,EAAEgB,UAAUC,aAAaC,WAAeC,EAAI,CAAEC,aAAc,QAASf,SAAU,CAAC,CAAEgB,MAAO,oBAAqBd,KAAM,IAAKC,MAAO,KAAO,CAAEa,MAAO,mBAAoBd,KAAM,IAAKC,MAAO,MAAQc,SAAU,CAAC,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,OAAQ,OAAQ,KAAMC,cAAe,oBAAqBC,YAAa,sDAAuDC,YAAa,WAAYC,UAAW,iBAAkBC,eAAgB,yBAA0BC,UAAW,oBAAqBC,WAAY,0EAA2EC,QAAS,8CAA+CC,UAAW,CAAEC,KAAM,CAAC,CAAEC,QAAS,eAAiB,CAAEA,QAAS,YAAc,CAAC,YAAa,kBAAmB,CAAC,MAAO,2BAA4B,CAAC,QAAS,yBAA0B,CAAC,aAAc,aAAc,CAAEA,QAAS,WAAa,CAAEA,QAAS,cAAgB,CAAEA,QAAS,oBAAsB,CAAEA,QAAS,eAAiB,CAAC,8BAA+B,UAAW,CAAC,4BAA6B,gBAAiB,CAAC,4BAA6B,gBAAiB,CAAC,0BAA2B,cAAe,CAAC,+BAAgC,mBAAoB,CAAC,0BAA2B,cAAe,CAAC,2BAA4B,eAAgB,CAAC,yCAA0C,CAAC,OAAQ,QAAS,YAAa,UAAW,CAAEA,QAAS,gBAAkB,CAAC,kBAAmB,CAAEC,MAAO,CAAE,YAAa,UAAW,WAAY,aAAgBC,OAAQ,CAAC,CAAEF,QAAS,eAAiB,CAAEA,QAAS,YAAc,CAAC,KAAM,YAAa,QAAS,CAAC,IAAK,mBAAoB,CAAC,SAAU,aAAc,CAAC,mCAAoC,QAAS,CAAEA,QAAS,oBAAsB,CAAEA,QAAS,gBAAkB,CAAEA,QAAS,cAAgB,CAAEA,QAAS,WAAa,CAAEA,QAAS,eAAiB,CAAC,UAAW,CAAEC,MAAO,CAAE,YAAa,UAAW,WAAY,aAAgBE,MAAO,CAAC,CAAEH,QAAS,eAAiB,CAAEA,QAAS,YAAc,CAAC,KAAM,YAAa,QAAS,CAAC,IAAK,mBAAoB,CAAEA,QAAS,oBAAsB,CAAEA,QAAS,gBAAkB,CAAEA,QAAS,cAAgB,CAAEA,QAAS,WAAa,CAAEA,QAAS,eAAiB,CAAC,UAAW,CAAEC,MAAO,CAAE,YAAa,UAAW,WAAY,aAAgBG,YAAa,CAAC,CAAC,WAAY,SAAU,6BAA8BC,qBAAsB,CAAC,CAAC,WAAY,CAAEJ,MAAO,CAAE,UAAW,SAAU,WAAY,CAAEb,MAAO,WAAYkB,KAAM,eAAmBC,WAAY,CAAC,CAAC,aAAc,UAAWC,QAAS,CAAC,CAAC,OAAQ,YAAaC,gBAAiB,CAAC,CAAC,KAAM,YAAa,UAAW,CAAC,KAAM,YAAa,YAAaC,YAAa,CAAC,CAAC,kBAAmB,kBAAmB,CAAC,kBAAmB,kBAAmB,CAAC,UAAW,UAAW,CAAC,IAAK,SAAU,wBAAyBC,mBAAoB,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,IAAK,SAAU,SAAUC,WAAY,CAAC,CAAC,mBAAoB,YAAa,iBAAkBC,WAAY,CAAC,CAAC,kCAAmC,UAAW,CAAC,gCAAiC,gBAAiB,CAAC,gCAAiC,gBAAiB,CAAC,8BAA+B,cAAe,CAAC,mCAAoC,mBAAoB,CAAC,8BAA+B,cAAe,CAAC,+BAAgC,gBAAiBC,UAAW,CAAC,CAAC,UAAW,QAASC,OAAQ,CAAC,CAAC,YAAa,uB"}