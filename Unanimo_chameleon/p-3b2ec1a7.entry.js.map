{"version":3,"names":["convertObjectDataToSuggestData","selectorCategoriesData","suggestData","suggestItems","suggestLists","length","forEach","selectorCategory","suggestList","label","name","items","objectData","suggestItem","value","id","description","icon","push","renderSuggestLists","randomNumber","Math","random","result","map","list","h","key","item","renderSuggestListsItem","testSuggestCss","ChTestSuggestStyle0","ChTestSuggest","selectObjectValueChangedHandler","async","e","detail","this","selectorSourceCallback","then","objectsSuggestions","catch","render","Host","onValueChanged","part","exportparts"],"sources":["src/components/test/test-suggest/helpers.ts","src/components/test/test-suggest/renderSuggest.tsx","src/components/test/test-suggest/test-suggest.css?tag=ch-test-suggest&encapsulation=shadow","src/components/test/test-suggest/test-suggest.tsx"],"sourcesContent":["import { SelectorCategoryData, ObjectData } from \"./test-suggest\";\r\n\r\nimport { SuggestItemData } from \"../../suggest/suggest-list-item/ch-suggest-list-item\";\r\nimport { SuggestListData } from \"../../suggest/suggest-list/ch-suggest-list\";\r\nimport { SuggestData } from \"../../suggest/ch-suggest\";\r\n\r\n/**\r\n * @description This function converts SelectorCategoryData[] SuggestData\r\n */\r\nexport const convertObjectDataToSuggestData = (\r\n  selectorCategoriesData: SelectorCategoryData[]\r\n): SuggestData => {\r\n  const suggestData: SuggestData = {\r\n    suggestItems: null,\r\n    suggestLists: []\r\n  };\r\n  if (selectorCategoriesData.length) {\r\n    selectorCategoriesData.forEach(selectorCategory => {\r\n      const suggestList: SuggestListData = {\r\n        label: selectorCategory.name,\r\n        items: []\r\n      };\r\n      selectorCategory.items.forEach((objectData: ObjectData) => {\r\n        const suggestItem: SuggestItemData = {\r\n          value: objectData.id,\r\n\r\n          description: objectData.description,\r\n          icon: objectData.icon\r\n        };\r\n        suggestList.items.push(suggestItem);\r\n      });\r\n      suggestData.suggestLists.push(suggestList);\r\n    });\r\n  }\r\n  return suggestData;\r\n};\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\nimport { h } from \"@stencil/core\";\r\nimport { SuggestItemData } from \"../../suggest/suggest-list-item/ch-suggest-list-item\";\r\nimport { SuggestListData } from \"../../suggest/suggest-list/ch-suggest-list\";\r\nimport { SuggestData } from \"../../suggest/ch-suggest\";\r\n\r\nexport const renderSuggestLists = (\r\n  suggestData: SuggestData\r\n): HTMLChSuggestListElement[] => {\r\n  if (suggestData?.suggestLists.length) {\r\n    const randomNumber = Math.random();\r\n    const result = suggestData.suggestLists.map(\r\n      (list: SuggestListData): HTMLChSuggestListElement => {\r\n        return (\r\n          <ch-suggest-list label={list.label} key={randomNumber}>\r\n            {list.items.map((item: SuggestItemData) => {\r\n              return renderSuggestListsItem(item);\r\n            })}\r\n          </ch-suggest-list>\r\n        );\r\n      }\r\n    );\r\n    return result;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst renderSuggestListsItem = (\r\n  suggestItem: SuggestItemData\r\n): HTMLChSuggestListItemElement => {\r\n  return (\r\n    <ch-suggest-list-item value={suggestItem.value}>\r\n      {[suggestItem.description || suggestItem.value]}\r\n    </ch-suggest-list-item>\r\n  );\r\n};\r\n",":host {\r\n  display: block;\r\n}\r\n/*general*/\r\n:root {\r\n  --highlight-color: rgb(163, 25, 161);\r\n}\r\n/*ch-suggest*/\r\nch-suggest {\r\n  display: block;\r\n}\r\nch-suggest::part(title) {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\nch-suggest::part(label) {\r\n  font-weight: 500;\r\n}\r\nch-suggest[label-position=\"start\"]::part(label) {\r\n  margin-inline-end: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\nch-suggest[label-position=\"above\"]::part(label) {\r\n  margin-block-end: 4px;\r\n}\r\nch-suggest::part(close-button) {\r\n  display: block;\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\nch-suggest::part(close-button)::after {\r\n  content: \"âœ–\";\r\n  line-height: 8px;\r\n  height: 100%;\r\n  display: block;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  line-height: 16px;\r\n}\r\nch-suggest::part(header) {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-block-end: 8px;\r\n}\r\nch-suggest::part(ch-window-close) {\r\n  width: 10px;\r\n  height: 10px;\r\n}\r\nch-suggest::part(input) {\r\n  padding: 4px 8px;\r\n  border: 1px solid black;\r\n}\r\nch-suggest::part(input):focus {\r\n  outline: 2px solid var(--highlight-color);\r\n  border-color: var(--highlight-color);\r\n}\r\n/*ch-suggest-list*/\r\nch-suggest-list {\r\n  background-color: rgba(234, 234, 234, 0.224);\r\n  border: 1px solid rgba(128, 128, 128, 0.275);\r\n  border-radius: 4px;\r\n  padding: 8px;\r\n  margin-block-end: 4px;\r\n}\r\nch-suggest-list::part(title) {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  margin: 4px 0 8px 0;\r\n}\r\n/*ch-suggest-list-item*/\r\nch-suggest-list-item::part(button) {\r\n  padding: 4px 8px;\r\n  cursor: pointer;\r\n  gap: 4px;\r\n}\r\nch-suggest-list-item ch-icon {\r\n  --icon-size: 16px;\r\n  margin-inline-end: 2px;\r\n}\r\nch-suggest-list-item:hover {\r\n  background-color: var(--ch-color--violet-100);\r\n}\r\nch-suggest-list-item:focus,\r\nch-suggest-list-item[selected]:focus {\r\n  outline: 2px solid var(--highlight-color);\r\n}\r\nch-suggest-list-item[selected] {\r\n  background-color: rgba(241, 184, 243, 0.42);\r\n  outline: none;\r\n}\r\nch-suggest-list-item::part(button):focus {\r\n  outline: 2px solid var(--highlight-color);\r\n  border-color: var(--highlight-color);\r\n}\r\n/*content-wrapper*/\r\nch-suggest-list-item::part(content-wrapper) {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n/*ch-window*/\r\nch-suggest::part(dropdown) {\r\n  margin-block-start: 4px;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  padding: 8px;\r\n}\r\n/*focus*/\r\n:focus {\r\n  outline-style: none !important;\r\n}\r\n","import { Component, Host, h, Prop, State } from \"@stencil/core\";\r\nimport { SuggestData } from \"../../suggest/ch-suggest\";\r\nimport { convertObjectDataToSuggestData } from \"./helpers\";\r\nimport { renderSuggestLists } from \"./renderSuggest\";\r\n\r\n@Component({\r\n  tag: \"ch-test-suggest\",\r\n  styleUrl: \"test-suggest.css\",\r\n  shadow: true\r\n})\r\nexport class ChTestSuggest {\r\n  /*\r\nINDEX:\r\n1.OWN PROPERTIES\r\n2.REFERENCE TO ELEMENTS\r\n3.STATE() VARIABLES\r\n4.PUBLIC PROPERTY API | WATCH'S\r\n5.EVENTS (EMIT)\r\n6.COMPONENT LIFECYCLE EVENTS\r\n7.LISTENERS\r\n8.PUBLIC METHODS API\r\n9.LOCAL METHODS\r\n10.RENDER() FUNCTION\r\n*/\r\n\r\n  // 1.OWN PROPERTIES //\r\n\r\n  // 2. REFERENCE TO ELEMENTS //\r\n\r\n  // 3.STATE() VARIABLES //\r\n\r\n  /**\r\n   * The objects suggestions that will appear on the suggest\r\n   */\r\n  @State() objectsSuggestions: SuggestData;\r\n\r\n  // 4.PUBLIC PROPERTY API | WATCH'S //\r\n\r\n  /**\r\n   * Callback invoked when user writes on object selector input, return possible options to show in autocomplete list\r\n   */\r\n  @Prop() readonly selectorSourceCallback?: (\r\n    prefix: string\r\n  ) => Promise<SelectorCategoryData[]>;\r\n\r\n  // 5.EVENTS (EMIT) //\r\n\r\n  // 6.COMPONENT LIFECYCLE EVENTS //\r\n\r\n  // 7.LISTENERS //\r\n\r\n  // 8.PUBLIC METHODS API //\r\n\r\n  // 9.LOCAL METHODS //\r\n\r\n  /**\r\n   * This handler gets fired every time the value of the 'Select Object' ch-suggest changes.\r\n   */\r\n  private selectObjectValueChangedHandler = async (e: CustomEvent<string>) => {\r\n    const value = e.detail;\r\n    this.selectorSourceCallback(value)\r\n      .then(result => {\r\n        /* show suggestions*/\r\n        this.objectsSuggestions = convertObjectDataToSuggestData(result);\r\n      })\r\n      .catch(() => {\r\n        // to do\r\n      });\r\n  };\r\n\r\n  // 10.RENDER() FUNCTION //\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ch-suggest\r\n          onValueChanged={this.selectObjectValueChangedHandler}\r\n          part=\"object-selector-suggest\"\r\n          exportparts=\"dropdown:select-object-dropdown\"\r\n        >\r\n          {renderSuggestLists(this.objectsSuggestions)}\r\n        </ch-suggest>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\nexport type SelectorCategoryData = {\r\n  name: string;\r\n  items: ObjectData[];\r\n};\r\n\r\nexport type ObjectData = {\r\n  id: string;\r\n  icon: string;\r\n  name: string;\r\n  description?: string;\r\n};\r\n"],"mappings":"kDASO,MAAMA,EACXC,IAEA,MAAMC,EAA2B,CAC/BC,aAAc,KACdC,aAAc,IAEhB,GAAIH,EAAuBI,OAAQ,CACjCJ,EAAuBK,SAAQC,IAC7B,MAAMC,EAA+B,CACnCC,MAAOF,EAAiBG,KACxBC,MAAO,IAETJ,EAAiBI,MAAML,SAASM,IAC9B,MAAMC,EAA+B,CACnCC,MAAOF,EAAWG,GAElBC,YAAaJ,EAAWI,YACxBC,KAAML,EAAWK,MAEnBT,EAAYG,MAAMO,KAAKL,EAAY,IAErCX,EAAYE,aAAac,KAAKV,EAAY,G,CAG9C,OAAON,CAAW,EC5Bb,MAAMiB,EACXjB,IAEA,GAAIA,GAAaE,aAAaC,OAAQ,CACpC,MAAMe,EAAeC,KAAKC,SAC1B,MAAMC,EAASrB,EAAYE,aAAaoB,KACrCC,GAEGC,EAAA,mBAAiBjB,MAAOgB,EAAKhB,MAAOkB,IAAKP,GACtCK,EAAKd,MAAMa,KAAKI,GACRC,EAAuBD,QAMxC,OAAOL,C,CAET,OAAO,IAAI,EAGb,MAAMM,EACJhB,GAGEa,EAAA,wBAAsBZ,MAAOD,EAAYC,OACtC,CAACD,EAAYG,aAAeH,EAAYC,QChC/C,MAAMgB,EAAiB,+oEACvB,MAAAC,EAAeD,E,MCSFE,EAAa,M,iGAgDhBC,gCAAkCC,MAAOC,IAC/C,MAAMrB,EAAQqB,EAAEC,OAChBC,KAAKC,uBAAuBxB,GACzByB,MAAKhB,IAEJc,KAAKG,mBAAqBxC,EAA+BuB,EAAO,IAEjEkB,OAAM,QAEL,EAKN,MAAAC,GACE,OACEhB,EAACiB,EAAI,CAAAhB,IAAA,4CACHD,EAAA,cAAAC,IAAA,2CACEiB,eAAgBP,KAAKJ,gCACrBY,KAAK,0BACLC,YAAY,mCAEX3B,EAAmBkB,KAAKG,qB"}