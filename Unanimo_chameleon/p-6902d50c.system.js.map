{"version":3,"names":["e","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","t","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/scss-bnVM9Ces.js"],"sourcesContent":["var e = { wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g, comments: { blockComment: [\"/*\", \"*/\"], lineComment: \"//\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], folding: { markers: { start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"), end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\") } } }, t = { defaultToken: \"\", tokenPostfix: \".scss\", ws: `[ \t\n\\r\\f]*`, identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\", brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.bracket\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }, { open: \"<\", close: \">\", token: \"delimiter.angle\" }], tokenizer: { root: [{ include: \"@selector\" }], selector: [{ include: \"@comments\" }, { include: \"@import\" }, { include: \"@variabledeclaration\" }, { include: \"@warndebug\" }, [\"[@](include)\", { token: \"keyword\", next: \"@includedeclaration\" }], [\"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\", { token: \"keyword\", next: \"@keyframedeclaration\" }], [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }], [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }], [\"[@](function)\", { token: \"keyword\", next: \"@functiondeclaration\" }], [\"[@](mixin)\", { token: \"keyword\", next: \"@mixindeclaration\" }], [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }], { include: \"@controlstatement\" }, { include: \"@selectorname\" }, [\"[&\\\\*]\", \"tag\"], [\"[>\\\\+,]\", \"delimiter\"], [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }], [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }]], selectorbody: [[\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"], { include: \"@selector\" }, [\"[@](extend)\", { token: \"keyword\", next: \"@extendbody\" }], [\"[@](return)\", { token: \"keyword\", next: \"@declarationbody\" }], [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]], selectorname: [[\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }], [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]], selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]], term: [{ include: \"@comments\" }, [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }], { include: \"@functioninvocation\" }, { include: \"@numbers\" }, { include: \"@strings\" }, { include: \"@variablereference\" }, [\"(and\\\\b|or\\\\b|not\\\\b)\", \"operator\"], { include: \"@name\" }, [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"operator\"], [\",\", \"delimiter\"], [\"!default\", \"literal\"], [\"\\\\(\", { token: \"delimiter.parenthesis\", next: \"@parenthizedterm\" }]], rulevalue: [{ include: \"@term\" }, [\"!important\", \"literal\"], [\";\", \"delimiter\", \"@pop\"], [\"{\", { token: \"delimiter.curly\", switchTo: \"@nestedproperty\" }], [\"(?=})\", { token: \"\", next: \"@pop\" }]], nestedproperty: [[\"[*_]?@identifier@ws:\", \"attribute.name\", \"@rulevalue\"], { include: \"@comments\" }, [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]], warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]], import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]], variabledeclaration: [[\"\\\\$@identifier@ws:\", \"variable.decl\", \"@declarationbody\"]], urldeclaration: [{ include: \"@strings\" }, [`[^)\\r\n]+`, \"string\"], [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]], parenthizedterm: [{ include: \"@term\" }, [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]], declarationbody: [{ include: \"@term\" }, [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", { token: \"\", next: \"@pop\" }]], extendbody: [{ include: \"@selectorname\" }, [\"!optional\", \"literal\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", { token: \"\", next: \"@pop\" }]], variablereference: [[\"\\\\$@identifier\", \"variable.ref\"], [\"\\\\.\\\\.\\\\.\", \"operator\"], [\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }]], variableinterpolation: [{ include: \"@variablereference\" }, [\"}\", { token: \"meta\", next: \"@pop\" }]], comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]], comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]], name: [[\"@identifier\", \"attribute.value\"]], numbers: [[\"(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"number\", next: \"@units\" }], [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"number.hex\"]], units: [[\"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\", \"number\", \"@pop\"]], functiondeclaration: [[\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }], [\"{\", { token: \"delimiter.curly\", switchTo: \"@functionbody\" }]], mixindeclaration: [[\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }], [\"@identifier\", \"meta\"], [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]], parameterdeclaration: [[\"\\\\$@identifier@ws:\", \"variable.decl\"], [\"\\\\.\\\\.\\\\.\", \"operator\"], [\",\", \"delimiter\"], { include: \"@term\" }, [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]], includedeclaration: [{ include: \"@functioninvocation\" }, [\"@identifier\", \"meta\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", { token: \"\", next: \"@pop\" }], [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]], keyframedeclaration: [[\"@identifier\", \"meta\"], [\"{\", { token: \"delimiter.curly\", switchTo: \"@keyframebody\" }]], keyframebody: [{ include: \"@term\" }, [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }], [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]], controlstatement: [[\"[@](if|else|for|while|each|media)\", { token: \"keyword.flow\", next: \"@controlstatementdeclaration\" }]], controlstatementdeclaration: [[\"(in|from|through|if|to)\\\\b\", { token: \"keyword.flow\" }], { include: \"@term\" }, [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]], functionbody: [[\"[@](return)\", { token: \"keyword\" }], { include: \"@variabledeclaration\" }, { include: \"@term\" }, { include: \"@controlstatement\" }, [\";\", \"delimiter\"], [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]], functioninvocation: [[\"@identifier\\\\(\", { token: \"meta\", next: \"@functionarguments\" }]], functionarguments: [[\"\\\\$@identifier@ws:\", \"attribute.name\"], [\"[,]\", \"delimiter\"], { include: \"@term\" }, [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]], strings: [['~?\"', { token: \"string.delimiter\", next: \"@stringenddoublequote\" }], [\"~?'\", { token: \"string.delimiter\", next: \"@stringendquote\" }]], stringenddoublequote: [[\"\\\\\\\\.\", \"string\"], ['\"', { token: \"string.delimiter\", next: \"@pop\" }], [\".\", \"string\"]], stringendquote: [[\"\\\\\\\\.\", \"string\"], [\"'\", { token: \"string.delimiter\", next: \"@pop\" }], [\".\", \"string\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}