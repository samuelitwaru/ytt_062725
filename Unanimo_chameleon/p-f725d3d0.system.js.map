{"version":3,"names":["URL_REGEX","computedStyle","normalizeUri","uri","startsWith","concat","btoa","slice","replace","getImage","name","gxImageConstructor","getComputedStyle","document","documentElement","value","getPropertyValue","matches","gximage","match","densitySet","push","density","parseFloat","length","reduce","previousValue","currentValue","fromGxImageToURL","exports","gxImage","Settings","undefined","url","id","baseUrl","WEBAPP_BASE","urlLower","toLowerCase","BASE_PATH","substring"],"sources":["src/components/tree-view/genexus-implementation.ts"],"sourcesContent":["import { TreeViewItemModel } from \"./types\";\r\n\r\nexport type GXRender<T extends true | false> = T extends true\r\n  ? TreeViewGXItemModel\r\n  : TreeViewItemModel;\r\n\r\nexport type TreeViewGXItemModel = Omit<\r\n  TreeViewItemModel,\r\n  \"disabled\" | \"dragDisabled\" | \"dropDisabled\"\r\n> & {\r\n  dragEnabled?: boolean;\r\n  dropEnabled?: boolean;\r\n  enabled?: boolean;\r\n};\r\n\r\nconst URL_REGEX = /url\\(([\"']?)([^\\)]*)\\)(?:\\s+([\\d.]+)x)?/i;\r\nlet computedStyle: CSSStyleDeclaration;\r\n\r\nfunction normalizeUri(uri: string): string {\r\n  if (uri.startsWith(\"data:image/svg+xml;utf8,\")) {\r\n    uri = `data:image/svg+xml;base64,${btoa(\r\n      uri.slice(24).replace(/\\\\\"/g, '\"')\r\n    )}`;\r\n  }\r\n\r\n  uri = uri.replace(/\\\\/g, \"\");\r\n  uri = uri.replace(/\\s/g, \"%20\");\r\n\r\n  return uri;\r\n}\r\n\r\nfunction getImage(\r\n  name: string,\r\n  gxImageConstructor: (name: string) => any\r\n): any {\r\n  computedStyle ||= getComputedStyle(document.documentElement);\r\n\r\n  let value = computedStyle.getPropertyValue(`--gx-image_${name}`);\r\n\r\n  if (value) {\r\n    let matches: RegExpMatchArray;\r\n    const gximage = gxImageConstructor(name);\r\n\r\n    while ((matches = value.match(URL_REGEX))) {\r\n      gximage.densitySet.push({\r\n        uri: normalizeUri(matches[1] ? matches[2].slice(0, -1) : matches[2]),\r\n        density: matches[3] ? parseFloat(matches[3]) : 1\r\n      });\r\n\r\n      value = value.slice(matches[0].length);\r\n    }\r\n\r\n    if (gximage.densitySet.length > 0) {\r\n      gximage.uri = gximage.densitySet.reduce((previousValue, currentValue) => {\r\n        return previousValue.density === 1 ||\r\n          previousValue.density < currentValue.density\r\n          ? previousValue\r\n          : currentValue;\r\n      }).uri;\r\n    }\r\n\r\n    return gximage;\r\n  }\r\n}\r\n\r\nexport const fromGxImageToURL = (\r\n  gxImage: any,\r\n  Settings: any,\r\n  gxImageConstructor: (name: string) => any\r\n): string | undefined => {\r\n  if (!gxImage) {\r\n    return undefined;\r\n  }\r\n\r\n  let url = \"\";\r\n  if (gxImage.id) {\r\n    url = getImage(gxImage.id, gxImageConstructor).uri;\r\n  } else {\r\n    url = gxImage.uri;\r\n  }\r\n\r\n  if (!url) {\r\n    return \"\";\r\n  }\r\n\r\n  const baseUrl = Settings.WEBAPP_BASE;\r\n  const urlLower = url.toLowerCase();\r\n  if (urlLower.startsWith(\"assets/\")) {\r\n    // Relative URL to local assets\r\n    return url;\r\n  }\r\n  if (\r\n    urlLower.startsWith(\"http://\") ||\r\n    urlLower.startsWith(\"https://\") ||\r\n    urlLower.startsWith(\"blob:\") ||\r\n    urlLower.startsWith(\"file:\") ||\r\n    urlLower.startsWith(\"data:\")\r\n  ) {\r\n    // Absolute URL\r\n    return url;\r\n  }\r\n  if (urlLower.startsWith(Settings.BASE_PATH.toLowerCase())) {\r\n    // Host relative URL\r\n    return baseUrl + url.substring(Settings.BASE_PATH.length);\r\n  }\r\n  return baseUrl + url;\r\n};\r\n"],"mappings":"uEAeA,IAAMA,EAAY,2CAClB,IAAIC,EAEJ,SAASC,EAAaC,GACpB,GAAIA,EAAIC,WAAW,4BAA6B,CAC9CD,EAAM,6BAAAE,OAA6BC,KACjCH,EAAII,MAAM,IAAIC,QAAQ,OAAQ,M,CAIlCL,EAAMA,EAAIK,QAAQ,MAAO,IACzBL,EAAMA,EAAIK,QAAQ,MAAO,OAEzB,OAAOL,CACT,CAEA,SAASM,EACPC,EACAC,GAEAV,MAAkBW,iBAAiBC,SAASC,kBAE5C,IAAIC,EAAQd,EAAce,iBAAiB,cAAAX,OAAcK,IAEzD,GAAIK,EAAO,CACT,IAAIE,OAAyB,EAC7B,IAAMC,EAAUP,EAAmBD,GAEnC,MAAQO,EAAUF,EAAMI,MAAMnB,GAAa,CACzCkB,EAAQE,WAAWC,KAAK,CACtBlB,IAAKD,EAAae,EAAQ,GAAKA,EAAQ,GAAGV,MAAM,GAAI,GAAKU,EAAQ,IACjEK,QAASL,EAAQ,GAAKM,WAAWN,EAAQ,IAAM,IAGjDF,EAAQA,EAAMR,MAAMU,EAAQ,GAAGO,O,CAGjC,GAAIN,EAAQE,WAAWI,OAAS,EAAG,CACjCN,EAAQf,IAAMe,EAAQE,WAAWK,QAAO,SAACC,EAAeC,GACtD,OAAOD,EAAcJ,UAAY,GAC/BI,EAAcJ,QAAUK,EAAaL,QACnCI,EACAC,C,IACHxB,G,CAGL,OAAOe,C,CAEX,C,IAEaU,EAAgBC,EAAA,KAAG,SAC9BC,EACAC,EACApB,GAEA,IAAKmB,EAAS,CACZ,OAAOE,S,CAGT,IAAIC,EAAM,GACV,GAAIH,EAAQI,GAAI,CACdD,EAAMxB,EAASqB,EAAQI,GAAIvB,GAAoBR,G,KAC1C,CACL8B,EAAMH,EAAQ3B,G,CAGhB,IAAK8B,EAAK,CACR,MAAO,E,CAGT,IAAME,EAAUJ,EAASK,YACzB,IAAMC,EAAWJ,EAAIK,cACrB,GAAID,EAASjC,WAAW,WAAY,CAElC,OAAO6B,C,CAET,GACEI,EAASjC,WAAW,YACpBiC,EAASjC,WAAW,aACpBiC,EAASjC,WAAW,UACpBiC,EAASjC,WAAW,UACpBiC,EAASjC,WAAW,SACpB,CAEA,OAAO6B,C,CAET,GAAII,EAASjC,WAAW2B,EAASQ,UAAUD,eAAgB,CAEzD,OAAOH,EAAUF,EAAIO,UAAUT,EAASQ,UAAUf,O,CAEpD,OAAOW,EAAUF,CACnB,G"}