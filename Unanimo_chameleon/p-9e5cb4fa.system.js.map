{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","t","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","token","bracket","next","cases","include","whitespace","comment","string","stringraw","numbers","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/rust-BSPxeqCM.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"[\", close: \"]\" }, { open: \"{\", close: \"}\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"', notIn: [\"string\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], folding: { markers: { start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"), end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\") } } }, t = { tokenPostfix: \".rust\", defaultToken: \"invalid\", keywords: [\"as\", \"async\", \"await\", \"box\", \"break\", \"const\", \"continue\", \"crate\", \"dyn\", \"else\", \"enum\", \"extern\", \"false\", \"fn\", \"for\", \"if\", \"impl\", \"in\", \"let\", \"loop\", \"match\", \"mod\", \"move\", \"mut\", \"pub\", \"ref\", \"return\", \"self\", \"static\", \"struct\", \"super\", \"trait\", \"true\", \"try\", \"type\", \"unsafe\", \"use\", \"where\", \"while\", \"catch\", \"default\", \"union\", \"static\", \"abstract\", \"alignof\", \"become\", \"do\", \"final\", \"macro\", \"offsetof\", \"override\", \"priv\", \"proc\", \"pure\", \"sizeof\", \"typeof\", \"unsized\", \"virtual\", \"yield\"], typeKeywords: [\"Self\", \"m32\", \"m64\", \"m128\", \"f80\", \"f16\", \"f128\", \"int\", \"uint\", \"float\", \"char\", \"bool\", \"u8\", \"u16\", \"u32\", \"u64\", \"f32\", \"f64\", \"i8\", \"i16\", \"i32\", \"i64\", \"str\", \"Option\", \"Either\", \"c_float\", \"c_double\", \"c_void\", \"FILE\", \"fpos_t\", \"DIR\", \"dirent\", \"c_char\", \"c_schar\", \"c_uchar\", \"c_short\", \"c_ushort\", \"c_int\", \"c_uint\", \"c_long\", \"c_ulong\", \"size_t\", \"ptrdiff_t\", \"clock_t\", \"time_t\", \"c_longlong\", \"c_ulonglong\", \"intptr_t\", \"uintptr_t\", \"off_t\", \"dev_t\", \"ino_t\", \"pid_t\", \"mode_t\", \"ssize_t\"], constants: [\"true\", \"false\", \"Some\", \"None\", \"Left\", \"Right\", \"Ok\", \"Err\"], supportConstants: [\"EXIT_FAILURE\", \"EXIT_SUCCESS\", \"RAND_MAX\", \"EOF\", \"SEEK_SET\", \"SEEK_CUR\", \"SEEK_END\", \"_IOFBF\", \"_IONBF\", \"_IOLBF\", \"BUFSIZ\", \"FOPEN_MAX\", \"FILENAME_MAX\", \"L_tmpnam\", \"TMP_MAX\", \"O_RDONLY\", \"O_WRONLY\", \"O_RDWR\", \"O_APPEND\", \"O_CREAT\", \"O_EXCL\", \"O_TRUNC\", \"S_IFIFO\", \"S_IFCHR\", \"S_IFBLK\", \"S_IFDIR\", \"S_IFREG\", \"S_IFMT\", \"S_IEXEC\", \"S_IWRITE\", \"S_IREAD\", \"S_IRWXU\", \"S_IXUSR\", \"S_IWUSR\", \"S_IRUSR\", \"F_OK\", \"R_OK\", \"W_OK\", \"X_OK\", \"STDIN_FILENO\", \"STDOUT_FILENO\", \"STDERR_FILENO\"], supportMacros: [\"format!\", \"print!\", \"println!\", \"panic!\", \"format_args!\", \"unreachable!\", \"write!\", \"writeln!\"], operators: [\"!\", \"!=\", \"%\", \"%=\", \"&\", \"&=\", \"&&\", \"*\", \"*=\", \"+\", \"+=\", \"-\", \"-=\", \"->\", \".\", \"..\", \"...\", \"/\", \"/=\", \":\", \";\", \"<<\", \"<<=\", \"<\", \"<=\", \"=\", \"==\", \"=>\", \">\", \">=\", \">>\", \">>=\", \"@\", \"^\", \"^=\", \"|\", \"|=\", \"||\", \"_\", \"?\", \"#\"], escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/, delimiters: /[,]/, symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/, intSuffixes: /[iu](8|16|32|64|128|size)/, floatSuffixes: /f(32|64)/, tokenizer: { root: [[/r(#*)\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringraw.$1\" }], [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/, { cases: { \"@typeKeywords\": \"keyword.type\", \"@keywords\": \"keyword\", \"@supportConstants\": \"keyword\", \"@supportMacros\": \"keyword\", \"@constants\": \"keyword\", \"@default\": \"identifier\" } }], [/\\$/, \"identifier\"], [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, \"identifier\"], [/'(\\S|@escapes)'/, \"string.byteliteral\"], [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }], { include: \"@numbers\" }, { include: \"@whitespace\" }, [/@delimiters/, { cases: { \"@keywords\": \"keyword\", \"@default\": \"delimiter\" } }], [/[{}()\\[\\]<>]/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@push\"], [\"\\\\*/\", \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]], stringraw: [[/[^\"#]+/, { token: \"string\" }], [/\"(#*)/, { cases: { \"$1==$S2\": { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }, \"@default\": { token: \"string\" } } }], [/[\"#]/, { token: \"string\" }]], numbers: [[/(0o[0-7_]+)(@intSuffixes)?/, { token: \"number\" }], [/(0b[0-1_]+)(@intSuffixes)?/, { token: \"number\" }], [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: \"number\" }], [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: \"number\" }], [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: \"number\" }], [/[\\d][\\d_]*(@intSuffixes?)?/, { token: \"number\" }]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}