{"version":3,"names":["o","t","n","e","a","s","variants","match","IDENT_RE","scope","name","aliases","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","HASH_COMMENT_MODE","className","begin","illegal"],"sources":["node_modules/@genexus/markdown-parser/dist/capnproto-iODI-Zo1.js"],"sourcesContent":["function o(t) {\n  const n = [\"struct\", \"enum\", \"interface\", \"union\", \"group\", \"import\", \"using\", \"const\", \"annotation\", \"extends\", \"in\", \"of\", \"on\", \"as\", \"with\", \"from\", \"fixed\"], e = [\"Void\", \"Bool\", \"Int8\", \"Int16\", \"Int32\", \"Int64\", \"UInt8\", \"UInt16\", \"UInt32\", \"UInt64\", \"Float32\", \"Float64\", \"Text\", \"Data\", \"AnyPointer\", \"AnyStruct\", \"Capability\", \"List\"], a = [\"true\", \"false\"], s = { variants: [{ match: [/(struct|enum|interface)/, /\\s+/, t.IDENT_RE] }, { match: [/extends/, /\\s*\\(/, t.IDENT_RE, /\\s*\\)/] }], scope: { 1: \"keyword\", 3: \"title.class\" } };\n  return { name: \"Capâ€™n Proto\", aliases: [\"capnp\"], keywords: { keyword: n, type: e, literal: a }, contains: [t.QUOTE_STRING_MODE, t.NUMBER_MODE, t.HASH_COMMENT_MODE, { className: \"meta\", begin: /@0x[\\w\\d]{16};/, illegal: /\\n/ }, { className: \"symbol\", begin: /@\\d+\\b/ }, s] };\n}\nexport {\n  o as default\n};\n"],"mappings":"sFAAA,SAASA,EAAEC,GACT,IAAMC,EAAI,CAAC,SAAU,OAAQ,YAAa,QAAS,QAAS,SAAU,QAAS,QAAS,aAAc,UAAW,KAAM,KAAM,KAAM,KAAM,OAAQ,OAAQ,SAAUC,EAAI,CAAC,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,UAAW,UAAW,OAAQ,OAAQ,aAAc,YAAa,aAAc,QAASC,EAAI,CAAC,OAAQ,SAAUC,EAAI,CAAEC,SAAU,CAAC,CAAEC,MAAO,CAAC,0BAA2B,MAAON,EAAEO,WAAa,CAAED,MAAO,CAAC,UAAW,QAASN,EAAEO,SAAU,WAAaC,MAAO,CAAE,EAAG,UAAW,EAAG,gBAC9gB,MAAO,CAAEC,KAAM,cAAeC,QAAS,CAAC,SAAUC,SAAU,CAAEC,QAASX,EAAGY,KAAMX,EAAGY,QAASX,GAAKY,SAAU,CAACf,EAAEgB,kBAAmBhB,EAAEiB,YAAajB,EAAEkB,kBAAmB,CAAEC,UAAW,OAAQC,MAAO,iBAAkBC,QAAS,MAAQ,CAAEF,UAAW,SAAUC,MAAO,UAAYhB,GAChR,C"}