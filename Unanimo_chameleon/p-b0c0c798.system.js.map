{"version":3,"names":["e","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","t","keywords","typeKeywords","invalidKeywords","constants","builtin","operators","namespaceFollows","symbols","escapes","tokenizer","root","cases","token","next","include","bracket","string","namespace","whitespace","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/qsharp-D1xHloYg.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }] }, t = { keywords: [\"namespace\", \"open\", \"as\", \"operation\", \"function\", \"body\", \"adjoint\", \"newtype\", \"controlled\", \"if\", \"elif\", \"else\", \"repeat\", \"until\", \"fixup\", \"for\", \"in\", \"while\", \"return\", \"fail\", \"within\", \"apply\", \"Adjoint\", \"Controlled\", \"Adj\", \"Ctl\", \"is\", \"self\", \"auto\", \"distribute\", \"invert\", \"intrinsic\", \"let\", \"set\", \"w/\", \"new\", \"not\", \"and\", \"or\", \"use\", \"borrow\", \"using\", \"borrowing\", \"mutable\", \"internal\"], typeKeywords: [\"Unit\", \"Int\", \"BigInt\", \"Double\", \"Bool\", \"String\", \"Qubit\", \"Result\", \"Pauli\", \"Range\"], invalidKeywords: [\"abstract\", \"base\", \"bool\", \"break\", \"byte\", \"case\", \"catch\", \"char\", \"checked\", \"class\", \"const\", \"continue\", \"decimal\", \"default\", \"delegate\", \"do\", \"double\", \"enum\", \"event\", \"explicit\", \"extern\", \"finally\", \"fixed\", \"float\", \"foreach\", \"goto\", \"implicit\", \"int\", \"interface\", \"lock\", \"long\", \"null\", \"object\", \"operator\", \"out\", \"override\", \"params\", \"private\", \"protected\", \"public\", \"readonly\", \"ref\", \"sbyte\", \"sealed\", \"short\", \"sizeof\", \"stackalloc\", \"static\", \"string\", \"struct\", \"switch\", \"this\", \"throw\", \"try\", \"typeof\", \"unit\", \"ulong\", \"unchecked\", \"unsafe\", \"ushort\", \"virtual\", \"void\", \"volatile\"], constants: [\"true\", \"false\", \"PauliI\", \"PauliX\", \"PauliY\", \"PauliZ\", \"One\", \"Zero\"], builtin: [\"X\", \"Y\", \"Z\", \"H\", \"HY\", \"S\", \"T\", \"SWAP\", \"CNOT\", \"CCNOT\", \"MultiX\", \"R\", \"RFrac\", \"Rx\", \"Ry\", \"Rz\", \"R1\", \"R1Frac\", \"Exp\", \"ExpFrac\", \"Measure\", \"M\", \"MultiM\", \"Message\", \"Length\", \"Assert\", \"AssertProb\", \"AssertEqual\"], operators: [\"and=\", \"<-\", \"->\", \"*\", \"*=\", \"@\", \"!\", \"^\", \"^=\", \":\", \"::\", \"..\", \"==\", \"...\", \"=\", \"=>\", \">\", \">=\", \"<\", \"<=\", \"-\", \"-=\", \"!=\", \"or=\", \"%\", \"%=\", \"|\", \"+\", \"+=\", \"?\", \"/\", \"/=\", \"&&&\", \"&&&=\", \"^^^\", \"^^^=\", \">>>\", \">>>=\", \"<<<\", \"<<<=\", \"|||\", \"|||=\", \"~~~\", \"_\", \"w/\", \"w/=\"], namespaceFollows: [\"namespace\", \"open\"], symbols: /[=><!~?:&|+\\-*\\/\\^%@._]+/, escapes: /\\\\[\\s\\S]/, tokenizer: { root: [[/[a-zA-Z_$][\\w$]*/, { cases: { \"@namespaceFollows\": { token: \"keyword.$0\", next: \"@namespace\" }, \"@typeKeywords\": \"type\", \"@keywords\": \"keyword\", \"@constants\": \"constant\", \"@builtin\": \"keyword\", \"@invalidKeywords\": \"invalid\", \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }]], string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]], namespace: [{ include: \"@whitespace\" }, [/[A-Za-z]\\w*/, \"namespace\"], [/[\\.=]/, \"delimiter\"], [\"\", \"\", \"@pop\"]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/(\\/\\/).*/, \"comment\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"uEAAG,IAACA,EAAI,CAAEC,SAAU,CAAEC,YAAa,MAAQC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,aAAeC,iBAAkB,CAAC,CAAEH,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,OAAUG,EAAI,CAAEC,SAAU,CAAC,YAAa,OAAQ,KAAM,YAAa,WAAY,OAAQ,UAAW,UAAW,aAAc,KAAM,OAAQ,OAAQ,SAAU,QAAS,QAAS,MAAO,KAAM,QAAS,SAAU,OAAQ,SAAU,QAAS,UAAW,aAAc,MAAO,MAAO,KAAM,OAAQ,OAAQ,aAAc,SAAU,YAAa,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,SAAU,QAAS,YAAa,UAAW,YAAaC,aAAc,CAAC,OAAQ,MAAO,SAAU,SAAU,OAAQ,SAAU,QAAS,SAAU,QAAS,SAAUC,gBAAiB,CAAC,WAAY,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,UAAW,QAAS,QAAS,WAAY,UAAW,UAAW,WAAY,KAAM,SAAU,OAAQ,QAAS,WAAY,SAAU,UAAW,QAAS,QAAS,UAAW,OAAQ,WAAY,MAAO,YAAa,OAAQ,OAAQ,OAAQ,SAAU,WAAY,MAAO,WAAY,SAAU,UAAW,YAAa,SAAU,WAAY,MAAO,QAAS,SAAU,QAAS,SAAU,aAAc,SAAU,SAAU,SAAU,SAAU,OAAQ,QAAS,MAAO,SAAU,OAAQ,QAAS,YAAa,SAAU,SAAU,UAAW,OAAQ,YAAaC,UAAW,CAAC,OAAQ,QAAS,SAAU,SAAU,SAAU,SAAU,MAAO,QAASC,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,OAAQ,OAAQ,QAAS,SAAU,IAAK,QAAS,KAAM,KAAM,KAAM,KAAM,SAAU,MAAO,UAAW,UAAW,IAAK,SAAU,UAAW,SAAU,SAAU,aAAc,eAAgBC,UAAW,CAAC,OAAQ,KAAM,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,MAAO,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,MAAO,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,IAAK,KAAM,OAAQC,iBAAkB,CAAC,YAAa,QAASC,QAAS,2BAA4BC,QAAS,WAAYC,UAAW,CAAEC,KAAM,CAAC,CAAC,mBAAoB,CAAEC,MAAO,CAAE,oBAAqB,CAAEC,MAAO,aAAcC,KAAM,cAAgB,gBAAiB,OAAQ,YAAa,UAAW,aAAc,WAAY,WAAY,UAAW,mBAAoB,UAAW,WAAY,gBAAmB,CAAEC,QAAS,eAAiB,CAAC,aAAc,aAAc,CAAC,WAAY,CAAEH,MAAO,CAAE,aAAc,WAAY,WAAY,MAAS,CAAC,2BAA4B,gBAAiB,CAAC,MAAO,UAAW,CAAC,QAAS,aAAc,CAAC,IAAK,CAAEC,MAAO,eAAgBG,QAAS,QAASF,KAAM,aAAeG,OAAQ,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,IAAK,CAAEJ,MAAO,eAAgBG,QAAS,SAAUF,KAAM,UAAYI,UAAW,CAAC,CAAEH,QAAS,eAAiB,CAAC,cAAe,aAAc,CAAC,QAAS,aAAc,CAAC,GAAI,GAAI,SAAUI,WAAY,CAAC,CAAC,aAAc,SAAU,CAAC,WAAY,cAAaC,EAAA,CAAAC,KAAA9B,EAAA+B,SAAAtB,G"}