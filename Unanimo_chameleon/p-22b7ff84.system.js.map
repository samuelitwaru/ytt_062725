{"version":3,"names":["h","n","t","regex","r","m","d","$pattern","keyword","literal","a","className","begin","end","keywords","u","relevance","o","match","scope","i","s","c","e","concat","f","contains","map","inherit","p","_","variants","b","BACKSLASH_ESCAPE","g","beginKeywords","TITLE_MODE","endsParent","N","l","HASH_COMMENT_MODE","name","aliases"],"sources":["node_modules/@genexus/markdown-parser/dist/elixir-DcWoIr2X.js"],"sourcesContent":["function h(n) {\n  const t = n.regex, r = \"[a-zA-Z_][a-zA-Z0-9_.]*(!|\\\\?)?\", m = \"[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?\", d = { $pattern: r, keyword: [\"after\", \"alias\", \"and\", \"case\", \"catch\", \"cond\", \"defstruct\", \"defguard\", \"do\", \"else\", \"end\", \"fn\", \"for\", \"if\", \"import\", \"in\", \"not\", \"or\", \"quote\", \"raise\", \"receive\", \"require\", \"reraise\", \"rescue\", \"try\", \"unless\", \"unquote\", \"unquote_splicing\", \"use\", \"when\", \"with|0\"], literal: [\"false\", \"nil\", \"true\"] }, a = { className: \"subst\", begin: /#\\{/, end: /\\}/, keywords: d }, u = { className: \"number\", begin: \"(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[0-9][0-9_]*(\\\\.[0-9_]+([eE][-+]?[0-9]+)?)?)\", relevance: 0 }, o = { match: /\\\\[\\s\\S]/, scope: \"char.escape\", relevance: 0 }, i = `[/|([{<\"']`, s = [{ begin: /\"/, end: /\"/ }, { begin: /'/, end: /'/ }, { begin: /\\//, end: /\\// }, { begin: /\\|/, end: /\\|/ }, { begin: /\\(/, end: /\\)/ }, { begin: /\\[/, end: /\\]/ }, { begin: /\\{/, end: /\\}/ }, { begin: /</, end: />/ }], c = (e) => ({ scope: \"char.escape\", begin: t.concat(/\\\\/, e), relevance: 0 }), f = { className: \"string\", begin: \"~[a-z](?=\" + i + \")\", contains: s.map((e) => n.inherit(e, { contains: [c(e.end), o, a] })) }, p = { className: \"string\", begin: \"~[A-Z](?=\" + i + \")\", contains: s.map((e) => n.inherit(e, { contains: [c(e.end)] })) }, _ = { className: \"regex\", variants: [{ begin: \"~r(?=\" + i + \")\", contains: s.map((e) => n.inherit(e, { end: t.concat(e.end, /[uismxfU]{0,7}/), contains: [c(e.end), o, a] })) }, { begin: \"~R(?=\" + i + \")\", contains: s.map((e) => n.inherit(e, { end: t.concat(e.end, /[uismxfU]{0,7}/), contains: [c(e.end)] })) }] }, b = { className: \"string\", contains: [n.BACKSLASH_ESCAPE, a], variants: [{ begin: /\"\"\"/, end: /\"\"\"/ }, { begin: /'''/, end: /'''/ }, { begin: /~S\"\"\"/, end: /\"\"\"/, contains: [] }, { begin: /~S\"/, end: /\"/, contains: [] }, { begin: /~S'''/, end: /'''/, contains: [] }, { begin: /~S'/, end: /'/, contains: [] }, { begin: /'/, end: /'/ }, { begin: /\"/, end: /\"/ }] }, g = { className: \"function\", beginKeywords: \"def defp defmacro defmacrop\", end: /\\B\\b/, contains: [n.inherit(n.TITLE_MODE, { begin: r, endsParent: !0 })] }, N = n.inherit(g, { className: \"class\", beginKeywords: \"defimpl defmodule defprotocol defrecord\", end: /\\bdo\\b|$|;/ }), l = [b, _, p, f, n.HASH_COMMENT_MODE, N, g, { begin: \"::\" }, { className: \"symbol\", begin: \":(?![\\\\s:])\", contains: [b, { begin: m }], relevance: 0 }, { className: \"symbol\", begin: r + \":(?!:)\", relevance: 0 }, { className: \"title.class\", begin: /(\\b[A-Z][a-zA-Z0-9_]+)/, relevance: 0 }, u, { className: \"variable\", begin: \"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))\" }];\n  return a.contains = l, { name: \"Elixir\", aliases: [\"ex\", \"exs\"], keywords: d, contains: l };\n}\nexport {\n  h as default\n};\n"],"mappings":"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"}