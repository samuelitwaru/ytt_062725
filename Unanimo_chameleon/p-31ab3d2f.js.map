{"version":3,"names":["o","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","e","forEach","t","push","toUpperCase","s","charAt","substr","n","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","apexdoc","string","next"],"sources":["src/components/code-editor/monaco/output/apex-B2QPdE43.js"],"sourcesContent":["var o = { wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g, comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }, { open: \"<\", close: \">\" }], folding: { markers: { start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"), end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\") } } }, e = [];\n[\"abstract\", \"activate\", \"and\", \"any\", \"array\", \"as\", \"asc\", \"assert\", \"autonomous\", \"begin\", \"bigdecimal\", \"blob\", \"boolean\", \"break\", \"bulk\", \"by\", \"case\", \"cast\", \"catch\", \"char\", \"class\", \"collect\", \"commit\", \"const\", \"continue\", \"convertcurrency\", \"decimal\", \"default\", \"delete\", \"desc\", \"do\", \"double\", \"else\", \"end\", \"enum\", \"exception\", \"exit\", \"export\", \"extends\", \"false\", \"final\", \"finally\", \"float\", \"for\", \"from\", \"future\", \"get\", \"global\", \"goto\", \"group\", \"having\", \"hint\", \"if\", \"implements\", \"import\", \"in\", \"inner\", \"insert\", \"instanceof\", \"int\", \"interface\", \"into\", \"join\", \"last_90_days\", \"last_month\", \"last_n_days\", \"last_week\", \"like\", \"limit\", \"list\", \"long\", \"loop\", \"map\", \"merge\", \"native\", \"new\", \"next_90_days\", \"next_month\", \"next_n_days\", \"next_week\", \"not\", \"null\", \"nulls\", \"number\", \"object\", \"of\", \"on\", \"or\", \"outer\", \"override\", \"package\", \"parallel\", \"pragma\", \"private\", \"protected\", \"public\", \"retrieve\", \"return\", \"returning\", \"rollback\", \"savepoint\", \"search\", \"select\", \"set\", \"short\", \"sort\", \"stat\", \"static\", \"strictfp\", \"super\", \"switch\", \"synchronized\", \"system\", \"testmethod\", \"then\", \"this\", \"this_month\", \"this_week\", \"throw\", \"throws\", \"today\", \"tolabel\", \"tomorrow\", \"transaction\", \"transient\", \"trigger\", \"true\", \"try\", \"type\", \"undelete\", \"update\", \"upsert\", \"using\", \"virtual\", \"void\", \"volatile\", \"webservice\", \"when\", \"where\", \"while\", \"yesterday\"].forEach((t) => {\n  e.push(t), e.push(t.toUpperCase()), e.push(((s) => s.charAt(0).toUpperCase() + s.substr(1))(t));\n});\nvar n = { defaultToken: \"\", tokenPostfix: \".apex\", keywords: e, operators: [\"=\", \">\", \"<\", \"!\", \"~\", \"?\", \":\", \"==\", \"<=\", \">=\", \"!=\", \"&&\", \"||\", \"++\", \"--\", \"+\", \"-\", \"*\", \"/\", \"&\", \"|\", \"^\", \"%\", \"<<\", \">>\", \">>>\", \"+=\", \"-=\", \"*=\", \"/=\", \"&=\", \"|=\", \"^=\", \"%=\", \"<<=\", \">>=\", \">>>=\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, digits: /\\d+(_+\\d+)*/, octaldigits: /[0-7]+(_+[0-7]+)*/, binarydigits: /[0-1]+(_+[0-1]+)*/, hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/, tokenizer: { root: [[/[a-z_$][\\w$]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], [/[A-Z][\\w\\$]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"type.identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"], [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)[fFdD]/, \"number.float\"], [/(@digits)[lL]?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], apexdoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]], string: [[/[^\\\\\"']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/[\"']/, { cases: { \"$#==$S2\": { token: \"string\", next: \"@pop\" }, \"@default\": \"string\" } }]] } };\nexport {\n  o as conf,\n  n as language\n};\n"],"mappings":"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"}