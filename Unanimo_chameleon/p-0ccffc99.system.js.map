{"version":3,"names":["E","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","T","defaultToken","tokenPostfix","ignoreCase","token","keywords","functions","tokenizer","root","include","cases","whitespace","next","comment","numbers","strings","string","complexIdentifiers","bracketedIdentifier","quotedIdentifier","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/msdax-Bvmv6_-6.js"],"sourcesContent":["var E = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"[\", \"]\"], [\"(\", \")\"], [\"{\", \"}\"]], autoClosingPairs: [{ open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }, { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }] }, T = { defaultToken: \"\", tokenPostfix: \".msdax\", ignoreCase: !0, brackets: [{ open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"{\", close: \"}\", token: \"delimiter.brackets\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }], keywords: [\"VAR\", \"RETURN\", \"NOT\", \"EVALUATE\", \"DATATABLE\", \"ORDER\", \"BY\", \"START\", \"AT\", \"DEFINE\", \"MEASURE\", \"ASC\", \"DESC\", \"IN\", \"BOOLEAN\", \"DOUBLE\", \"INTEGER\", \"DATETIME\", \"CURRENCY\", \"STRING\"], functions: [\"CLOSINGBALANCEMONTH\", \"CLOSINGBALANCEQUARTER\", \"CLOSINGBALANCEYEAR\", \"DATEADD\", \"DATESBETWEEN\", \"DATESINPERIOD\", \"DATESMTD\", \"DATESQTD\", \"DATESYTD\", \"ENDOFMONTH\", \"ENDOFQUARTER\", \"ENDOFYEAR\", \"FIRSTDATE\", \"FIRSTNONBLANK\", \"LASTDATE\", \"LASTNONBLANK\", \"NEXTDAY\", \"NEXTMONTH\", \"NEXTQUARTER\", \"NEXTYEAR\", \"OPENINGBALANCEMONTH\", \"OPENINGBALANCEQUARTER\", \"OPENINGBALANCEYEAR\", \"PARALLELPERIOD\", \"PREVIOUSDAY\", \"PREVIOUSMONTH\", \"PREVIOUSQUARTER\", \"PREVIOUSYEAR\", \"SAMEPERIODLASTYEAR\", \"STARTOFMONTH\", \"STARTOFQUARTER\", \"STARTOFYEAR\", \"TOTALMTD\", \"TOTALQTD\", \"TOTALYTD\", \"ADDCOLUMNS\", \"ADDMISSINGITEMS\", \"ALL\", \"ALLEXCEPT\", \"ALLNOBLANKROW\", \"ALLSELECTED\", \"CALCULATE\", \"CALCULATETABLE\", \"CALENDAR\", \"CALENDARAUTO\", \"CROSSFILTER\", \"CROSSJOIN\", \"CURRENTGROUP\", \"DATATABLE\", \"DETAILROWS\", \"DISTINCT\", \"EARLIER\", \"EARLIEST\", \"EXCEPT\", \"FILTER\", \"FILTERS\", \"GENERATE\", \"GENERATEALL\", \"GROUPBY\", \"IGNORE\", \"INTERSECT\", \"ISONORAFTER\", \"KEEPFILTERS\", \"LOOKUPVALUE\", \"NATURALINNERJOIN\", \"NATURALLEFTOUTERJOIN\", \"RELATED\", \"RELATEDTABLE\", \"ROLLUP\", \"ROLLUPADDISSUBTOTAL\", \"ROLLUPGROUP\", \"ROLLUPISSUBTOTAL\", \"ROW\", \"SAMPLE\", \"SELECTCOLUMNS\", \"SUBSTITUTEWITHINDEX\", \"SUMMARIZE\", \"SUMMARIZECOLUMNS\", \"TOPN\", \"TREATAS\", \"UNION\", \"USERELATIONSHIP\", \"VALUES\", \"SUM\", \"SUMX\", \"PATH\", \"PATHCONTAINS\", \"PATHITEM\", \"PATHITEMREVERSE\", \"PATHLENGTH\", \"AVERAGE\", \"AVERAGEA\", \"AVERAGEX\", \"COUNT\", \"COUNTA\", \"COUNTAX\", \"COUNTBLANK\", \"COUNTROWS\", \"COUNTX\", \"DISTINCTCOUNT\", \"DIVIDE\", \"GEOMEAN\", \"GEOMEANX\", \"MAX\", \"MAXA\", \"MAXX\", \"MEDIAN\", \"MEDIANX\", \"MIN\", \"MINA\", \"MINX\", \"PERCENTILE.EXC\", \"PERCENTILE.INC\", \"PERCENTILEX.EXC\", \"PERCENTILEX.INC\", \"PRODUCT\", \"PRODUCTX\", \"RANK.EQ\", \"RANKX\", \"STDEV.P\", \"STDEV.S\", \"STDEVX.P\", \"STDEVX.S\", \"VAR.P\", \"VAR.S\", \"VARX.P\", \"VARX.S\", \"XIRR\", \"XNPV\", \"DATE\", \"DATEDIFF\", \"DATEVALUE\", \"DAY\", \"EDATE\", \"EOMONTH\", \"HOUR\", \"MINUTE\", \"MONTH\", \"NOW\", \"SECOND\", \"TIME\", \"TIMEVALUE\", \"TODAY\", \"WEEKDAY\", \"WEEKNUM\", \"YEAR\", \"YEARFRAC\", \"CONTAINS\", \"CONTAINSROW\", \"CUSTOMDATA\", \"ERROR\", \"HASONEFILTER\", \"HASONEVALUE\", \"ISBLANK\", \"ISCROSSFILTERED\", \"ISEMPTY\", \"ISERROR\", \"ISEVEN\", \"ISFILTERED\", \"ISLOGICAL\", \"ISNONTEXT\", \"ISNUMBER\", \"ISODD\", \"ISSUBTOTAL\", \"ISTEXT\", \"USERNAME\", \"USERPRINCIPALNAME\", \"AND\", \"FALSE\", \"IF\", \"IFERROR\", \"NOT\", \"OR\", \"SWITCH\", \"TRUE\", \"ABS\", \"ACOS\", \"ACOSH\", \"ACOT\", \"ACOTH\", \"ASIN\", \"ASINH\", \"ATAN\", \"ATANH\", \"BETA.DIST\", \"BETA.INV\", \"CEILING\", \"CHISQ.DIST\", \"CHISQ.DIST.RT\", \"CHISQ.INV\", \"CHISQ.INV.RT\", \"COMBIN\", \"COMBINA\", \"CONFIDENCE.NORM\", \"CONFIDENCE.T\", \"COS\", \"COSH\", \"COT\", \"COTH\", \"CURRENCY\", \"DEGREES\", \"EVEN\", \"EXP\", \"EXPON.DIST\", \"FACT\", \"FLOOR\", \"GCD\", \"INT\", \"ISO.CEILING\", \"LCM\", \"LN\", \"LOG\", \"LOG10\", \"MOD\", \"MROUND\", \"ODD\", \"PERMUT\", \"PI\", \"POISSON.DIST\", \"POWER\", \"QUOTIENT\", \"RADIANS\", \"RAND\", \"RANDBETWEEN\", \"ROUND\", \"ROUNDDOWN\", \"ROUNDUP\", \"SIGN\", \"SIN\", \"SINH\", \"SQRT\", \"SQRTPI\", \"TAN\", \"TANH\", \"TRUNC\", \"BLANK\", \"CONCATENATE\", \"CONCATENATEX\", \"EXACT\", \"FIND\", \"FIXED\", \"FORMAT\", \"LEFT\", \"LEN\", \"LOWER\", \"MID\", \"REPLACE\", \"REPT\", \"RIGHT\", \"SEARCH\", \"SUBSTITUTE\", \"TRIM\", \"UNICHAR\", \"UNICODE\", \"UPPER\", \"VALUE\"], tokenizer: { root: [{ include: \"@comments\" }, { include: \"@whitespace\" }, { include: \"@numbers\" }, { include: \"@strings\" }, { include: \"@complexIdentifiers\" }, [/[;,.]/, \"delimiter\"], [/[({})]/, \"@brackets\"], [/[a-z_][a-zA-Z0-9_]*/, { cases: { \"@keywords\": \"keyword\", \"@functions\": \"keyword\", \"@default\": \"identifier\" } }], [/[<>=!%&+\\-*/|~^]/, \"operator\"]], whitespace: [[/\\s+/, \"white\"]], comments: [[/\\/\\/+.*/, \"comment\"], [/\\/\\*/, { token: \"comment.quote\", next: \"@comment\" }]], comment: [[/[^*/]+/, \"comment\"], [/\\*\\//, { token: \"comment.quote\", next: \"@pop\" }], [/./, \"comment\"]], numbers: [[/0[xX][0-9a-fA-F]*/, \"number\"], [/[$][+-]*\\d*(\\.\\d*)?/, \"number\"], [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, \"number\"]], strings: [[/N\"/, { token: \"string\", next: \"@string\" }], [/\"/, { token: \"string\", next: \"@string\" }]], string: [[/[^\"]+/, \"string\"], [/\"\"/, \"string\"], [/\"/, { token: \"string\", next: \"@pop\" }]], complexIdentifiers: [[/\\[/, { token: \"identifier.quote\", next: \"@bracketedIdentifier\" }], [/'/, { token: \"identifier.quote\", next: \"@quotedIdentifier\" }]], bracketedIdentifier: [[/[^\\]]+/, \"identifier\"], [/]]/, \"identifier\"], [/]/, { token: \"identifier.quote\", next: \"@pop\" }]], quotedIdentifier: [[/[^']+/, \"identifier\"], [/''/, \"identifier\"], [/'/, { token: \"identifier.quote\", next: \"@pop\" }]] } };\nexport {\n  E as conf,\n  T as language\n};\n"],"mappings":"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"}