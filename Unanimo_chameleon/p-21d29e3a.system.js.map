{"version":3,"names":["o","e","n","regex","s","className","relevance","begin","concat","IDENT_RE","lookahead","t","r","l","a","i","name","aliases","keywords","$pattern","type","keyword","literal","built_in","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","variants","UNDERSCORE_IDENT_RE","end"],"sources":["node_modules/@genexus/markdown-parser/dist/rust-DOZG42vu.js"],"sourcesContent":["function o(e) {\n  const n = e.regex, s = { className: \"title.function.invoke\", relevance: 0, begin: n.concat(/\\b/, /(?!let|for|while|if|else|match\\b)/, e.IDENT_RE, n.lookahead(/\\s*\\(/)) }, t = \"([ui](8|16|32|64|128|size)|f(32|64))?\", r = [\"abstract\", \"as\", \"async\", \"await\", \"become\", \"box\", \"break\", \"const\", \"continue\", \"crate\", \"do\", \"dyn\", \"else\", \"enum\", \"extern\", \"false\", \"final\", \"fn\", \"for\", \"if\", \"impl\", \"in\", \"let\", \"loop\", \"macro\", \"match\", \"mod\", \"move\", \"mut\", \"override\", \"priv\", \"pub\", \"ref\", \"return\", \"self\", \"Self\", \"static\", \"struct\", \"super\", \"trait\", \"true\", \"try\", \"type\", \"typeof\", \"unsafe\", \"unsized\", \"use\", \"virtual\", \"where\", \"while\", \"yield\"], l = [\"true\", \"false\", \"Some\", \"None\", \"Ok\", \"Err\"], a = [\"drop \", \"Copy\", \"Send\", \"Sized\", \"Sync\", \"Drop\", \"Fn\", \"FnMut\", \"FnOnce\", \"ToOwned\", \"Clone\", \"Debug\", \"PartialEq\", \"PartialOrd\", \"Eq\", \"Ord\", \"AsRef\", \"AsMut\", \"Into\", \"From\", \"Default\", \"Iterator\", \"Extend\", \"IntoIterator\", \"DoubleEndedIterator\", \"ExactSizeIterator\", \"SliceConcatExt\", \"ToString\", \"assert!\", \"assert_eq!\", \"bitflags!\", \"bytes!\", \"cfg!\", \"col!\", \"concat!\", \"concat_idents!\", \"debug_assert!\", \"debug_assert_eq!\", \"env!\", \"eprintln!\", \"panic!\", \"file!\", \"format!\", \"format_args!\", \"include_bytes!\", \"include_str!\", \"line!\", \"local_data_key!\", \"module_path!\", \"option_env!\", \"print!\", \"println!\", \"select!\", \"stringify!\", \"try!\", \"unimplemented!\", \"unreachable!\", \"vec!\", \"write!\", \"writeln!\", \"macro_rules!\", \"assert_ne!\", \"debug_assert_ne!\"], i = [\"i8\", \"i16\", \"i32\", \"i64\", \"i128\", \"isize\", \"u8\", \"u16\", \"u32\", \"u64\", \"u128\", \"usize\", \"f32\", \"f64\", \"str\", \"char\", \"bool\", \"Box\", \"Option\", \"Result\", \"String\", \"Vec\"];\n  return { name: \"Rust\", aliases: [\"rs\"], keywords: { $pattern: e.IDENT_RE + \"!?\", type: i, keyword: r, literal: l, built_in: a }, illegal: \"</\", contains: [e.C_LINE_COMMENT_MODE, e.COMMENT(\"/\\\\*\", \"\\\\*/\", { contains: [\"self\"] }), e.inherit(e.QUOTE_STRING_MODE, { begin: /b?\"/, illegal: null }), { className: \"string\", variants: [{ begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ }, { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }] }, { className: \"symbol\", begin: /'[a-zA-Z_][a-zA-Z0-9_]*/ }, { className: \"number\", variants: [{ begin: \"\\\\b0b([01_]+)\" + t }, { begin: \"\\\\b0o([0-7_]+)\" + t }, { begin: \"\\\\b0x([A-Fa-f0-9_]+)\" + t }, { begin: \"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\" + t }], relevance: 0 }, { begin: [/fn/, /\\s+/, e.UNDERSCORE_IDENT_RE], className: { 1: \"keyword\", 3: \"title.function\" } }, { className: \"meta\", begin: \"#!?\\\\[\", end: \"\\\\]\", contains: [{ className: \"string\", begin: /\"/, end: /\"/ }] }, { begin: [/let/, /\\s+/, /(?:mut\\s+)?/, e.UNDERSCORE_IDENT_RE], className: { 1: \"keyword\", 3: \"keyword\", 4: \"variable\" } }, { begin: [/for/, /\\s+/, e.UNDERSCORE_IDENT_RE, /\\s+/, /in/], className: { 1: \"keyword\", 3: \"variable\", 5: \"keyword\" } }, { begin: [/type/, /\\s+/, e.UNDERSCORE_IDENT_RE], className: { 1: \"keyword\", 3: \"title.class\" } }, { begin: [/(?:trait|enum|struct|union|impl|for)/, /\\s+/, e.UNDERSCORE_IDENT_RE], className: { 1: \"keyword\", 3: \"title.class\" } }, { begin: e.IDENT_RE + \"::\", keywords: { keyword: \"Self\", built_in: a, type: i } }, { className: \"punctuation\", begin: \"->\" }, s] };\n}\nexport {\n  o as default\n};\n"],"mappings":"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"}