{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","n","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","tokenizer","root","cases","token","include","whitespace","comment","doccomment","string","rawstring"],"sources":["src/components/code-editor/monaco/output/go-B6ANsLBK.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"`\", close: \"`\", notIn: [\"string\"] }, { open: '\"', close: '\"', notIn: [\"string\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"`\", close: \"`\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }] }, n = { defaultToken: \"\", tokenPostfix: \".go\", keywords: [\"break\", \"case\", \"chan\", \"const\", \"continue\", \"default\", \"defer\", \"else\", \"fallthrough\", \"for\", \"func\", \"go\", \"goto\", \"if\", \"import\", \"interface\", \"map\", \"package\", \"range\", \"return\", \"select\", \"struct\", \"switch\", \"type\", \"var\", \"bool\", \"true\", \"false\", \"uint8\", \"uint16\", \"uint32\", \"uint64\", \"int8\", \"int16\", \"int32\", \"int64\", \"float32\", \"float64\", \"complex64\", \"complex128\", \"byte\", \"rune\", \"uint\", \"int\", \"uintptr\", \"string\", \"nil\"], operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"&\", \"|\", \"^\", \"<<\", \">>\", \"&^\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"&=\", \"|=\", \"^=\", \"<<=\", \">>=\", \"&^=\", \"&&\", \"||\", \"<-\", \"++\", \"--\", \"==\", \"<\", \">\", \"=\", \"!\", \"!=\", \"<=\", \">=\", \":=\", \"...\", \"(\", \")\", \"\", \"]\", \"{\", \"}\", \",\", \";\", \".\", \":\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/[a-zA-Z_]\\w*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/\\[\\[.*\\]\\]/, \"annotation\"], [/^\\s*#\\w+/, \"keyword\"], [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex\"], [/0[0-7']*[0-7]/, \"number.octal\"], [/0[bB][0-1']*[0-1]/, \"number.binary\"], [/\\d[\\d']*/, \"number\"], [/\\d/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"], [/`/, \"string\", \"@rawstring\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@doccomment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], doccomment: [[/[^\\/*]+/, \"comment.doc\"], [/\\/\\*/, \"comment.doc.invalid\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]], string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]], rawstring: [[/[^\\`]/, \"string\"], [/`/, \"string\", \"@pop\"]] } };\nexport {\n  e as conf,\n  n as language\n};\n"],"mappings":"AAAG,IAACA,EAAI,CAAEC,SAAU,CAAEC,YAAa,KAAMC,aAAc,CAAC,KAAM,OAASC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,WAAa,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,WAAa,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,aAAeC,iBAAkB,CAAC,CAAEH,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,OAAUG,EAAI,CAAEC,aAAc,GAAIC,aAAc,MAAOC,SAAU,CAAC,QAAS,OAAQ,OAAQ,QAAS,WAAY,UAAW,QAAS,OAAQ,cAAe,MAAO,OAAQ,KAAM,OAAQ,KAAM,SAAU,YAAa,MAAO,UAAW,QAAS,SAAU,SAAU,SAAU,SAAU,OAAQ,MAAO,OAAQ,OAAQ,QAAS,QAAS,SAAU,SAAU,SAAU,OAAQ,QAAS,QAAS,QAAS,UAAW,UAAW,YAAa,aAAc,OAAQ,OAAQ,OAAQ,MAAO,UAAW,SAAU,OAAQC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,QAAS,wBAAyBC,QAAS,wEAAyEC,UAAW,CAAEC,KAAM,CAAC,CAAC,eAAgB,CAAEC,MAAO,CAAE,YAAa,CAAEC,MAAO,cAAgB,WAAY,gBAAmB,CAAEC,QAAS,eAAiB,CAAC,aAAc,cAAe,CAAC,WAAY,WAAY,CAAC,aAAc,aAAc,CAAC,mBAAoB,aAAc,CAAC,WAAY,CAAEF,MAAO,CAAE,aAAc,YAAa,WAAY,MAAS,CAAC,yBAA0B,gBAAiB,CAAC,2BAA4B,gBAAiB,CAAC,gCAAiC,cAAe,CAAC,gBAAiB,gBAAiB,CAAC,oBAAqB,iBAAkB,CAAC,WAAY,UAAW,CAAC,KAAM,UAAW,CAAC,QAAS,aAAc,CAAC,kBAAmB,kBAAmB,CAAC,IAAK,SAAU,WAAY,CAAC,IAAK,SAAU,cAAe,CAAC,WAAY,UAAW,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WAAY,CAAC,IAAK,mBAAoBG,WAAY,CAAC,CAAC,aAAc,IAAK,CAAC,eAAgB,cAAe,eAAgB,CAAC,OAAQ,UAAW,YAAa,CAAC,UAAW,YAAaC,QAAS,CAAC,CAAC,UAAW,WAAY,CAAC,OAAQ,UAAW,QAAS,CAAC,QAAS,YAAaC,WAAY,CAAC,CAAC,UAAW,eAAgB,CAAC,OAAQ,uBAAwB,CAAC,OAAQ,cAAe,QAAS,CAAC,QAAS,gBAAiBC,OAAQ,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,IAAK,SAAU,SAAUC,UAAW,CAAC,CAAC,QAAS,UAAW,CAAC,IAAK,SAAU,kB"}