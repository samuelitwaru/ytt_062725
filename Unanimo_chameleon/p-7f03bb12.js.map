{"version":3,"names":["e","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","s","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","next"],"sources":["src/components/code-editor/monaco/output/bat-ByTATCOl.js"],"sourcesContent":["var e = { comments: { lineComment: \"REM\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }], surroundingPairs: [{ open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }], folding: { markers: { start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"), end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\") } } }, s = { defaultToken: \"\", ignoreCase: !0, tokenPostfix: \".bat\", brackets: [{ token: \"delimiter.bracket\", open: \"{\", close: \"}\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }, { token: \"delimiter.square\", open: \"[\", close: \"]\" }], keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/, symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/^(\\s*)(rem(?:\\s.*|))$/, [\"\", \"comment\"]], [/(\\@?)(@keywords)(?!\\w)/, [{ token: \"keyword\" }, { token: \"keyword.$2\" }]], [/[ \\t\\r\\n]+/, \"\"], [/setlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/endlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/[a-zA-Z_]\\w*/, \"\"], [/:\\w*/, \"metatag\"], [/%[^%]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"]], string: [[/[^\\\\\"'%]+/, { cases: { \"@eos\": { token: \"string\", next: \"@popall\" }, \"@default\": \"string\" } }], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/%[\\w ]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[\"']/, { cases: { \"$#==$S2\": { token: \"string\", next: \"@pop\" }, \"@default\": \"string\" } }], [/$/, \"string\", \"@popall\"]] } };\nexport {\n  e as conf,\n  s as language\n};\n"],"mappings":"AAAG,IAACA,EAAI,CAAEC,SAAU,CAAEC,YAAa,OAASC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,MAAQC,iBAAkB,CAAC,CAAEF,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,MAAQE,QAAS,CAAEC,QAAS,CAAEC,MAAO,IAAIC,OAAO,gCAAiCC,IAAK,IAAID,OAAO,sCAA0CE,EAAI,CAAEC,aAAc,GAAIC,YAAa,EAAGC,aAAc,OAAQb,SAAU,CAAC,CAAEc,MAAO,oBAAqBZ,KAAM,IAAKC,MAAO,KAAO,CAAEW,MAAO,wBAAyBZ,KAAM,IAAKC,MAAO,KAAO,CAAEW,MAAO,mBAAoBZ,KAAM,IAAKC,MAAO,MAAQY,SAAU,4FAA6FC,QAAS,0BAA2BC,QAAS,wEAAyEC,UAAW,CAAEC,KAAM,CAAC,CAAC,wBAAyB,CAAC,GAAI,YAAa,CAAC,yBAA0B,CAAC,CAAEL,MAAO,WAAa,CAAEA,MAAO,gBAAkB,CAAC,aAAc,IAAK,CAAC,iBAAkB,wBAAyB,CAAC,iBAAkB,wBAAyB,CAAC,eAAgB,IAAK,CAAC,OAAQ,WAAY,CAAC,UAAW,YAAa,CAAC,gBAAiB,YAAa,CAAC,aAAc,aAAc,CAAC,WAAY,aAAc,CAAC,2BAA4B,gBAAiB,CAAC,gCAAiC,cAAe,CAAC,MAAO,UAAW,CAAC,QAAS,aAAc,CAAC,IAAK,SAAU,aAAc,CAAC,IAAK,SAAU,cAAeM,OAAQ,CAAC,CAAC,YAAa,CAAEC,MAAO,CAAE,OAAQ,CAAEP,MAAO,SAAUQ,KAAM,WAAa,WAAY,YAAe,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,WAAY,YAAa,CAAC,gBAAiB,YAAa,CAAC,OAAQ,CAAED,MAAO,CAAE,UAAW,CAAEP,MAAO,SAAUQ,KAAM,QAAU,WAAY,YAAe,CAAC,IAAK,SAAU,qB"}