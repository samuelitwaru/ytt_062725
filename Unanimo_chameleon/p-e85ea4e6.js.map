{"version":3,"names":["e","n","comments","lineComment","blockComment","brackets","surroundingPairs","open","close","autoClosingPairs","notIn","autoCloseBefore","indentationRules","increaseIndentPattern","RegExp","decreaseIndentPattern","t","defaultToken","tokenPostfix","token","symbols","keywords","namedLiterals","escapes","tokenizer","root","include","stringVerbatim","regex","action","next","stringLiteral","bracketCounting","comment","whitespace","expression","cases"],"sources":["src/components/code-editor/monaco/output/bicep-BhEnY-uZ.js"],"sourcesContent":["var e = \"\\\\b[_a-zA-Z][_a-zA-Z0-9]*\\\\b\", n = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"'\", close: \"'\" }, { open: \"'''\", close: \"'''\" }], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: \"'''\", close: \"'''\", notIn: [\"string\", \"comment\"] }], autoCloseBefore: `:.,=}])' \n\t`, indentationRules: { increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"), decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\") } }, t = { defaultToken: \"\", tokenPostfix: \".bicep\", brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }], symbols: /[=><!~?:&|+\\-*/^%]+/, keywords: [\"targetScope\", \"resource\", \"module\", \"param\", \"var\", \"output\", \"for\", \"in\", \"if\", \"existing\"], namedLiterals: [\"true\", \"false\", \"null\"], escapes: \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\", tokenizer: { root: [{ include: \"@expression\" }, { include: \"@whitespace\" }], stringVerbatim: [{ regex: \"(|'|'')[^']\", action: { token: \"string\" } }, { regex: \"'''\", action: { token: \"string.quote\", next: \"@pop\" } }], stringLiteral: [{ regex: \"\\\\${\", action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } }, { regex: \"[^\\\\\\\\'$]+\", action: { token: \"string\" } }, { regex: \"@escapes\", action: { token: \"string.escape\" } }, { regex: \"\\\\\\\\.\", action: { token: \"string.escape.invalid\" } }, { regex: \"'\", action: { token: \"string\", next: \"@pop\" } }], bracketCounting: [{ regex: \"{\", action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } }, { regex: \"}\", action: { token: \"delimiter.bracket\", next: \"@pop\" } }, { include: \"expression\" }], comment: [{ regex: \"[^\\\\*]+\", action: { token: \"comment\" } }, { regex: \"\\\\*\\\\/\", action: { token: \"comment\", next: \"@pop\" } }, { regex: \"[\\\\/*]\", action: { token: \"comment\" } }], whitespace: [{ regex: \"[ \\\\t\\\\r\\\\n]\" }, { regex: \"\\\\/\\\\*\", action: { token: \"comment\", next: \"@comment\" } }, { regex: \"\\\\/\\\\/.*$\", action: { token: \"comment\" } }], expression: [{ regex: \"'''\", action: { token: \"string.quote\", next: \"@stringVerbatim\" } }, { regex: \"'\", action: { token: \"string.quote\", next: \"@stringLiteral\" } }, { regex: \"[0-9]+\", action: { token: \"number\" } }, { regex: e, action: { cases: { \"@keywords\": { token: \"keyword\" }, \"@namedLiterals\": { token: \"keyword\" }, \"@default\": { token: \"identifier\" } } } }] } };\nexport {\n  n as conf,\n  t as language\n};\n"],"mappings":"AAAG,IAACA,EAAI,+BAAgCC,EAAI,CAAEC,SAAU,CAAEC,YAAa,KAAMC,aAAc,CAAC,KAAM,OAASC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,MAAOC,MAAO,QAAUC,iBAAkB,CAAC,CAAEF,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,IAAKE,MAAO,CAAC,SAAU,YAAc,CAAEH,KAAM,MAAOC,MAAO,MAAOE,MAAO,CAAC,SAAU,aAAeC,gBAAiB,gBACliBC,iBAAkB,CAAEC,sBAAuB,IAAIC,OAAO,8DAA+DC,sBAAuB,IAAID,OAAO,4CAA+CE,EAAI,CAAEC,aAAc,GAAIC,aAAc,SAAUb,SAAU,CAAC,CAAEE,KAAM,IAAKC,MAAO,IAAKW,MAAO,mBAAqB,CAAEZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,oBAAsB,CAAEZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,0BAA4BC,QAAS,sBAAuBC,SAAU,CAAC,cAAe,WAAY,SAAU,QAAS,MAAO,SAAU,MAAO,KAAM,KAAM,YAAaC,cAAe,CAAC,OAAQ,QAAS,QAASC,QAAS,0CAA2CC,UAAW,CAAEC,KAAM,CAAC,CAAEC,QAAS,eAAiB,CAAEA,QAAS,gBAAkBC,eAAgB,CAAC,CAAEC,MAAO,cAAeC,OAAQ,CAAEV,MAAO,WAAc,CAAES,MAAO,MAAOC,OAAQ,CAAEV,MAAO,eAAgBW,KAAM,UAAaC,cAAe,CAAC,CAAEH,MAAO,OAAQC,OAAQ,CAAEV,MAAO,oBAAqBW,KAAM,qBAAwB,CAAEF,MAAO,aAAcC,OAAQ,CAAEV,MAAO,WAAc,CAAES,MAAO,WAAYC,OAAQ,CAAEV,MAAO,kBAAqB,CAAES,MAAO,QAASC,OAAQ,CAAEV,MAAO,0BAA6B,CAAES,MAAO,IAAKC,OAAQ,CAAEV,MAAO,SAAUW,KAAM,UAAaE,gBAAiB,CAAC,CAAEJ,MAAO,IAAKC,OAAQ,CAAEV,MAAO,oBAAqBW,KAAM,qBAAwB,CAAEF,MAAO,IAAKC,OAAQ,CAAEV,MAAO,oBAAqBW,KAAM,SAAY,CAAEJ,QAAS,eAAiBO,QAAS,CAAC,CAAEL,MAAO,UAAWC,OAAQ,CAAEV,MAAO,YAAe,CAAES,MAAO,SAAUC,OAAQ,CAAEV,MAAO,UAAWW,KAAM,SAAY,CAAEF,MAAO,SAAUC,OAAQ,CAAEV,MAAO,aAAgBe,WAAY,CAAC,CAAEN,MAAO,gBAAkB,CAAEA,MAAO,SAAUC,OAAQ,CAAEV,MAAO,UAAWW,KAAM,aAAgB,CAAEF,MAAO,YAAaC,OAAQ,CAAEV,MAAO,aAAgBgB,WAAY,CAAC,CAAEP,MAAO,MAAOC,OAAQ,CAAEV,MAAO,eAAgBW,KAAM,oBAAuB,CAAEF,MAAO,IAAKC,OAAQ,CAAEV,MAAO,eAAgBW,KAAM,mBAAsB,CAAEF,MAAO,SAAUC,OAAQ,CAAEV,MAAO,WAAc,CAAES,MAAO5B,EAAG6B,OAAQ,CAAEO,MAAO,CAAE,YAAa,CAAEjB,MAAO,WAAa,iBAAkB,CAAEA,MAAO,WAAa,WAAY,CAAEA,MAAO,2B"}