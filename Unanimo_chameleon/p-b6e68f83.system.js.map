{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","o","defaultToken","tokenPostfix","ignoreCase","token","pounds","join","keywords","functions","typesint","typesnum","typesone","operators","symbols","escapes","tokenizer","root","cases","include","whitespace","comment","string","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/ecl-BtT9Hws7.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"<\", close: \">\" }, { open: \"'\", close: \"'\" }, { open: '\"', close: '\"' }] }, o = { defaultToken: \"\", tokenPostfix: \".ecl\", ignoreCase: !0, brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }, { open: \"<\", close: \">\", token: \"delimiter.angle\" }], pounds: [\"append\", \"break\", \"declare\", \"demangle\", \"end\", \"for\", \"getdatatype\", \"if\", \"inmodule\", \"loop\", \"mangle\", \"onwarning\", \"option\", \"set\", \"stored\", \"uniquename\"].join(\"|\"), keywords: [\"__compressed__\", \"after\", \"all\", \"and\", \"any\", \"as\", \"atmost\", \"before\", \"beginc\", \"best\", \"between\", \"case\", \"cluster\", \"compressed\", \"compression\", \"const\", \"counter\", \"csv\", \"default\", \"descend\", \"embed\", \"encoding\", \"encrypt\", \"end\", \"endc\", \"endembed\", \"endmacro\", \"enum\", \"escape\", \"except\", \"exclusive\", \"expire\", \"export\", \"extend\", \"fail\", \"few\", \"fileposition\", \"first\", \"flat\", \"forward\", \"from\", \"full\", \"function\", \"functionmacro\", \"group\", \"grouped\", \"heading\", \"hole\", \"ifblock\", \"import\", \"in\", \"inner\", \"interface\", \"internal\", \"joined\", \"keep\", \"keyed\", \"last\", \"left\", \"limit\", \"linkcounted\", \"literal\", \"little_endian\", \"load\", \"local\", \"locale\", \"lookup\", \"lzw\", \"macro\", \"many\", \"maxcount\", \"maxlength\", \"min skew\", \"module\", \"mofn\", \"multiple\", \"named\", \"namespace\", \"nocase\", \"noroot\", \"noscan\", \"nosort\", \"not\", \"noxpath\", \"of\", \"onfail\", \"only\", \"opt\", \"or\", \"outer\", \"overwrite\", \"packed\", \"partition\", \"penalty\", \"physicallength\", \"pipe\", \"prefetch\", \"quote\", \"record\", \"repeat\", \"retry\", \"return\", \"right\", \"right1\", \"right2\", \"rows\", \"rowset\", \"scan\", \"scope\", \"self\", \"separator\", \"service\", \"shared\", \"skew\", \"skip\", \"smart\", \"soapaction\", \"sql\", \"stable\", \"store\", \"terminator\", \"thor\", \"threshold\", \"timelimit\", \"timeout\", \"token\", \"transform\", \"trim\", \"type\", \"unicodeorder\", \"unordered\", \"unsorted\", \"unstable\", \"update\", \"use\", \"validate\", \"virtual\", \"whole\", \"width\", \"wild\", \"within\", \"wnotrim\", \"xml\", \"xpath\"], functions: [\"abs\", \"acos\", \"aggregate\", \"allnodes\", \"apply\", \"ascii\", \"asin\", \"assert\", \"asstring\", \"atan\", \"atan2\", \"ave\", \"build\", \"buildindex\", \"case\", \"catch\", \"choose\", \"choosen\", \"choosesets\", \"clustersize\", \"combine\", \"correlation\", \"cos\", \"cosh\", \"count\", \"covariance\", \"cron\", \"dataset\", \"dedup\", \"define\", \"denormalize\", \"dictionary\", \"distribute\", \"distributed\", \"distribution\", \"ebcdic\", \"enth\", \"error\", \"evaluate\", \"event\", \"eventextra\", \"eventname\", \"exists\", \"exp\", \"fail\", \"failcode\", \"failmessage\", \"fetch\", \"fromunicode\", \"fromxml\", \"getenv\", \"getisvalid\", \"global\", \"graph\", \"group\", \"hash\", \"hash32\", \"hash64\", \"hashcrc\", \"hashmd5\", \"having\", \"httpcall\", \"httpheader\", \"if\", \"iff\", \"index\", \"intformat\", \"isvalid\", \"iterate\", \"join\", \"keydiff\", \"keypatch\", \"keyunicode\", \"length\", \"library\", \"limit\", \"ln\", \"loadxml\", \"local\", \"log\", \"loop\", \"map\", \"matched\", \"matchlength\", \"matchposition\", \"matchtext\", \"matchunicode\", \"max\", \"merge\", \"mergejoin\", \"min\", \"nofold\", \"nolocal\", \"nonempty\", \"normalize\", \"nothor\", \"notify\", \"output\", \"parallel\", \"parse\", \"pipe\", \"power\", \"preload\", \"process\", \"project\", \"pull\", \"random\", \"range\", \"rank\", \"ranked\", \"realformat\", \"recordof\", \"regexfind\", \"regexreplace\", \"regroup\", \"rejected\", \"rollup\", \"round\", \"roundup\", \"row\", \"rowdiff\", \"sample\", \"sequential\", \"set\", \"sin\", \"sinh\", \"sizeof\", \"soapcall\", \"sort\", \"sorted\", \"sqrt\", \"stepped\", \"stored\", \"sum\", \"table\", \"tan\", \"tanh\", \"thisnode\", \"topn\", \"tounicode\", \"toxml\", \"transfer\", \"transform\", \"trim\", \"truncate\", \"typeof\", \"ungroup\", \"unicodeorder\", \"variance\", \"wait\", \"which\", \"workunit\", \"xmldecode\", \"xmlencode\", \"xmltext\", \"xmlunicode\"], typesint: [\"integer\", \"unsigned\"].join(\"|\"), typesnum: [\"data\", \"qstring\", \"string\", \"unicode\", \"utf8\", \"varstring\", \"varunicode\"], typesone: [\"ascii\", \"big_endian\", \"boolean\", \"data\", \"decimal\", \"ebcdic\", \"grouped\", \"integer\", \"linkcounted\", \"pattern\", \"qstring\", \"real\", \"record\", \"rule\", \"set of\", \"streamed\", \"string\", \"token\", \"udecimal\", \"unicode\", \"unsigned\", \"utf8\", \"varstring\", \"varunicode\"].join(\"|\"), operators: [\"+\", \"-\", \"/\", \":=\", \"<\", \"<>\", \"=\", \">\", \"\\\\\", \"and\", \"in\", \"not\", \"or\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/@typesint[4|8]/, \"type\"], [/#(@pounds)/, \"type\"], [/@typesone/, \"type\"], [/[a-zA-Z_$][\\w-$]*/, { cases: { \"@functions\": \"keyword.function\", \"@keywords\": \"keyword\", \"@operators\": \"operator\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]+/, \"number.hex\"], [/0[bB][01]+/, \"number.hex\"], [/[0-9_]+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], whitespace: [[/[ \\t\\v\\f\\r\\n]+/, \"\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], string: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, \"string\", \"@pop\"]] } };\nexport {\n  e as conf,\n  o as language\n};\n"],"mappings":"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"}