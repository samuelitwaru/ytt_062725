{"version":3,"names":["e","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","t","defaultToken","tokenPostfix","token","keywords","reservedConstNames","reservedTypeNames","operators","relations","delimiters","symbols","escapes","tokenizer","root","cases","include","text","comment","pragma","whitespace"],"sources":["src/components/code-editor/monaco/output/m3-CcliCMX8.js"],"sourcesContent":["var e = { comments: { blockComment: [\"(*\", \"*)\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"[\", close: \"]\" }, { open: \"{\", close: \"}\" }, { open: \"(\", close: \")\" }, { open: \"(*\", close: \"*)\" }, { open: \"<*\", close: \"*>\" }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }] }, t = { defaultToken: \"\", tokenPostfix: \".m3\", brackets: [{ token: \"delimiter.curly\", open: \"{\", close: \"}\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }, { token: \"delimiter.square\", open: \"[\", close: \"]\" }], keywords: [\"AND\", \"ANY\", \"ARRAY\", \"AS\", \"BEGIN\", \"BITS\", \"BRANDED\", \"BY\", \"CASE\", \"CONST\", \"DIV\", \"DO\", \"ELSE\", \"ELSIF\", \"END\", \"EVAL\", \"EXCEPT\", \"EXCEPTION\", \"EXIT\", \"EXPORTS\", \"FINALLY\", \"FOR\", \"FROM\", \"GENERIC\", \"IF\", \"IMPORT\", \"IN\", \"INTERFACE\", \"LOCK\", \"LOOP\", \"METHODS\", \"MOD\", \"MODULE\", \"NOT\", \"OBJECT\", \"OF\", \"OR\", \"OVERRIDES\", \"PROCEDURE\", \"RAISE\", \"RAISES\", \"READONLY\", \"RECORD\", \"REF\", \"REPEAT\", \"RETURN\", \"REVEAL\", \"SET\", \"THEN\", \"TO\", \"TRY\", \"TYPE\", \"TYPECASE\", \"UNSAFE\", \"UNTIL\", \"UNTRACED\", \"VALUE\", \"VAR\", \"WHILE\", \"WITH\"], reservedConstNames: [\"ABS\", \"ADR\", \"ADRSIZE\", \"BITSIZE\", \"BYTESIZE\", \"CEILING\", \"DEC\", \"DISPOSE\", \"FALSE\", \"FIRST\", \"FLOAT\", \"FLOOR\", \"INC\", \"ISTYPE\", \"LAST\", \"LOOPHOLE\", \"MAX\", \"MIN\", \"NARROW\", \"NEW\", \"NIL\", \"NUMBER\", \"ORD\", \"ROUND\", \"SUBARRAY\", \"TRUE\", \"TRUNC\", \"TYPECODE\", \"VAL\"], reservedTypeNames: [\"ADDRESS\", \"ANY\", \"BOOLEAN\", \"CARDINAL\", \"CHAR\", \"EXTENDED\", \"INTEGER\", \"LONGCARD\", \"LONGINT\", \"LONGREAL\", \"MUTEX\", \"NULL\", \"REAL\", \"REFANY\", \"ROOT\", \"TEXT\"], operators: [\"+\", \"-\", \"*\", \"/\", \"&\", \"^\", \".\"], relations: [\"=\", \"#\", \"<\", \"<=\", \">\", \">=\", \"<:\", \":\"], delimiters: [\"|\", \"..\", \"=>\", \",\", \";\", \":=\"], symbols: /[>=<#.,:;+\\-*/&^]+/, escapes: /\\\\(?:[\\\\fnrt\"']|[0-7]{3})/, tokenizer: { root: [[/_\\w*/, \"invalid\"], [/[a-zA-Z][a-zA-Z0-9_]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@reservedConstNames\": { token: \"constant.reserved.$0\" }, \"@reservedTypeNames\": { token: \"type.reserved.$0\" }, \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/[0-9]+\\.[0-9]+(?:[DdEeXx][\\+\\-]?[0-9]+)?/, \"number.float\"], [/[0-9]+(?:\\_[0-9a-fA-F]+)?L?/, \"number\"], [/@symbols/, { cases: { \"@operators\": \"operators\", \"@relations\": \"operators\", \"@delimiters\": \"delimiter\", \"@default\": \"invalid\" } }], [/'[^\\\\']'/, \"string.char\"], [/(')(@escapes)(')/, [\"string.char\", \"string.escape\", \"string.char\"]], [/'/, \"invalid\"], [/\"([^\"\\\\]|\\\\.)*$/, \"invalid\"], [/\"/, \"string.text\", \"@text\"]], text: [[/[^\\\\\"]+/, \"string.text\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"invalid\"], [/\"/, \"string.text\", \"@pop\"]], comment: [[/\\(\\*/, \"comment\", \"@push\"], [/\\*\\)/, \"comment\", \"@pop\"], [/./, \"comment\"]], pragma: [[/<\\*/, \"keyword.pragma\", \"@push\"], [/\\*>/, \"keyword.pragma\", \"@pop\"], [/./, \"keyword.pragma\"]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\(\\*/, \"comment\", \"@comment\"], [/<\\*/, \"keyword.pragma\", \"@pragma\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"AAAG,IAACA,EAAI,CAAEC,SAAU,CAAEC,aAAc,CAAC,KAAM,OAASC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,IAAKC,MAAO,KAAO,CAAED,KAAM,KAAMC,MAAO,MAAQ,CAAED,KAAM,KAAMC,MAAO,MAAQ,CAAED,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAAc,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,cAAiBC,EAAI,CAAEC,aAAc,GAAIC,aAAc,MAAOP,SAAU,CAAC,CAAEQ,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,KAAO,CAAEK,MAAO,wBAAyBN,KAAM,IAAKC,MAAO,KAAO,CAAEK,MAAO,mBAAoBN,KAAM,IAAKC,MAAO,MAAQM,SAAU,CAAC,MAAO,MAAO,QAAS,KAAM,QAAS,OAAQ,UAAW,KAAM,OAAQ,QAAS,MAAO,KAAM,OAAQ,QAAS,MAAO,OAAQ,SAAU,YAAa,OAAQ,UAAW,UAAW,MAAO,OAAQ,UAAW,KAAM,SAAU,KAAM,YAAa,OAAQ,OAAQ,UAAW,MAAO,SAAU,MAAO,SAAU,KAAM,KAAM,YAAa,YAAa,QAAS,SAAU,WAAY,SAAU,MAAO,SAAU,SAAU,SAAU,MAAO,OAAQ,KAAM,MAAO,OAAQ,WAAY,SAAU,QAAS,WAAY,QAAS,MAAO,QAAS,QAASC,mBAAoB,CAAC,MAAO,MAAO,UAAW,UAAW,WAAY,UAAW,MAAO,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,SAAU,OAAQ,WAAY,MAAO,MAAO,SAAU,MAAO,MAAO,SAAU,MAAO,QAAS,WAAY,OAAQ,QAAS,WAAY,OAAQC,kBAAmB,CAAC,UAAW,MAAO,UAAW,WAAY,OAAQ,WAAY,UAAW,WAAY,UAAW,WAAY,QAAS,OAAQ,OAAQ,SAAU,OAAQ,QAASC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAMC,WAAY,CAAC,IAAK,KAAM,KAAM,IAAK,IAAK,MAAOC,QAAS,qBAAsBC,QAAS,4BAA6BC,UAAW,CAAEC,KAAM,CAAC,CAAC,OAAQ,WAAY,CAAC,wBAAyB,CAAEC,MAAO,CAAE,YAAa,CAAEX,MAAO,cAAgB,sBAAuB,CAAEA,MAAO,wBAA0B,qBAAsB,CAAEA,MAAO,oBAAsB,WAAY,gBAAmB,CAAEY,QAAS,eAAiB,CAAC,aAAc,aAAc,CAAC,2CAA4C,gBAAiB,CAAC,8BAA+B,UAAW,CAAC,WAAY,CAAED,MAAO,CAAE,aAAc,YAAa,aAAc,YAAa,cAAe,YAAa,WAAY,aAAgB,CAAC,WAAY,eAAgB,CAAC,mBAAoB,CAAC,cAAe,gBAAiB,gBAAiB,CAAC,IAAK,WAAY,CAAC,kBAAmB,WAAY,CAAC,IAAK,cAAe,UAAWE,KAAM,CAAC,CAAC,UAAW,eAAgB,CAAC,WAAY,iBAAkB,CAAC,MAAO,WAAY,CAAC,IAAK,cAAe,SAAUC,QAAS,CAAC,CAAC,OAAQ,UAAW,SAAU,CAAC,OAAQ,UAAW,QAAS,CAAC,IAAK,YAAaC,OAAQ,CAAC,CAAC,MAAO,iBAAkB,SAAU,CAAC,MAAO,iBAAkB,QAAS,CAAC,IAAK,mBAAoBC,WAAY,CAAC,CAAC,aAAc,SAAU,CAAC,OAAQ,UAAW,YAAa,CAAC,MAAO,iBAAkB,qB"}