{"version":3,"names":["actionGroupCss","ChActionGroupStyle0","FLOATING_POINT_ERROR","MORE_ACTION_EXPORT_PARTS","concat","DROPDOWN_PARTS_DICTIONARY","EXPANDABLE_BUTTON","ACTION_GROUP_PARTS_DICTIONARY","MORE_ACTIONS_BUTTON","WINDOW","MORE_ACTIONS_WINDOW","ChActionGroup","exports","_a","_needForRAF","set","this","_totalItems","_actionsContainerWatcher","_actionsWatcher","_actionsContainer","_slotItems","_updateDisplayedActions","actionGroupItems","__classPrivateFieldGet","_this","assignedElements","columnGap","getComputedStyle","columnGapValue","endsWith","Number","replace","availableWidth","clientWidth","displayedItems","forEach","action","actionWidth","floating","__classPrivateFieldSet","length","displayedItemsCountChange","emit","_updateDisplayedActionInFrame","requestAnimationFrame","call","_connectActionsObserver","ResizeObserver","observe","_connectActionsContainerObserver","_disconnectActionsObserver","disconnect","_disconnectActionsContainerObserver","_setResponsiveCollapse","itemsOverflowBehavior","_updateActionsWatcher","_handleMoreActionButtonExpand","event","stopPropagation","moreActionsButtonExpandedChange","detail","class_1","prototype","handleOverflowBehaviorChange","newValue","item","componentDidLoad","disconnectedCallback","render","h","Host","key","role","accessibleName","exportparts","class","part","MORE_ACTIONS","actionGroupParent","buttonAccessibleName","moreActionsAccessibleName","leaf","level","nestedDropdown","openOnFocus","position","moreActionsDropdownPosition","onExpandedChange","name","actions","ACTIONS","ref","el","onSlotchange","actionGroupItemCss","ChActionGroupItemStyle0","ChActionGroupItem","class_2","componentWillLoad","parentAction","closest","actionGroupRenderCss","ChActionGroupRenderStyle0","DEFAULT_ACTION_CLASS","DEFAULT_SUB_ACTION_CLASS","ChActionGroupRender","_b","_handleItemClick","target","itemId","itemClickCallback","_getImagePath","img","useGxRender","fromGxImageToURL","gxSettings","gxImageConstructor","_renderItem","responsiveCollapse","index","hasItems","_c","items","dropdownExportParts","id","caption","subActionClass","endImgSrc","endImgType","_d","href","_e","link","url","_f","itemsResponsiveCollapsePosition","itemsPosition","shortcut","startImgSrc","startImgType","_g","wasExpanded","_handleItemExpanded","map","showSeparator","separatorClass","separatorCssClass","_firstLevelRenderItem","mustRenderDummySubElement","wasExpandedInFirstLevel","displayedItemsCount","actionClass","propertyName","forceUpdate","_firstLevelRenderCollapsedItem","slot","wasExpandedInMoreActions","_handleDisplayedItemsCountChange","_handleMoreActionButtonExpandedChange","moreActionsButtonWasExpanded","ACTION_GROUP_EXPORT_PARTS","DROPDOWN_EXPORT_PARTS","class_3","thereAreCollapsedItems","model","actionGroupExportParts","cssClass","onDisplayedItemsCountChange","onMoreActionsButtonExpandedChange","filter","_"],"sources":["src/components/action-group/internal/action-group/action-group.scss?tag=ch-action-group&encapsulation=shadow","src/components/action-group/internal/action-group/action-group.tsx","src/components/action-group/internal/action-group-item/action-group-item.scss?tag=ch-action-group-item","src/components/action-group/internal/action-group-item/action-group-item.tsx","src/components/action-group/action-group-render.scss?tag=ch-action-group-render","src/components/action-group/action-group-render.tsx"],"sourcesContent":["@import \"../../../../common/_base\";\r\n\r\n@include box-sizing();\r\n\r\n:host {\r\n  display: grid;\r\n  position: relative;\r\n  inline-size: 100%;\r\n  block-size: 100%;\r\n  grid-template: \"more-actions actions\" 1fr / min-content 1fr;\r\n  overflow: hidden;\r\n}\r\n\r\n.more-actions {\r\n  grid-area: more-actions;\r\n\r\n  &::part(action) {\r\n    justify-content: center;\r\n    align-self: center;\r\n    inline-size: 1.375em;\r\n    block-size: 1.375em;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      inline-size: 100%;\r\n      block-size: 100%;\r\n      background-color: currentColor;\r\n      -webkit-mask: url('data:image/svg+xml,<svg viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.26837 10.5625C4.16837 10.5625 3.26837 11.4625 3.26837 12.5625C3.26837 13.6625 4.16837 14.5625 5.26837 14.5625C6.36837 14.5625 7.26837 13.6625 7.26837 12.5625C7.26837 11.4625 6.36837 10.5625 5.26837 10.5625ZM19.2684 10.5625C18.1684 10.5625 17.2684 11.4625 17.2684 12.5625C17.2684 13.6625 18.1684 14.5625 19.2684 14.5625C20.3684 14.5625 21.2684 13.6625 21.2684 12.5625C21.2684 11.4625 20.3684 10.5625 19.2684 10.5625ZM12.2684 10.5625C11.1684 10.5625 10.2684 11.4625 10.2684 12.5625C10.2684 13.6625 11.1684 14.5625 12.2684 14.5625C13.3684 14.5625 14.2684 13.6625 14.2684 12.5625C14.2684 11.4625 13.3684 10.5625 12.2684 10.5625Z\"/></svg>')\r\n        50% 50% / 1.25em 1.25em no-repeat;\r\n    }\r\n  }\r\n}\r\n\r\n.actions {\r\n  grid-area: actions;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: max-content;\r\n  inline-size: 100%;\r\n  max-inline-size: 100%;\r\n\r\n  &--responsive {\r\n    position: absolute;\r\n    inset: 0;\r\n  }\r\n\r\n  &--scroll {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  &--multiline {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Element,\r\n  Prop,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n  Watch\r\n} from \"@stencil/core\";\r\nimport { DropdownPosition } from \"../../../dropdown/internal/dropdown/types\";\r\nimport { ItemsOverflowBehavior } from \"./types\";\r\nimport { ChDropdownCustomEvent } from \"../../../../components\";\r\nimport {\r\n  ACTION_GROUP_PARTS_DICTIONARY,\r\n  DROPDOWN_PARTS_DICTIONARY\r\n} from \"../../../../common/reserverd-names\";\r\n\r\nconst FLOATING_POINT_ERROR = 1;\r\n\r\nconst MORE_ACTION_EXPORT_PARTS =\r\n  `${DROPDOWN_PARTS_DICTIONARY.EXPANDABLE_BUTTON}:${ACTION_GROUP_PARTS_DICTIONARY.MORE_ACTIONS_BUTTON},${DROPDOWN_PARTS_DICTIONARY.WINDOW}:${ACTION_GROUP_PARTS_DICTIONARY.MORE_ACTIONS_WINDOW}` as const;\r\n\r\n/**\r\n * @part actions - The container of the visible actions.\r\n * @part more-actions - The ch-dropdown control to show hidden actions when `itemsOverflowBehavior === \"ResponsiveCollapse\"`.\r\n *\r\n * @slot items - The slot for the actions.\r\n * @slot more-items - The slot for the hidden actions when `itemsOverflowBehavior === \"ResponsiveCollapse\"`.\r\n */\r\n@Component({\r\n  tag: \"ch-action-group\",\r\n  styleUrl: \"action-group.scss\",\r\n  shadow: true\r\n})\r\nexport class ChActionGroup {\r\n  #needForRAF = true; // To prevent redundant RAF (request animation frame) calls\r\n\r\n  #totalItems = -1;\r\n\r\n  // Observer\r\n  #actionsContainerWatcher: ResizeObserver;\r\n  #actionsWatcher: ResizeObserver;\r\n\r\n  // Refs\r\n  #actionsContainer: HTMLDivElement;\r\n  #slotItems: HTMLSlotElement;\r\n\r\n  @Element() el: HTMLChActionGroupElement;\r\n\r\n  /**\r\n   * The visible actions when `itemsOverflowBehavior === \"ResponsiveCollapse\"`.\r\n   */\r\n  @State() displayedItems = -1;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element.\r\n   */\r\n  @Prop() readonly accessibleName: string;\r\n\r\n  /**\r\n   * This attribute determines how items behave when the content of the ActionGroup overflows horizontal. This property is needed\r\n   * to make the control responsive to changes in the Width of the container of ActionGroup.\r\n   *\r\n   * | Value                 | Details                                                                                          |\r\n   * | --------------------- | ------------------------------------------------------------------------------------------------ |\r\n   * | `Add Scroll`          | The items of the ActionGroup that overflow horizontally are shown by means of a scroll.          |\r\n   * | `Multiline`           | The ActionGroup items that overflow horizontally are shown in a second line of the control.      |\r\n   * | `Responsive Collapse` | The Action Group items, when they start to overflow the control, are placed in the More Actions. |\r\n   */\r\n  @Prop() readonly itemsOverflowBehavior: ItemsOverflowBehavior =\r\n    \"ResponsiveCollapse\";\r\n  @Watch(\"itemsOverflowBehavior\")\r\n  handleOverflowBehaviorChange(newValue: ItemsOverflowBehavior) {\r\n    if (newValue !== \"ResponsiveCollapse\") {\r\n      const actionGroupItems =\r\n        this.#slotItems.assignedElements() as HTMLChActionGroupItemElement[];\r\n\r\n      // Reset floating\r\n      actionGroupItems.forEach(item => {\r\n        item.floating = false;\r\n      });\r\n    }\r\n\r\n    this.#setResponsiveCollapse();\r\n  }\r\n\r\n  /**\r\n   * This attribute lets you specify the label for the more actions button.\r\n   * Important for accessibility.\r\n   */\r\n  @Prop() readonly moreActionsAccessibleName: string = \"More actions\";\r\n\r\n  /**\r\n   * @todo Check a better convention for this property, for example, \"ActionsInlineAlignment\"\r\n   * This attribute determines the position of the More Actions button in the Action Group.\r\n   *\r\n   * | Value   | Details                                                               |\r\n   * | --------| --------------------------------------------------------------------- |\r\n   * | `Start` | The More Actions Button is displayed to the left of the ActionGroup.  |\r\n   * | `End`   | The More Actions Button is displayed to the right of the ActionGroup. |\r\n   */\r\n  @Prop() readonly moreActionsButtonPosition: \"Start\" | \"End\" = \"Start\";\r\n\r\n  /**\r\n   * Specifies the position of the dropdown section that is placed relative to\r\n   * the more actions button.\r\n   */\r\n  @Prop() readonly moreActionsDropdownPosition: DropdownPosition =\r\n    \"InsideStart_OutsideEnd\";\r\n\r\n  /**\r\n   * Determine if the dropdowns should be opened when the action is focused.\r\n   */\r\n  @Prop() readonly openOnFocus: boolean = false;\r\n\r\n  /**\r\n   * Fired when the item is targeted or not.\r\n   */\r\n  @Event() displayedItemsCountChange: EventEmitter<number>;\r\n\r\n  /**\r\n   * Fired when the more actions button is expanded or collapsed.\r\n   */\r\n  @Event() moreActionsButtonExpandedChange: EventEmitter<boolean>;\r\n\r\n  /**\r\n   * Update the visibility of the actions.\r\n   * Only works if itemsOverflowBehavior === \"ResponsiveCollapse\"\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #updateDisplayedActions = () => {\r\n    const actionGroupItems =\r\n      this.#slotItems.assignedElements() as HTMLChActionGroupItemElement[];\r\n\r\n    // The column-gap property must be taken into account\r\n    const columnGap = getComputedStyle(this.#actionsContainer).columnGap;\r\n    const columnGapValue =\r\n      columnGap != null && columnGap.endsWith(\"px\")\r\n        ? Number(columnGap.replace(\"px\", \"\"))\r\n        : 0;\r\n\r\n    // Since the last item does not add column-gap, we have to adjust the measurement\r\n    let availableWidth =\r\n      this.#actionsContainer.clientWidth +\r\n      columnGapValue -\r\n      FLOATING_POINT_ERROR;\r\n    let displayedItems = 0;\r\n\r\n    // Check which items are visible\r\n    actionGroupItems.forEach(action => {\r\n      const actionWidth = action.clientWidth;\r\n\r\n      availableWidth -= actionWidth + columnGapValue;\r\n\r\n      if (availableWidth >= 0) {\r\n        action.floating = false;\r\n        displayedItems++;\r\n      } else {\r\n        action.floating = true;\r\n      }\r\n    });\r\n\r\n    this.#totalItems = actionGroupItems.length;\r\n    this.displayedItems = displayedItems;\r\n    this.displayedItemsCountChange.emit(displayedItems);\r\n  };\r\n\r\n  #updateDisplayedActionInFrame = () => {\r\n    if (!this.#needForRAF) {\r\n      return;\r\n    }\r\n    this.#needForRAF = false; // No need to call RAF up until next frame\r\n\r\n    requestAnimationFrame(() => {\r\n      this.#needForRAF = true; // RAF now consumes the movement instruction so a new one can come\r\n      this.#updateDisplayedActions();\r\n    });\r\n  };\r\n\r\n  #connectActionsObserver = () => {\r\n    this.#actionsWatcher = new ResizeObserver(\r\n      this.#updateDisplayedActionInFrame\r\n    );\r\n\r\n    // Observe the actions\r\n    const actionGroupItems = this.#slotItems.assignedElements();\r\n    actionGroupItems.forEach(action => {\r\n      this.#actionsWatcher.observe(action);\r\n    });\r\n  };\r\n\r\n  #connectActionsContainerObserver = () => {\r\n    this.#actionsContainerWatcher = new ResizeObserver(\r\n      this.#updateDisplayedActionInFrame\r\n    );\r\n\r\n    this.#actionsContainerWatcher.observe(this.#actionsContainer);\r\n  };\r\n\r\n  #disconnectActionsObserver = () => {\r\n    if (this.#actionsWatcher) {\r\n      this.#actionsWatcher.disconnect();\r\n      this.#actionsWatcher = null;\r\n    }\r\n  };\r\n\r\n  #disconnectActionsContainerObserver = () => {\r\n    if (this.#actionsContainerWatcher) {\r\n      this.#actionsContainerWatcher.disconnect();\r\n      this.#actionsContainerWatcher = null;\r\n    }\r\n  };\r\n\r\n  #setResponsiveCollapse = () => {\r\n    this.#disconnectActionsObserver();\r\n    this.#disconnectActionsContainerObserver();\r\n\r\n    if (this.itemsOverflowBehavior !== \"ResponsiveCollapse\") {\r\n      return;\r\n    }\r\n    this.#connectActionsObserver();\r\n    this.#connectActionsContainerObserver();\r\n  };\r\n\r\n  #updateActionsWatcher = () => {\r\n    if (this.itemsOverflowBehavior !== \"ResponsiveCollapse\") {\r\n      return;\r\n    }\r\n\r\n    // Avoid memory leaks by disconnecting and re-connecting the observer\r\n    this.#disconnectActionsObserver();\r\n    this.#connectActionsObserver();\r\n  };\r\n\r\n  #handleMoreActionButtonExpand = (event: ChDropdownCustomEvent<boolean>) => {\r\n    event.stopPropagation();\r\n    this.moreActionsButtonExpandedChange.emit(event.detail);\r\n  };\r\n\r\n  componentDidLoad() {\r\n    this.#setResponsiveCollapse();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#disconnectActionsObserver();\r\n    this.#disconnectActionsContainerObserver();\r\n  }\r\n\r\n  render() {\r\n    // @todo TODO: Improve accessibility and keyboard navigation\r\n\r\n    return (\r\n      <Host role=\"menubar\" aria-label={this.accessibleName}>\r\n        {this.itemsOverflowBehavior === \"ResponsiveCollapse\" &&\r\n          this.#totalItems !== this.displayedItems && (\r\n            <ch-dropdown\r\n              exportparts={MORE_ACTION_EXPORT_PARTS}\r\n              class=\"more-actions\"\r\n              part={ACTION_GROUP_PARTS_DICTIONARY.MORE_ACTIONS}\r\n              actionGroupParent={true}\r\n              buttonAccessibleName={this.moreActionsAccessibleName}\r\n              leaf={false}\r\n              level={-1}\r\n              nestedDropdown={true}\r\n              openOnFocus={this.openOnFocus}\r\n              position={this.moreActionsDropdownPosition}\r\n              onExpandedChange={this.#handleMoreActionButtonExpand}\r\n            >\r\n              <slot name=\"more-items\"></slot>\r\n            </ch-dropdown>\r\n          )}\r\n\r\n        <div\r\n          class={{\r\n            actions: true,\r\n            \"actions--scroll\": this.itemsOverflowBehavior === \"AddScroll\",\r\n            \"actions--multiline\": this.itemsOverflowBehavior === \"Multiline\",\r\n            \"actions--responsive\":\r\n              this.itemsOverflowBehavior === \"ResponsiveCollapse\"\r\n          }}\r\n          part={ACTION_GROUP_PARTS_DICTIONARY.ACTIONS}\r\n          ref={el => (this.#actionsContainer = el)}\r\n        >\r\n          <slot\r\n            name=\"items\"\r\n            onSlotchange={this.#updateActionsWatcher}\r\n            ref={el => (this.#slotItems = el as HTMLSlotElement)}\r\n          ></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","ch-action-group-item[floating] {\r\n  visibility: hidden;\r\n}\r\n\r\nch-action-group-item {\r\n  display: flex;\r\n}\r\n","import { Component, Element, h, Prop } from \"@stencil/core\";\r\nimport { Component as ChComponent } from \"../../../../common/interfaces\";\r\n\r\n/**\r\n * @slot - The slot where the ch-dropdown-item is placed.\r\n */\r\n@Component({\r\n  tag: \"ch-action-group-item\",\r\n  styleUrl: \"action-group-item.scss\",\r\n  shadow: false\r\n})\r\nexport class ChActionGroupItem implements ChComponent {\r\n  @Element() el: HTMLChActionGroupItemElement;\r\n\r\n  /**\r\n   * `true` if the control is floating. Useful to implement the\r\n   * `\"ResponsiveCollapse\"` value for the `itemsOverflowBehavior` property of\r\n   * the ch-action-group control.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) floating = false;\r\n\r\n  componentWillLoad() {\r\n    const parentAction = this.el.closest(\"ch-action-group\");\r\n\r\n    // Hide items at the start to improve CLS\r\n    if (parentAction) {\r\n      this.floating =\r\n        parentAction.itemsOverflowBehavior === \"ResponsiveCollapse\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <slot />;\r\n  }\r\n}\r\n","ch-action-group-render {\r\n  display: contents;\r\n}\r\n\r\n.ch-dropdown-separator {\r\n  display: grid;\r\n  block-size: 1px;\r\n  background-color: color-mix(in srgb, currentColor 25%, transparent);\r\n  pointer-events: none;\r\n}\r\n\r\n.ch-action-group-separator--vertical {\r\n  display: grid;\r\n  inline-size: 1px;\r\n  background-color: color-mix(in srgb, currentColor 25%, transparent);\r\n  pointer-events: none;\r\n}\r\n","import { Component, forceUpdate, h, Prop, State } from \"@stencil/core\";\r\nimport { ActionGroupItemModel, ActionGroupModel } from \"./types\";\r\nimport { DropdownPosition } from \"../dropdown/internal/dropdown/types\";\r\nimport { ChActionGroupCustomEvent } from \"../../components\";\r\nimport { ItemsOverflowBehavior } from \"./internal/action-group/types\";\r\nimport { fromGxImageToURL } from \"../tree-view/genexus-implementation\";\r\nimport {\r\n  ACTION_GROUP_EXPORT_PARTS,\r\n  DROPDOWN_EXPORT_PARTS\r\n} from \"../../common/reserverd-names\";\r\n\r\nconst DEFAULT_ACTION_CLASS = \"action-group-item\";\r\nconst DEFAULT_SUB_ACTION_CLASS = \"dropdown-item\";\r\n\r\n@Component({\r\n  tag: \"ch-action-group-render\",\r\n  styleUrl: \"action-group-render.scss\",\r\n  shadow: false // Necessary to avoid focus capture\r\n})\r\nexport class ChActionGroupRender {\r\n  @State() displayedItemsCount = -1;\r\n  @State() moreActionsButtonWasExpanded = false;\r\n\r\n  /**\r\n   * Specifies the parts that are exported by the internal action-group. This\r\n   * property is useful to override the exported parts.\r\n   */\r\n  @Prop() readonly actionGroupExportParts: string = ACTION_GROUP_EXPORT_PARTS;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-action-group` element class.\r\n   */\r\n  @Prop() readonly cssClass: string = \"action-group\";\r\n\r\n  /**\r\n   * Specifies the parts that are exported by the internal dropdown. This\r\n   * property is useful to override the exported parts.\r\n   */\r\n  @Prop() readonly dropdownExportParts: string = DROPDOWN_EXPORT_PARTS;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxImageConstructor: (name: string) => any;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxSettings: any;\r\n\r\n  /**\r\n   * This callback is executed when an item is clicked.\r\n   */\r\n  @Prop() readonly itemClickCallback: (\r\n    event: UIEvent,\r\n    target: string,\r\n    itemId: string\r\n  ) => void;\r\n\r\n  /**\r\n   * This attribute determines how items behave when the content of the ActionGroup overflows horizontal. This property is needed\r\n   * to make the control responsive to changes in the Width of the container of ActionGroup.\r\n   *\r\n   * | Value                 | Details                                                                                          |\r\n   * | --------------------- | ------------------------------------------------------------------------------------------------ |\r\n   * | `Add Scroll`          | The items of the ActionGroup that overflow horizontally are shown by means of a scroll.          |\r\n   * | `Multiline`           | The ActionGroup items that overflow horizontally are shown in a second line of the control.      |\r\n   * | `Responsive Collapse` | The Action Group items, when they start to overflow the control, are placed in the More Actions. |\r\n   */\r\n  @Prop() readonly itemsOverflowBehavior: ItemsOverflowBehavior =\r\n    \"ResponsiveCollapse\";\r\n\r\n  /**\r\n   * This property lets you define the model of the ch-action-group control.\r\n   */\r\n  @Prop() readonly model: ActionGroupModel;\r\n\r\n  /**\r\n   * This attribute lets you specify the label for the more actions button.\r\n   * Important for accessibility.\r\n   */\r\n  @Prop() readonly moreActionsAccessibleName: string = \"Show options\";\r\n\r\n  /**\r\n   * Specifies the position of the dropdown section that is placed relative to\r\n   * the more actions button.\r\n   */\r\n  @Prop() readonly moreActionsDropdownPosition: DropdownPosition =\r\n    \"InsideStart_OutsideEnd\";\r\n\r\n  /**\r\n   * Determine if the dropdown section should be opened when the expandable\r\n   * button of the control is focused.\r\n   * TODO: Add implementation\r\n   */\r\n  @Prop() readonly openOnFocus: boolean = false;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-dropdown-item` element class.\r\n   * This default class is used for the items that don't have an explicit class.\r\n   */\r\n  @Prop() readonly separatorCssClass: string =\r\n    \"action-group-separator-horizontal\";\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly useGxRender: boolean = false;\r\n\r\n  // /**\r\n  //  * Fired when the visibility of the dropdown section is changed\r\n  //  */\r\n  // @Event() expandedChange: EventEmitter<boolean>;\r\n\r\n  #handleItemClick = (target: string, itemId: string) => (event: UIEvent) => {\r\n    if (this.itemClickCallback) {\r\n      this.itemClickCallback(event, target, itemId);\r\n    }\r\n  };\r\n\r\n  #getImagePath = (img: string) =>\r\n    this.useGxRender\r\n      ? fromGxImageToURL(img, this.gxSettings, this.gxImageConstructor)\r\n      : img;\r\n\r\n  #renderItem =\r\n    (level: number, responsiveCollapse: boolean) =>\r\n    (item: ActionGroupItemModel, index: number) => {\r\n      const hasItems = item.items?.length > 0;\r\n\r\n      return [\r\n        <ch-dropdown\r\n          exportparts={this.dropdownExportParts}\r\n          key={item.id || item.caption || index}\r\n          id={item.id}\r\n          caption={item.caption}\r\n          class={item.subActionClass || DEFAULT_SUB_ACTION_CLASS}\r\n          endImgSrc={this.#getImagePath(item.endImgSrc)}\r\n          endImgType={item.endImgType ?? \"background\"}\r\n          href={item.link?.url}\r\n          itemClickCallback={this.#handleItemClick(item.link?.url, item.id)}\r\n          leaf={!hasItems}\r\n          level={level}\r\n          openOnFocus={this.openOnFocus}\r\n          position={\r\n            (responsiveCollapse\r\n              ? item.itemsResponsiveCollapsePosition\r\n              : item.itemsPosition) || \"OutsideEnd_InsideStart\"\r\n          }\r\n          shortcut={item.shortcut}\r\n          startImgSrc={this.#getImagePath(item.startImgSrc)}\r\n          startImgType={item.startImgType ?? \"background\"}\r\n          onExpandedChange={\r\n            !item.wasExpanded\r\n              ? this.#handleItemExpanded(item, \"wasExpanded\")\r\n              : null\r\n          }\r\n        >\r\n          {hasItems &&\r\n            item.wasExpanded &&\r\n            item.items.map(this.#renderItem(level + 1, responsiveCollapse))}\r\n\r\n          {\r\n            // Render a dummy element if the control was not expanded and has items\r\n            hasItems && !item.wasExpanded && <ch-dropdown></ch-dropdown>\r\n          }\r\n        </ch-dropdown>,\r\n\r\n        item.showSeparator && (\r\n          <div\r\n            aria-hidden=\"true\"\r\n            class={\r\n              \"ch-dropdown-separator \" +\r\n              (item.separatorClass || this.separatorCssClass)\r\n            }\r\n          ></div>\r\n        )\r\n      ];\r\n    };\r\n\r\n  #firstLevelRenderItem = (\r\n    item: ActionGroupItemModel,\r\n    index: number,\r\n    level: number\r\n  ) => {\r\n    const hasItems = item.items?.length > 0;\r\n\r\n    // Dummy dropdown item to avoid issues when removing all items from the\r\n    // first level. E. g., if the first level adds a chevron when the item is\r\n    // a dropdown, by removing all items the chevron won't be displayed\r\n    const mustRenderDummySubElement =\r\n      hasItems && // Dropdown has items\r\n      (!item.wasExpandedInFirstLevel || // Dropdown was not expanded and has items\r\n        (this.itemsOverflowBehavior === \"ResponsiveCollapse\" && // Dropdown items are collapsed\r\n          this.displayedItemsCount !== -1 &&\r\n          index >= this.displayedItemsCount));\r\n\r\n    return [\r\n      <ch-dropdown\r\n        exportparts={this.dropdownExportParts}\r\n        key={item.id || item.caption || index}\r\n        id={item.id}\r\n        actionGroupParent={true}\r\n        caption={item.caption}\r\n        class={item.actionClass || DEFAULT_ACTION_CLASS}\r\n        endImgSrc={this.#getImagePath(item.endImgSrc)}\r\n        endImgType={item.endImgType ?? \"background\"}\r\n        href={item.link?.url}\r\n        itemClickCallback={this.#handleItemClick(item.link?.url, item.id)}\r\n        leaf={!hasItems}\r\n        level={level}\r\n        openOnFocus={this.openOnFocus}\r\n        position={item.itemsPosition || \"Center_OutsideEnd\"}\r\n        startImgSrc={this.#getImagePath(item.startImgSrc)}\r\n        startImgType={item.startImgType ?? \"background\"}\r\n        onExpandedChange={\r\n          !item.wasExpandedInFirstLevel\r\n            ? this.#handleItemExpanded(item, \"wasExpandedInFirstLevel\")\r\n            : null\r\n        }\r\n      >\r\n        {item.wasExpandedInFirstLevel &&\r\n          this.itemsOverflowBehavior === \"ResponsiveCollapse\" &&\r\n          (this.displayedItemsCount === -1 ||\r\n            index < this.displayedItemsCount) &&\r\n          item.items != null &&\r\n          item.items.map(this.#renderItem(level + 1, false))}\r\n\r\n        {mustRenderDummySubElement && <ch-dropdown></ch-dropdown>}\r\n      </ch-dropdown>,\r\n\r\n      item.showSeparator && (\r\n        <div\r\n          aria-hidden=\"true\"\r\n          class={\r\n            \"ch-action-group-separator--vertical \" +\r\n            (item.separatorClass || this.separatorCssClass)\r\n          }\r\n        ></div>\r\n      )\r\n    ];\r\n  };\r\n\r\n  #handleItemExpanded =\r\n    (\r\n      item: ActionGroupItemModel,\r\n      propertyName: Extract<\r\n        keyof ActionGroupItemModel,\r\n        \"wasExpanded\" | \"wasExpandedInFirstLevel\" | \"wasExpandedInMoreActions\"\r\n      >\r\n    ) =>\r\n    () => {\r\n      item[propertyName] = true;\r\n      forceUpdate(this);\r\n    };\r\n\r\n  #firstLevelRenderCollapsedItem =\r\n    (level: number) => (item: ActionGroupItemModel, index: number) => {\r\n      const hasItems = item.items?.length > 0;\r\n\r\n      return [\r\n        <ch-dropdown\r\n          slot=\"more-items\"\r\n          key={item.id || item.caption || index}\r\n          exportparts={this.dropdownExportParts}\r\n          id={item.id}\r\n          caption={item.caption}\r\n          class={item.subActionClass || DEFAULT_SUB_ACTION_CLASS}\r\n          endImgSrc={this.#getImagePath(item.endImgSrc)}\r\n          endImgType={item.endImgType ?? \"background\"}\r\n          href={item.link?.url}\r\n          itemClickCallback={this.#handleItemClick(item.link?.url, item.id)}\r\n          leaf={!hasItems}\r\n          level={level}\r\n          openOnFocus={this.openOnFocus}\r\n          position={\r\n            item.itemsResponsiveCollapsePosition || \"OutsideEnd_InsideStart\"\r\n          }\r\n          shortcut={item.shortcut}\r\n          startImgSrc={this.#getImagePath(item.startImgSrc)}\r\n          startImgType={item.startImgType ?? \"background\"}\r\n          onExpandedChange={\r\n            !item.wasExpandedInMoreActions\r\n              ? this.#handleItemExpanded(item, \"wasExpandedInMoreActions\")\r\n              : null\r\n          }\r\n        >\r\n          {\r\n            // Render items when the parent is expanded the first time\r\n            hasItems &&\r\n              item.wasExpandedInMoreActions &&\r\n              item.items.map(this.#renderItem(level + 1, true))\r\n          }\r\n\r\n          {\r\n            // Render a dummy element if the control was not expanded and has items\r\n            hasItems && !item.wasExpandedInMoreActions && (\r\n              <ch-dropdown></ch-dropdown>\r\n            )\r\n          }\r\n        </ch-dropdown>,\r\n\r\n        item.showSeparator && (\r\n          <div\r\n            slot=\"more-items\"\r\n            aria-hidden=\"true\"\r\n            class={\r\n              \"ch-dropdown-separator \" +\r\n              (item.separatorClass || this.separatorCssClass)\r\n            }\r\n          ></div>\r\n        )\r\n      ];\r\n    };\r\n\r\n  #handleDisplayedItemsCountChange = (\r\n    event: ChActionGroupCustomEvent<number>\r\n  ) => {\r\n    this.displayedItemsCount = event.detail;\r\n  };\r\n\r\n  #handleMoreActionButtonExpandedChange = () => {\r\n    this.moreActionsButtonWasExpanded = true;\r\n  };\r\n\r\n  render() {\r\n    const thereAreCollapsedItems =\r\n      this.itemsOverflowBehavior === \"ResponsiveCollapse\" &&\r\n      this.moreActionsButtonWasExpanded &&\r\n      this.model != null &&\r\n      this.displayedItemsCount !== -1;\r\n\r\n    return (\r\n      <ch-action-group\r\n        exportparts={this.actionGroupExportParts}\r\n        class={this.cssClass || null}\r\n        itemsOverflowBehavior={this.itemsOverflowBehavior}\r\n        moreActionsAccessibleName={this.moreActionsAccessibleName}\r\n        moreActionsDropdownPosition={this.moreActionsDropdownPosition}\r\n        openOnFocus={this.openOnFocus}\r\n        onDisplayedItemsCountChange={this.#handleDisplayedItemsCountChange}\r\n        onMoreActionsButtonExpandedChange={\r\n          !this.moreActionsButtonWasExpanded\r\n            ? this.#handleMoreActionButtonExpandedChange\r\n            : null\r\n        }\r\n      >\r\n        {this.model != null &&\r\n          this.model.map((item, index) => (\r\n            <ch-action-group-item\r\n              slot=\"items\"\r\n              key={item.id || item.caption || index}\r\n            >\r\n              {this.#firstLevelRenderItem(item, index, 0)}\r\n            </ch-action-group-item>\r\n          ))}\r\n\r\n        {thereAreCollapsedItems &&\r\n          this.model\r\n            .filter((_, index) => index >= this.displayedItemsCount)\r\n            .map(this.#firstLevelRenderCollapsedItem(0))}\r\n      </ch-action-group>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}