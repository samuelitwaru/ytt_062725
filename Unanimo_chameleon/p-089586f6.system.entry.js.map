{"version":3,"names":["chSelectCss","ChSelectStyle0","ChSelect","exports","this","optionSelected","arrowTop","getAssetPath","class_1","prototype","componentDidLoad","_this","ro","ResizeObserver","entries","_i","entries_1","length","entry","calculateSelectWidth","contentBoxSize","inlineSize","calculateSelectHeight","observe","el","optionsContainerEl","width","selectContainerEl","style","height","selectFlexContainerEl","handleKeyDown","ev","key","toggleComponent","closeSelect","toggle","optionClickedHandler","event","targetOption","currentTarget","id","optionClickedEvent","emit","onToggle","visible","resolveIcon","iconSrc","undefined","resolveArrowIcon","arrowIconSrc","render","h","Host","name","role","tabindex","ref","class","part","onClick","src","__decorate","ClickOutside"],"sources":["src/deprecated-components/select/ch-select.scss?tag=ch-select&encapsulation=shadow","src/deprecated-components/select/ch-select.tsx"],"sourcesContent":[":host {\r\n  /**\r\n    * @prop --text-color: The color of the text\r\n    */\r\n  --text-color: var(--black);\r\n  /**\r\n    * @prop --font-family: The select's font family\r\n    */\r\n  --font-family: \"Source Sans Pro\", sans-serif;\r\n  /**\r\n    * @prop --title-font-weight: The select's text font weight\r\n    */\r\n  --title-font-weight: bold;\r\n  /**\r\n    * @prop --font-size: The item's font size\r\n    */\r\n  --font-size: 14px;\r\n  /**\r\n    * @prop --menu-background-color: The background color of the menu\r\n    */\r\n  --background-color: var(--whiteSmoke);\r\n  /**\r\n    * @prop --item-hover-color: The color of the item on hover\r\n    */\r\n  --item-hover-color: var(--lightGray);\r\n  /**\r\n    * @prop --item-active-color: The color of active item\r\n    */\r\n  --item-active-color: var(--silverGray);\r\n  /**\r\n    * @prop --icon-color: The color of the item's icon\r\n    */\r\n  --icon-color: var(--black);\r\n  /**\r\n    * @prop --icon-size: The size of the item's icon\r\n    */\r\n  --icon-size: 20px;\r\n  /**\r\n    * @prop --arrow-color: The color of the arrow icon\r\n    */\r\n  --arrow-color: var(--black);\r\n  /**\r\n    * @prop --padding-left: select's left padding\r\n    */\r\n  --padding-left: 8px;\r\n  /**\r\n    * @prop --padding-right: select's right padding\r\n    */\r\n  --padding-right: 8px;\r\n  /**\r\n    * @prop --justify-content: content position handling\r\n    */\r\n  --justify-content: space-between;\r\n\r\n  display: block;\r\n  cursor: pointer;\r\n  z-index: 10;\r\n\r\n  .icon {\r\n    display: inline-block;\r\n    line-height: 0;\r\n  }\r\n  .text {\r\n    color: var(--text-color);\r\n    font-family: var(--font-family);\r\n    white-space: nowrap;\r\n  }\r\n  .active {\r\n    overflow: hidden;\r\n    transition: max-height 0.5s;\r\n    max-height: 1000px;\r\n  }\r\n  .inactive {\r\n    overflow: hidden;\r\n    max-height: 0;\r\n    transition: max-height 0.32s;\r\n  }\r\n  .list-container {\r\n    background-color: var(--background-color);\r\n    display: flex;\r\n    justify-content: var(--justify-content);\r\n    padding: 6px var(--padding-right) 6px var(--padding-left);\r\n    height: 32px;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    .left-container {\r\n      display: flex;\r\n      align-items: center;\r\n      align-self: center;\r\n      padding-inline-end: 8px;\r\n      .custom-icon {\r\n        margin-inline-end: 8px;\r\n      }\r\n    }\r\n    .arrow-icon {\r\n      transform: rotate(180deg);\r\n      transition: transform 0.25s;\r\n    }\r\n  }\r\n  .select-container.uncollapsed {\r\n    .arrow-icon {\r\n      transform: rotate(0);\r\n    }\r\n  }\r\n  .select-options {\r\n    width: fit-content;\r\n    background-color: var(--background-color);\r\n    position: absolute;\r\n    z-index: 100;\r\n  }\r\n}\r\n","/* eslint-disable @stencil-community/required-jsdoc */\r\nimport {\r\n  Component,\r\n  Element,\r\n  h,\r\n  Prop,\r\n  getAssetPath,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n  Listen,\r\n  Host\r\n} from \"@stencil/core\";\r\n\r\nimport { ClickOutside } from \"stencil-click-outside\";\r\n\r\n@Component({\r\n  tag: \"ch-select\",\r\n  styleUrl: \"ch-select.scss\",\r\n  shadow: true,\r\n  assetsDirs: [\"select-assets\"]\r\n})\r\nexport class ChSelect {\r\n  private optionSelected = \"\";\r\n  private arrowTop: string = getAssetPath(`./select-assets/arrow-top.svg`);\r\n\r\n  /*\r\n    Text to show in the select box when not selected option\r\n    */\r\n  @Prop() readonly name: string;\r\n  /*\r\n   * The select icon (optional)\r\n   */\r\n  @Prop() readonly iconSrc: string;\r\n  /*\r\n   * The select arrow icon (optional)\r\n   */\r\n  @Prop() readonly arrowIconSrc: string;\r\n  /**\r\n   * If enabled, the icon will display its inherent/natural color\r\n   */\r\n  @Prop({ reflect: true }) readonly autoColor = false;\r\n  /*\r\n   * Disables the select\r\n   */\r\n  @Prop() readonly disabled: boolean;\r\n  /*\r\n   * The select width (optional)\r\n   */\r\n  @Prop() readonly width: string;\r\n  /*\r\n   * The select height (optional)\r\n   */\r\n  @Prop() readonly height: string;\r\n  /*\r\n   * This will track state changes (whether the\r\n   * dropdown component is open or closed)\r\n   */\r\n  @State() toggle = false;\r\n\r\n  /**\r\n   * @type EventEmitter\r\n   *\r\n   * Track component events (I.e. activation of dropdown component)\r\n   */\r\n  @Event() onToggle: EventEmitter;\r\n\r\n  /**\r\n   * Emmits the item id\r\n   */\r\n  @Event() optionClickedEvent: EventEmitter;\r\n\r\n  @Element() el: HTMLChSelectElement;\r\n\r\n  // test\r\n  private optionsContainerEl?: HTMLDivElement;\r\n  private selectContainerEl?: HTMLDivElement;\r\n  private selectFlexContainerEl?: HTMLDivElement;\r\n  private ro: ResizeObserver;\r\n\r\n  componentDidLoad() {\r\n    this.ro = new ResizeObserver(entries => {\r\n      for (const entry of entries) {\r\n        this.calculateSelectWidth(entry.contentBoxSize[0].inlineSize);\r\n        this.calculateSelectHeight();\r\n      }\r\n    });\r\n    this.ro.observe(this.el);\r\n    this.ro.observe(this.optionsContainerEl);\r\n  }\r\n\r\n  calculateSelectWidth(width) {\r\n    if (width !== 0) {\r\n      this.selectContainerEl.style.width = width + \"px\";\r\n    }\r\n  }\r\n\r\n  calculateSelectHeight() {\r\n    if (this.height !== \"\" && this.height) {\r\n      this.selectFlexContainerEl.style.height = this.height;\r\n    }\r\n  }\r\n\r\n  @Listen(\"keydown\", { passive: true })\r\n  handleKeyDown(ev: KeyboardEvent) {\r\n    switch (ev.key) {\r\n      case \" \":\r\n        this.toggleComponent();\r\n        break;\r\n      case \"ArrowDown\" || \"ArrowUp\":\r\n        // todo\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @ClickOutside()\r\n  closeSelect() {\r\n    // close the select when user clicks outside of component area.\r\n    if (this.toggle) {\r\n      this.toggleComponent();\r\n    }\r\n  }\r\n\r\n  @Listen(\"itemClicked\")\r\n  optionClickedHandler(event) {\r\n    const targetOption = event.currentTarget.id;\r\n    this.toggleComponent();\r\n    this.optionClickedEvent.emit({ \"option-value\": targetOption });\r\n  }\r\n  /*\r\n   * This will manage the dropdown component event and state changes\r\n   */\r\n  toggleComponent(): void {\r\n    this.toggle = !this.toggle;\r\n    // When the user click emit the toggle state value\r\n    this.onToggle.emit({ visible: this.toggle });\r\n  }\r\n\r\n  resolveIcon() {\r\n    if (this.iconSrc !== undefined) {\r\n      return this.iconSrc;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  resolveArrowIcon() {\r\n    if (this.arrowIconSrc !== undefined) {\r\n      return this.arrowIconSrc;\r\n    }\r\n    return this.arrowTop;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        aria-label={this.name}\r\n        role=\"listbox\"\r\n        aria-expanded={this.toggle ? \"true\" : \"false\"}\r\n        tabindex=\"0\"\r\n      >\r\n        <div\r\n          ref={el => (this.selectContainerEl = el as HTMLDivElement)}\r\n          class={\r\n            this.toggle\r\n              ? \"select-container uncollapsed\"\r\n              : \"select-container collapsed\"\r\n          }\r\n        >\r\n          <div\r\n            class=\"list-container\"\r\n            part=\"select-box\"\r\n            onClick={() => this.toggleComponent()}\r\n            ref={el => (this.selectFlexContainerEl = el as HTMLDivElement)}\r\n          >\r\n            <div class=\"left-container\">\r\n              {this.iconSrc && (\r\n                <span class=\"icon custom-icon\">\r\n                  <ch-icon\r\n                    src={this.resolveIcon()}\r\n                    style={{\r\n                      \"--select-icon-size\": \"var(--icon-size)\",\r\n                      \"--select-icon-color\": `var(--icon-color)`\r\n                    }}\r\n                  ></ch-icon>\r\n                </span>\r\n              )}\r\n              <span class=\"text\">\r\n                {this.optionSelected ? this.optionSelected : this.name}\r\n              </span>\r\n            </div>\r\n            <span class=\"icon arrow-icon\">\r\n              <div part=\"collapse-icon\"></div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          ref={el => (this.optionsContainerEl = el as HTMLDivElement)}\r\n          class={\r\n            this.toggle ? \"select-options active\" : \"select-options inactive\"\r\n          }\r\n          part=\"select-options\"\r\n        >\r\n          <slot></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}