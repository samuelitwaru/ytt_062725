{"version":3,"names":["g","Object","defineProperty","l","getOwnPropertyDescriptor","d","getOwnPropertyNames","m","prototype","hasOwnProperty","c","o","e","a","r","t","call","get","enumerable","_i","_a","length","n","p","x","wordPattern","comments","lineComment","blockComment","brackets","onEnterRules","beforeText","afterText","action","indentAction","languages","IndentAction","IndentOutdent","appendText","None","removeText","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","u","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","common","cases","token","bracket","next","whitespace","comment","jsdoc","regexp","regexrange","string_double","string_single","string_backtick","bracketCounting","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/typescript-BUZ8SMH5.js"],"sourcesContent":["import { m as p } from \"./monaco-BGD7mUXf.js\";\nvar i, s, g = Object.defineProperty, l = Object.getOwnPropertyDescriptor, d = Object.getOwnPropertyNames, m = Object.prototype.hasOwnProperty, c = (o, e, a, r) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\")\n    for (let t of d(e))\n      m.call(o, t) || t === a || g(o, t, { get: () => e[t], enumerable: !(r = l(e, t)) || r.enumerable });\n  return o;\n}, n = {};\nc(n, i = p, \"default\"), s && c(s, i, \"default\");\nvar x = { wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g, comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], onEnterRules: [{ beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/, afterText: /^\\s*\\*\\/$/, action: { indentAction: n.languages.IndentAction.IndentOutdent, appendText: \" * \" } }, { beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/, action: { indentAction: n.languages.IndentAction.None, appendText: \" * \" } }, { beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/, action: { indentAction: n.languages.IndentAction.None, appendText: \"* \" } }, { beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/, action: { indentAction: n.languages.IndentAction.None, removeText: 1 } }], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"', notIn: [\"string\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] }, { open: \"/**\", close: \" */\", notIn: [\"string\"] }], folding: { markers: { start: new RegExp(\"^\\\\s*//\\\\s*#?region\\\\b\"), end: new RegExp(\"^\\\\s*//\\\\s*#?endregion\\\\b\") } } }, u = { defaultToken: \"invalid\", tokenPostfix: \".ts\", keywords: [\"abstract\", \"any\", \"as\", \"asserts\", \"bigint\", \"boolean\", \"break\", \"case\", \"catch\", \"class\", \"continue\", \"const\", \"constructor\", \"debugger\", \"declare\", \"default\", \"delete\", \"do\", \"else\", \"enum\", \"export\", \"extends\", \"false\", \"finally\", \"for\", \"from\", \"function\", \"get\", \"if\", \"implements\", \"import\", \"in\", \"infer\", \"instanceof\", \"interface\", \"is\", \"keyof\", \"let\", \"module\", \"namespace\", \"never\", \"new\", \"null\", \"number\", \"object\", \"out\", \"package\", \"private\", \"protected\", \"public\", \"override\", \"readonly\", \"require\", \"global\", \"return\", \"satisfies\", \"set\", \"static\", \"string\", \"super\", \"switch\", \"symbol\", \"this\", \"throw\", \"true\", \"try\", \"type\", \"typeof\", \"undefined\", \"unique\", \"unknown\", \"var\", \"void\", \"while\", \"with\", \"yield\", \"async\", \"await\", \"of\"], operators: [\"<=\", \">=\", \"==\", \"!=\", \"===\", \"!==\", \"=>\", \"+\", \"-\", \"**\", \"*\", \"/\", \"%\", \"++\", \"--\", \"<<\", \"</\", \">>\", \">>>\", \"&\", \"|\", \"^\", \"!\", \"~\", \"&&\", \"||\", \"??\", \"?\", \":\", \"=\", \"+=\", \"-=\", \"*=\", \"**=\", \"/=\", \"%=\", \"<<=\", \">>=\", \">>>=\", \"&=\", \"|=\", \"^=\", \"@\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, digits: /\\d+(_+\\d+)*/, octaldigits: /[0-7]+(_+[0-7]+)*/, binarydigits: /[0-1]+(_+[0-1]+)*/, hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/, regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/, regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/, tokenizer: { root: [[/[{}]/, \"delimiter.bracket\"], { include: \"common\" }], common: [[/#?[a-z_$][\\w$]*/, { cases: { \"@keywords\": \"keyword\", \"@default\": \"identifier\" } }], [/[A-Z][\\w\\$]*/, \"type.identifier\"], { include: \"@whitespace\" }, [/\\/(?=([^\\\\\\/]|\\\\.)+\\/([dgimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/, { token: \"regexp\", bracket: \"@open\", next: \"@regexp\" }], [/[()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/!(?=([^=]|$))/, \"delimiter\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/(@digits)[eE]([\\-+]?(@digits))?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, \"number.float\"], [/0[xX](@hexdigits)n?/, \"number.hex\"], [/0[oO]?(@octaldigits)n?/, \"number.octal\"], [/0[bB](@binarydigits)n?/, \"number.binary\"], [/(@digits)n?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string_double\"], [/'/, \"string\", \"@string_single\"], [/`/, \"string\", \"@string_backtick\"]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@jsdoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], jsdoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]], regexp: [[/(\\{)(\\d+(?:,\\d*)?)(\\})/, [\"regexp.escape.control\", \"regexp.escape.control\", \"regexp.escape.control\"]], [/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, [\"regexp.escape.control\", { token: \"regexp.escape.control\", next: \"@regexrange\" }]], [/(\\()(\\?:|\\?=|\\?!)/, [\"regexp.escape.control\", \"regexp.escape.control\"]], [/[()]/, \"regexp.escape.control\"], [/@regexpctl/, \"regexp.escape.control\"], [/[^\\\\\\/]/, \"regexp\"], [/@regexpesc/, \"regexp.escape\"], [/\\\\\\./, \"regexp.invalid\"], [/(\\/)([dgimsuy]*)/, [{ token: \"regexp\", bracket: \"@close\", next: \"@pop\" }, \"keyword.other\"]]], regexrange: [[/-/, \"regexp.escape.control\"], [/\\^/, \"regexp.invalid\"], [/@regexpesc/, \"regexp.escape\"], [/[^\\]]/, \"regexp\"], [/\\]/, { token: \"regexp.escape.control\", next: \"@pop\", bracket: \"@close\" }]], string_double: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]], string_single: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, \"string\", \"@pop\"]], string_backtick: [[/\\$\\{/, { token: \"delimiter.bracket\", next: \"@bracketCounting\" }], [/[^\\\\`$]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/`/, \"string\", \"@pop\"]], bracketCounting: [[/\\{/, \"delimiter.bracket\", \"@bracketCounting\"], [/\\}/, \"delimiter.bracket\", \"@pop\"], { include: \"common\" }] } };\nexport {\n  x as conf,\n  u as language\n};\n"],"mappings":"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"}