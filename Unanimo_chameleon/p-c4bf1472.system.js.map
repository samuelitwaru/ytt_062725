{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","n","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/st-CwX2pLFB.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"(*\", \"*)\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"var\", \"end_var\"], [\"var_input\", \"end_var\"], [\"var_output\", \"end_var\"], [\"var_in_out\", \"end_var\"], [\"var_temp\", \"end_var\"], [\"var_global\", \"end_var\"], [\"var_access\", \"end_var\"], [\"var_external\", \"end_var\"], [\"type\", \"end_type\"], [\"struct\", \"end_struct\"], [\"program\", \"end_program\"], [\"function\", \"end_function\"], [\"function_block\", \"end_function_block\"], [\"action\", \"end_action\"], [\"step\", \"end_step\"], [\"initial_step\", \"end_step\"], [\"transaction\", \"end_transaction\"], [\"configuration\", \"end_configuration\"], [\"tcp\", \"end_tcp\"], [\"recource\", \"end_recource\"], [\"channel\", \"end_channel\"], [\"library\", \"end_library\"], [\"folder\", \"end_folder\"], [\"binaries\", \"end_binaries\"], [\"includes\", \"end_includes\"], [\"sources\", \"end_sources\"]], autoClosingPairs: [{ open: \"[\", close: \"]\" }, { open: \"{\", close: \"}\" }, { open: \"(\", close: \")\" }, { open: \"/*\", close: \"*/\" }, { open: \"'\", close: \"'\", notIn: [\"string_sq\"] }, { open: '\"', close: '\"', notIn: [\"string_dq\"] }, { open: \"var_input\", close: \"end_var\" }, { open: \"var_output\", close: \"end_var\" }, { open: \"var_in_out\", close: \"end_var\" }, { open: \"var_temp\", close: \"end_var\" }, { open: \"var_global\", close: \"end_var\" }, { open: \"var_access\", close: \"end_var\" }, { open: \"var_external\", close: \"end_var\" }, { open: \"type\", close: \"end_type\" }, { open: \"struct\", close: \"end_struct\" }, { open: \"program\", close: \"end_program\" }, { open: \"function\", close: \"end_function\" }, { open: \"function_block\", close: \"end_function_block\" }, { open: \"action\", close: \"end_action\" }, { open: \"step\", close: \"end_step\" }, { open: \"initial_step\", close: \"end_step\" }, { open: \"transaction\", close: \"end_transaction\" }, { open: \"configuration\", close: \"end_configuration\" }, { open: \"tcp\", close: \"end_tcp\" }, { open: \"recource\", close: \"end_recource\" }, { open: \"channel\", close: \"end_channel\" }, { open: \"library\", close: \"end_library\" }, { open: \"folder\", close: \"end_folder\" }, { open: \"binaries\", close: \"end_binaries\" }, { open: \"includes\", close: \"end_includes\" }, { open: \"sources\", close: \"end_sources\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }, { open: \"var\", close: \"end_var\" }, { open: \"var_input\", close: \"end_var\" }, { open: \"var_output\", close: \"end_var\" }, { open: \"var_in_out\", close: \"end_var\" }, { open: \"var_temp\", close: \"end_var\" }, { open: \"var_global\", close: \"end_var\" }, { open: \"var_access\", close: \"end_var\" }, { open: \"var_external\", close: \"end_var\" }, { open: \"type\", close: \"end_type\" }, { open: \"struct\", close: \"end_struct\" }, { open: \"program\", close: \"end_program\" }, { open: \"function\", close: \"end_function\" }, { open: \"function_block\", close: \"end_function_block\" }, { open: \"action\", close: \"end_action\" }, { open: \"step\", close: \"end_step\" }, { open: \"initial_step\", close: \"end_step\" }, { open: \"transaction\", close: \"end_transaction\" }, { open: \"configuration\", close: \"end_configuration\" }, { open: \"tcp\", close: \"end_tcp\" }, { open: \"recource\", close: \"end_recource\" }, { open: \"channel\", close: \"end_channel\" }, { open: \"library\", close: \"end_library\" }, { open: \"folder\", close: \"end_folder\" }, { open: \"binaries\", close: \"end_binaries\" }, { open: \"includes\", close: \"end_includes\" }, { open: \"sources\", close: \"end_sources\" }], folding: { markers: { start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"), end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\") } } }, n = { defaultToken: \"\", tokenPostfix: \".st\", ignoreCase: !0, brackets: [{ token: \"delimiter.curly\", open: \"{\", close: \"}\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }, { token: \"delimiter.square\", open: \"[\", close: \"]\" }], keywords: [\"if\", \"end_if\", \"elsif\", \"else\", \"case\", \"of\", \"to\", \"__try\", \"__catch\", \"__finally\", \"do\", \"with\", \"by\", \"while\", \"repeat\", \"end_while\", \"end_repeat\", \"end_case\", \"for\", \"end_for\", \"task\", \"retain\", \"non_retain\", \"constant\", \"with\", \"at\", \"exit\", \"return\", \"interval\", \"priority\", \"address\", \"port\", \"on_channel\", \"then\", \"iec\", \"file\", \"uses\", \"version\", \"packagetype\", \"displayname\", \"copyright\", \"summary\", \"vendor\", \"common_source\", \"from\", \"extends\", \"implements\"], constant: [\"false\", \"true\", \"null\"], defineKeywords: [\"var\", \"var_input\", \"var_output\", \"var_in_out\", \"var_temp\", \"var_global\", \"var_access\", \"var_external\", \"end_var\", \"type\", \"end_type\", \"struct\", \"end_struct\", \"program\", \"end_program\", \"function\", \"end_function\", \"function_block\", \"end_function_block\", \"interface\", \"end_interface\", \"method\", \"end_method\", \"property\", \"end_property\", \"namespace\", \"end_namespace\", \"configuration\", \"end_configuration\", \"tcp\", \"end_tcp\", \"resource\", \"end_resource\", \"channel\", \"end_channel\", \"library\", \"end_library\", \"folder\", \"end_folder\", \"binaries\", \"end_binaries\", \"includes\", \"end_includes\", \"sources\", \"end_sources\", \"action\", \"end_action\", \"step\", \"initial_step\", \"end_step\", \"transaction\", \"end_transaction\"], typeKeywords: [\"int\", \"sint\", \"dint\", \"lint\", \"usint\", \"uint\", \"udint\", \"ulint\", \"real\", \"lreal\", \"time\", \"date\", \"time_of_day\", \"date_and_time\", \"string\", \"bool\", \"byte\", \"word\", \"dword\", \"array\", \"pointer\", \"lword\"], operators: [\"=\", \">\", \"<\", \":\", \":=\", \"<=\", \">=\", \"<>\", \"&\", \"+\", \"-\", \"*\", \"**\", \"MOD\", \"^\", \"or\", \"and\", \"not\", \"xor\", \"abs\", \"acos\", \"asin\", \"atan\", \"cos\", \"exp\", \"expt\", \"ln\", \"log\", \"sin\", \"sqrt\", \"tan\", \"sel\", \"max\", \"min\", \"limit\", \"mux\", \"shl\", \"shr\", \"rol\", \"ror\", \"indexof\", \"sizeof\", \"adr\", \"adrinst\", \"bitadr\", \"is_valid\", \"ref\", \"ref_to\"], builtinVariables: [], builtinFunctions: [\"sr\", \"rs\", \"tp\", \"ton\", \"tof\", \"eq\", \"ge\", \"le\", \"lt\", \"ne\", \"round\", \"trunc\", \"ctd\", \"сtu\", \"ctud\", \"r_trig\", \"f_trig\", \"move\", \"concat\", \"delete\", \"find\", \"insert\", \"left\", \"len\", \"replace\", \"right\", \"rtc\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/(\\.\\.)/, \"delimiter\"], [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, \"number.hex\"], [/\\b(2#[01\\_]+)+\\b/, \"number.binary\"], [/\\b(8#[0-9\\_]*)+\\b/, \"number.octal\"], [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, \"number.float\"], [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, \"number.float\"], [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, \"number\"], [/\\d+/, \"number\"], [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, \"tag\"], [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, \"tag\"], [/\\%(I|Q|M)[0-9\\.]*/, \"tag\"], [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, \"tag\"], [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, \"predefined\"], [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, \"predefined\"], [/[;]/, \"delimiter\"], [/[.]/, { token: \"delimiter\", next: \"@params\" }], [/[a-zA-Z_]\\w*/, { cases: { \"@operators\": \"operators\", \"@keywords\": \"keyword\", \"@typeKeywords\": \"type\", \"@defineKeywords\": \"variable\", \"@constant\": \"constant\", \"@builtinVariables\": \"predefined\", \"@builtinFunctions\": \"predefined\", \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string_dq\" }], [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@string_sq\" }], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], params: [[/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: \"identifier\", next: \"@pop\" }], [/\\b[A-Za-z0-9_]+\\b/, \"variable.name\", \"@pop\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@push\"], [\"\\\\*/\", \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], comment2: [[/[^\\(*]+/, \"comment\"], [/\\(\\*/, \"comment\", \"@push\"], [\"\\\\*\\\\)\", \"comment\", \"@pop\"], [/[\\(*]/, \"comment\"]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\/.*$/, \"comment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\(\\*/, \"comment\", \"@comment2\"]], string_dq: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]], string_sq: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]] } };\nexport {\n  e as conf,\n  n as language\n};\n"],"mappings":"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"}