{"version":3,"names":["SHORTCUTS","Map","LATEST_SHORTCUT","loadShortcuts","name","root","shortcuts","forEach","shortcut","keyShortcuts","parseKeyShortcuts","keyShortcut","normalizedKeyShortcut","normalize","ctrl","alt","shift","meta","key","set","addListener","unloadShortcuts","removeKeyShortcuts","shortcutMap","push","delete","removeListener","getShortcuts","Array","from","values","filter","_a","conditions","focusInclude","map","element","querySelectorPlus","selector","legendPosition","size","window","addEventListener","keydownHandler","capture","removeEventListener","eventInfo","repeat","allowRepeat","triggerShortcut","ctrlKey","altKey","shiftKey","metaKey","get","focus","focusComposedPath","keyShortcutPressedEvent","createEvent","id","dispatchEvent","action","Event","preventDefault","value","split","item","reduce","toLowerCase","charAt","toUpperCase","slice","join","querySelectorAllPlus","some","el","includes","_b","focusExclude","target","CustomEvent","bubbles","cancelable","composed","detail","selectorItem","querySelectorAll","flat","querySelectorDeep","parts","shadow","shadowRoot","partList","partElement","querySelector","partName","concat","exportPartElement","exportPartList_1","exportparts_1","getAttribute","partItem","exportPartName","match","length","selectorItems","entity","chShortcutsCss","ChShortcutsStyle0","KEY_SYMBOL","ChShortcuts","exports","this","windowClosedHandler","_this","showShortcuts","class_1","prototype","suspendHandler","suspend","src","getRootNode","componentDidLoad","fetch","then","response","ok","json","disconnectedCallback","windowKeyDownHandler","modifierKeys","showKey","renderShortcuts","h","container","modal","hidden","closeOnEscape","closeOnOutsideClick","xAlign","yAlign","onWindowClosed","exportparts","renderKeyShortcuts","i","items","part","render","Host"],"sources":["src/components/shortcuts/ch-shortcuts-manager.ts","src/components/shortcuts/ch-shortcuts.scss?tag=ch-shortcuts&encapsulation=shadow","src/components/shortcuts/ch-shortcuts.tsx"],"sourcesContent":["import { focusComposedPath } from \"../common/helpers\";\r\n\r\nconst SHORTCUTS = new Map<string, ShortcutMap>();\r\nlet LATEST_SHORTCUT: ShortcutMap;\r\n\r\nexport function loadShortcuts(\r\n  name: string,\r\n  root: Document | ShadowRoot,\r\n  shortcuts: Shortcut[]\r\n) {\r\n  shortcuts.forEach(shortcut => {\r\n    const keyShortcuts = parseKeyShortcuts(shortcut.keyShortcuts);\r\n    keyShortcuts.forEach(keyShortcut => {\r\n      const normalizedKeyShortcut = normalize(\r\n        keyShortcut.ctrl,\r\n        keyShortcut.alt,\r\n        keyShortcut.shift,\r\n        keyShortcut.meta,\r\n        keyShortcut.key\r\n      );\r\n\r\n      SHORTCUTS.set(normalizedKeyShortcut, {\r\n        name,\r\n        root,\r\n        shortcut\r\n      });\r\n    });\r\n  });\r\n\r\n  addListener();\r\n}\r\n\r\nexport function unloadShortcuts(name: string) {\r\n  const removeKeyShortcuts: string[] = [];\r\n\r\n  SHORTCUTS.forEach((shortcutMap, key) => {\r\n    if (shortcutMap.name === name) {\r\n      removeKeyShortcuts.push(key);\r\n    }\r\n  });\r\n\r\n  removeKeyShortcuts.forEach(key => SHORTCUTS.delete(key));\r\n  removeListener();\r\n}\r\n\r\nexport function getShortcuts(name: string): {\r\n  element: HTMLElement;\r\n  keyShortcuts: string;\r\n  legendPosition: string;\r\n}[] {\r\n  return Array.from(SHORTCUTS.values())\r\n    .filter(shortcutMap => {\r\n      return (\r\n        shortcutMap.name === name &&\r\n        !shortcutMap.shortcut.conditions?.focusInclude\r\n      );\r\n    })\r\n    .map(shortcutMap => ({\r\n      element: querySelectorPlus(\r\n        shortcutMap.shortcut.selector,\r\n        shortcutMap.root\r\n      ) as HTMLElement,\r\n      keyShortcuts: shortcutMap.shortcut.keyShortcuts,\r\n      legendPosition: shortcutMap.shortcut.legendPosition\r\n    }));\r\n}\r\n\r\nfunction addListener() {\r\n  if (SHORTCUTS.size > 0) {\r\n    window.addEventListener(\"keydown\", keydownHandler, { capture: true });\r\n  }\r\n}\r\n\r\nfunction removeListener() {\r\n  if (SHORTCUTS.size === 0) {\r\n    window.removeEventListener(\"keydown\", keydownHandler, { capture: true });\r\n  }\r\n}\r\n\r\nfunction keydownHandler(eventInfo: KeyboardEvent) {\r\n  if (\r\n    !eventInfo.repeat ||\r\n    (eventInfo.repeat && LATEST_SHORTCUT?.shortcut.conditions?.allowRepeat)\r\n  ) {\r\n    LATEST_SHORTCUT = triggerShortcut(eventInfo);\r\n  }\r\n}\r\n\r\nfunction triggerShortcut(eventInfo: KeyboardEvent): ShortcutMap {\r\n  const shortcut = normalize(\r\n    eventInfo.ctrlKey,\r\n    eventInfo.altKey,\r\n    eventInfo.shiftKey,\r\n    eventInfo.metaKey,\r\n    eventInfo.key\r\n  );\r\n  const shortcutMap = SHORTCUTS.get(shortcut);\r\n  const focus = focusComposedPath();\r\n\r\n  if (shortcutMap && conditions(shortcutMap, focus)) {\r\n    const element = querySelectorPlus(\r\n      shortcutMap.shortcut.selector,\r\n      shortcutMap.root\r\n    ) as HTMLElement;\r\n    const keyShortcutPressedEvent = createEvent(\r\n      shortcut,\r\n      shortcutMap.shortcut.id,\r\n      element,\r\n      focus\r\n    );\r\n\r\n    if (shortcutMap.root.dispatchEvent(keyShortcutPressedEvent)) {\r\n      switch (shortcutMap.shortcut.action) {\r\n        case \"click\":\r\n          element?.dispatchEvent(new Event(\"click\"));\r\n          break;\r\n        default:\r\n          element?.focus();\r\n      }\r\n\r\n      if (shortcutMap.shortcut.preventDefault !== false) {\r\n        eventInfo.preventDefault();\r\n      }\r\n    } else {\r\n      eventInfo.preventDefault();\r\n    }\r\n  }\r\n\r\n  return shortcutMap;\r\n}\r\n\r\nfunction parseKeyShortcuts(value = \"\"): KeyShortcut[] {\r\n  return value.split(/(?<!(?:[+]|^))\\s/).map(item => {\r\n    return item.split(/(?<!(?:[+]|^))[+]/).reduce(\r\n      (keyShortcut: KeyShortcut, key: string) => {\r\n        switch (key.toLowerCase()) {\r\n          case \"ctrl\":\r\n            keyShortcut.ctrl = true;\r\n            break;\r\n          case \"alt\":\r\n            keyShortcut.alt = true;\r\n            break;\r\n          case \"shift\":\r\n            keyShortcut.shift = true;\r\n            break;\r\n          case \"meta\":\r\n            keyShortcut.meta = true;\r\n            break;\r\n          default:\r\n            keyShortcut.key = key;\r\n        }\r\n        return keyShortcut;\r\n      },\r\n      {\r\n        ctrl: false,\r\n        alt: false,\r\n        shift: false,\r\n        meta: false,\r\n        key: \"\"\r\n      } as KeyShortcut\r\n    );\r\n  });\r\n}\r\n\r\nfunction normalize(\r\n  ctrl: boolean,\r\n  alt: boolean,\r\n  shift: boolean,\r\n  meta: boolean,\r\n  key: string\r\n): string {\r\n  return [\r\n    ctrl ? \"Ctrl\" : null,\r\n    alt ? \"Alt\" : null,\r\n    shift ? \"Shift\" : null,\r\n    meta ? \"Meta\" : null,\r\n    key ? key.charAt(0).toUpperCase() + key.slice(1) : null\r\n  ]\r\n    .filter(element => {\r\n      return element !== null;\r\n    })\r\n    .join(\"+\");\r\n}\r\n\r\nfunction conditions(shortcutMap: ShortcutMap, focus: HTMLElement[]): boolean {\r\n  if (shortcutMap.shortcut.conditions?.focusInclude) {\r\n    return querySelectorAllPlus(\r\n      shortcutMap.shortcut.conditions.focusInclude,\r\n      shortcutMap.root\r\n    ).some((el: HTMLElement) => focus.includes(el));\r\n  }\r\n  if (shortcutMap.shortcut.conditions?.focusExclude) {\r\n    return !querySelectorAllPlus(\r\n      shortcutMap.shortcut.conditions.focusExclude,\r\n      shortcutMap.root\r\n    ).some((el: HTMLElement) => focus.includes(el));\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction createEvent(\r\n  keyShortcut: string,\r\n  id: string,\r\n  target: HTMLElement,\r\n  focusComposedPath: HTMLElement[]\r\n): CustomEvent {\r\n  return new CustomEvent<KeyShortcutPressedEvent>(\"keyShortcutPressed\", {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    composed: false,\r\n    detail: {\r\n      keyShortcut,\r\n      id: id,\r\n      target,\r\n      focusComposedPath\r\n    }\r\n  });\r\n}\r\n\r\nfunction querySelectorAllPlus(\r\n  selector: string,\r\n  root: Document | ShadowRoot\r\n): HTMLElement[] {\r\n  return (\r\n    selector\r\n      ?.split(\",\")\r\n      .map(selectorItem => {\r\n        if (selector.includes(\"::part\")) {\r\n          return querySelectorPlus(selectorItem, root);\r\n        }\r\n        return Array.from(root.querySelectorAll(selector)) as HTMLElement[];\r\n      })\r\n      .flat() ?? []\r\n  );\r\n}\r\n\r\nfunction querySelectorPlus(\r\n  selector: string,\r\n  root: Document | ShadowRoot\r\n): HTMLElement {\r\n  const querySelectorDeep = (\r\n    element: HTMLElement,\r\n    parts: string\r\n  ): HTMLElement => {\r\n    const shadow = element.shadowRoot;\r\n    const partList = parts.split(\" \");\r\n\r\n    const partElement: HTMLElement = shadow.querySelector(\r\n      partList.map(partName => `[part~=\"${partName}\"]`).join(\"\")\r\n    );\r\n    if (partElement) {\r\n      return partElement;\r\n    }\r\n\r\n    const exportPartElement: HTMLElement = shadow.querySelector(\r\n      partList.map(partName => `[exportparts*=\"${partName}\"]`).join(\"\")\r\n    );\r\n    if (exportPartElement) {\r\n      const exportPartList: string[] = [];\r\n      const exportparts = exportPartElement.getAttribute(\"exportparts\");\r\n\r\n      partList.forEach(partItem => {\r\n        const exportPartName = exportparts.match(\r\n          `(?:([\\\\w-]+):)?(${partItem})`\r\n        )[1];\r\n        if (exportPartName) {\r\n          exportPartList.push(exportPartName);\r\n        }\r\n      });\r\n\r\n      if (partList.length === exportPartList.length) {\r\n        return querySelectorDeep(exportPartElement, exportPartList.join(\" \"));\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  if (selector?.includes(\"::part\")) {\r\n    const selectorItems = selector.match(\"(.*)::part\\\\(([^)]+)\\\\)\");\r\n    const entity = selectorItems[1];\r\n    const partName = selectorItems[2];\r\n\r\n    return querySelectorDeep(root.querySelector(entity), partName);\r\n  }\r\n  return root.querySelector(selector);\r\n}\r\n\r\ninterface ShortcutMap {\r\n  name: string;\r\n  root: Document | ShadowRoot;\r\n  shortcut: Shortcut;\r\n}\r\n\r\nexport interface Shortcut {\r\n  keyShortcuts: string;\r\n  id?: string;\r\n  selector?: string;\r\n  preventDefault?: boolean;\r\n  conditions?: {\r\n    focusInclude?: string;\r\n    focusExclude?: string;\r\n    allowRepeat?: boolean;\r\n  };\r\n  legendPosition?: string;\r\n  action?: \"focus\" | \"click\";\r\n}\r\n\r\nexport type KeyShortcut = {\r\n  key: string;\r\n  ctrl: boolean;\r\n  alt: boolean;\r\n  shift: boolean;\r\n  meta: boolean;\r\n};\r\n\r\nexport interface KeyShortcutPressedEvent {\r\n  id: string;\r\n  keyShortcut: string;\r\n  target: HTMLElement;\r\n  focusComposedPath: HTMLElement[];\r\n}\r\n",":host {\r\n  display: contents;\r\n}\r\n","import {\r\n  Component,\r\n  Prop,\r\n  Listen,\r\n  State,\r\n  Host,\r\n  h,\r\n  Element,\r\n  Watch\r\n} from \"@stencil/core\";\r\nimport {\r\n  Shortcut,\r\n  getShortcuts,\r\n  loadShortcuts,\r\n  unloadShortcuts\r\n} from \"./ch-shortcuts-manager\";\r\n\r\nconst KEY_SYMBOL = {\r\n  \" \": \"\\u2334\"\r\n};\r\n\r\n@Component({\r\n  tag: \"ch-shortcuts\",\r\n  styleUrl: \"ch-shortcuts.scss\",\r\n  shadow: true\r\n})\r\nexport class ChShortcuts {\r\n  private shortcuts: Shortcut[];\r\n\r\n  @Element() el: HTMLChShortcutsElement;\r\n\r\n  @State() showShortcuts = false;\r\n\r\n  /**\r\n   * The URL of the shortcut definitions.\r\n   */\r\n  @Prop() readonly src!: string;\r\n\r\n  /**\r\n   * Key to show shortcut tooltips.\r\n   */\r\n  @Prop() readonly showKey = \"F10\";\r\n\r\n  /**\r\n   * Suspend shortcuts.\r\n   */\r\n  @Prop() readonly suspend: boolean = false;\r\n\r\n  @Watch(\"suspend\")\r\n  suspendHandler() {\r\n    if (this.suspend) {\r\n      unloadShortcuts(this.src);\r\n    } else {\r\n      const root = this.el.getRootNode() as Document | ShadowRoot;\r\n      loadShortcuts(this.src, root, this.shortcuts);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.src) {\r\n      fetch(this.src).then(response => {\r\n        if (response.ok) {\r\n          response.json().then(json => {\r\n            const root = this.el.getRootNode() as Document | ShadowRoot;\r\n            this.shortcuts = json;\r\n\r\n            loadShortcuts(this.src, root, this.shortcuts);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    unloadShortcuts(this.src);\r\n  }\r\n\r\n  @Listen(\"keydown\", { target: \"window\", capture: true })\r\n  windowKeyDownHandler(eventInfo: KeyboardEvent) {\r\n    const modifierKeys = [\"Ctrl\", \"Alt\", \"Shift\", \"Meta\"];\r\n\r\n    if (eventInfo.repeat || this.suspend) {\r\n      return;\r\n    }\r\n\r\n    if (eventInfo.key === this.showKey) {\r\n      this.showShortcuts = !this.showShortcuts;\r\n      eventInfo.preventDefault();\r\n    } else if (this.showShortcuts && !modifierKeys.includes(eventInfo.key)) {\r\n      this.showShortcuts = false;\r\n    }\r\n  }\r\n\r\n  private windowClosedHandler = () => {\r\n    this.showShortcuts = false;\r\n  };\r\n\r\n  private renderShortcuts() {\r\n    return getShortcuts(this.src)\r\n      .filter(shortcut => shortcut.element)\r\n      .map(shortcut => (\r\n        <ch-window\r\n          container={shortcut.element}\r\n          modal={false}\r\n          hidden={false}\r\n          closeOnEscape={true}\r\n          closeOnOutsideClick={true}\r\n          xAlign=\"outside-end\"\r\n          yAlign=\"inside-start\"\r\n          onWindowClosed={this.windowClosedHandler}\r\n          exportparts=\"mask:element, main:tooltip\"\r\n        >\r\n          {this.renderKeyShortcuts(shortcut.keyShortcuts)}\r\n        </ch-window>\r\n      ));\r\n  }\r\n\r\n  private renderKeyShortcuts(keyShortcuts: string) {\r\n    return keyShortcuts.split(/(?<!(?:[+]|^))([+\\s])/).map((key, i, items) => {\r\n      if (key === \"+\" && i > 0 && items[i - 1] !== \"+\") {\r\n        return <span part=\"plus\">+</span>;\r\n      }\r\n      if (key === \" \" && i > 0 && items[i - 1] !== \"+\") {\r\n        return <span part=\"slash\">/</span>;\r\n      }\r\n      return <kbd part={`key`}>{KEY_SYMBOL[key] ?? key}</kbd>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Host>{this.showShortcuts && this.renderShortcuts()}</Host>;\r\n  }\r\n}\r\n"],"mappings":"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"}