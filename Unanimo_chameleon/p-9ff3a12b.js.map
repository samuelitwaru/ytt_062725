{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","n","defaultToken","tokenPostfix","ignoreCase","token","keywords","tagwords","symbols","integersuffix","floatsuffix","tokenizer","root","include","cases","next","whitespace","string"],"sources":["src/components/code-editor/monaco/output/vb-Dhcs4wOP.js"],"sourcesContent":["var e = { comments: { lineComment: \"'\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"<\", \">\"], [\"addhandler\", \"end addhandler\"], [\"class\", \"end class\"], [\"enum\", \"end enum\"], [\"event\", \"end event\"], [\"function\", \"end function\"], [\"get\", \"end get\"], [\"if\", \"end if\"], [\"interface\", \"end interface\"], [\"module\", \"end module\"], [\"namespace\", \"end namespace\"], [\"operator\", \"end operator\"], [\"property\", \"end property\"], [\"raiseevent\", \"end raiseevent\"], [\"removehandler\", \"end removehandler\"], [\"select\", \"end select\"], [\"set\", \"end set\"], [\"structure\", \"end structure\"], [\"sub\", \"end sub\"], [\"synclock\", \"end synclock\"], [\"try\", \"end try\"], [\"while\", \"end while\"], [\"with\", \"end with\"], [\"using\", \"end using\"], [\"do\", \"loop\"], [\"for\", \"next\"]], autoClosingPairs: [{ open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"<\", close: \">\", notIn: [\"string\", \"comment\"] }], folding: { markers: { start: new RegExp(\"^\\\\s*#Region\\\\b\"), end: new RegExp(\"^\\\\s*#End Region\\\\b\") } } }, n = { defaultToken: \"\", tokenPostfix: \".vb\", ignoreCase: !0, brackets: [{ token: \"delimiter.bracket\", open: \"{\", close: \"}\" }, { token: \"delimiter.array\", open: \"[\", close: \"]\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }, { token: \"delimiter.angle\", open: \"<\", close: \">\" }, { token: \"keyword.tag-addhandler\", open: \"addhandler\", close: \"end addhandler\" }, { token: \"keyword.tag-class\", open: \"class\", close: \"end class\" }, { token: \"keyword.tag-enum\", open: \"enum\", close: \"end enum\" }, { token: \"keyword.tag-event\", open: \"event\", close: \"end event\" }, { token: \"keyword.tag-function\", open: \"function\", close: \"end function\" }, { token: \"keyword.tag-get\", open: \"get\", close: \"end get\" }, { token: \"keyword.tag-if\", open: \"if\", close: \"end if\" }, { token: \"keyword.tag-interface\", open: \"interface\", close: \"end interface\" }, { token: \"keyword.tag-module\", open: \"module\", close: \"end module\" }, { token: \"keyword.tag-namespace\", open: \"namespace\", close: \"end namespace\" }, { token: \"keyword.tag-operator\", open: \"operator\", close: \"end operator\" }, { token: \"keyword.tag-property\", open: \"property\", close: \"end property\" }, { token: \"keyword.tag-raiseevent\", open: \"raiseevent\", close: \"end raiseevent\" }, { token: \"keyword.tag-removehandler\", open: \"removehandler\", close: \"end removehandler\" }, { token: \"keyword.tag-select\", open: \"select\", close: \"end select\" }, { token: \"keyword.tag-set\", open: \"set\", close: \"end set\" }, { token: \"keyword.tag-structure\", open: \"structure\", close: \"end structure\" }, { token: \"keyword.tag-sub\", open: \"sub\", close: \"end sub\" }, { token: \"keyword.tag-synclock\", open: \"synclock\", close: \"end synclock\" }, { token: \"keyword.tag-try\", open: \"try\", close: \"end try\" }, { token: \"keyword.tag-while\", open: \"while\", close: \"end while\" }, { token: \"keyword.tag-with\", open: \"with\", close: \"end with\" }, { token: \"keyword.tag-using\", open: \"using\", close: \"end using\" }, { token: \"keyword.tag-do\", open: \"do\", close: \"loop\" }, { token: \"keyword.tag-for\", open: \"for\", close: \"next\" }], keywords: [\"AddHandler\", \"AddressOf\", \"Alias\", \"And\", \"AndAlso\", \"As\", \"Async\", \"Boolean\", \"ByRef\", \"Byte\", \"ByVal\", \"Call\", \"Case\", \"Catch\", \"CBool\", \"CByte\", \"CChar\", \"CDate\", \"CDbl\", \"CDec\", \"Char\", \"CInt\", \"Class\", \"CLng\", \"CObj\", \"Const\", \"Continue\", \"CSByte\", \"CShort\", \"CSng\", \"CStr\", \"CType\", \"CUInt\", \"CULng\", \"CUShort\", \"Date\", \"Decimal\", \"Declare\", \"Default\", \"Delegate\", \"Dim\", \"DirectCast\", \"Do\", \"Double\", \"Each\", \"Else\", \"ElseIf\", \"End\", \"EndIf\", \"Enum\", \"Erase\", \"Error\", \"Event\", \"Exit\", \"False\", \"Finally\", \"For\", \"Friend\", \"Function\", \"Get\", \"GetType\", \"GetXMLNamespace\", \"Global\", \"GoSub\", \"GoTo\", \"Handles\", \"If\", \"Implements\", \"Imports\", \"In\", \"Inherits\", \"Integer\", \"Interface\", \"Is\", \"IsNot\", \"Let\", \"Lib\", \"Like\", \"Long\", \"Loop\", \"Me\", \"Mod\", \"Module\", \"MustInherit\", \"MustOverride\", \"MyBase\", \"MyClass\", \"NameOf\", \"Namespace\", \"Narrowing\", \"New\", \"Next\", \"Not\", \"Nothing\", \"NotInheritable\", \"NotOverridable\", \"Object\", \"Of\", \"On\", \"Operator\", \"Option\", \"Optional\", \"Or\", \"OrElse\", \"Out\", \"Overloads\", \"Overridable\", \"Overrides\", \"ParamArray\", \"Partial\", \"Private\", \"Property\", \"Protected\", \"Public\", \"RaiseEvent\", \"ReadOnly\", \"ReDim\", \"RemoveHandler\", \"Resume\", \"Return\", \"SByte\", \"Select\", \"Set\", \"Shadows\", \"Shared\", \"Short\", \"Single\", \"Static\", \"Step\", \"Stop\", \"String\", \"Structure\", \"Sub\", \"SyncLock\", \"Then\", \"Throw\", \"To\", \"True\", \"Try\", \"TryCast\", \"TypeOf\", \"UInteger\", \"ULong\", \"UShort\", \"Using\", \"Variant\", \"Wend\", \"When\", \"While\", \"Widening\", \"With\", \"WithEvents\", \"WriteOnly\", \"Xor\"], tagwords: [\"If\", \"Sub\", \"Select\", \"Try\", \"Class\", \"Enum\", \"Function\", \"Get\", \"Interface\", \"Module\", \"Namespace\", \"Operator\", \"Set\", \"Structure\", \"Using\", \"While\", \"With\", \"Do\", \"Loop\", \"For\", \"Next\", \"Property\", \"Continue\", \"AddHandler\", \"RemoveHandler\", \"Event\", \"RaiseEvent\", \"SyncLock\"], symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/, integersuffix: /U?[DI%L&S@]?/, floatsuffix: /[R#F!]?/, tokenizer: { root: [{ include: \"@whitespace\" }, [/next(?!\\w)/, { token: \"keyword.tag-for\" }], [/loop(?!\\w)/, { token: \"keyword.tag-do\" }], [/end\\s+(?!for|do)(addhandler|class|enum|event|function|get|if|interface|module|namespace|operator|property|raiseevent|removehandler|select|set|structure|sub|synclock|try|while|with|using)/, { token: \"keyword.tag-$1\" }], [/[a-zA-Z_]\\w*/, { cases: { \"@tagwords\": { token: \"keyword.tag-$0\" }, \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], [/^\\s*#\\w+/, \"keyword\"], [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/&H[0-9a-f]+(@integersuffix)/, \"number.hex\"], [/&0[0-7]+(@integersuffix)/, \"number.octal\"], [/\\d+(@integersuffix)/, \"number\"], [/#.*#/, \"number\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/[\"\\u201c\\u201d]/, { token: \"string.quote\", next: \"@string\" }]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/(\\'|REM(?!\\w)).*$/, \"comment\"]], string: [[/[^\"\\u201c\\u201d]+/, \"string\"], [/[\"\\u201c\\u201d]{2}/, \"string.escape\"], [/[\"\\u201c\\u201d]C?/, { token: \"string.quote\", next: \"@pop\" }]] } };\nexport {\n  e as conf,\n  n as language\n};\n"],"mappings":"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"}