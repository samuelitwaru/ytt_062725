{"version":3,"names":["r","a","c","regex","e","t","s","COMMENT","o","scope","match","m","A","T","n","concat","name","illegal","keywords","contains","QUOTE_STRING_MODE","NUMBER_MODE"],"sources":["node_modules/@genexus/markdown-parser/dist/abnf-Ew837g5Q.js"],"sourcesContent":["function r(a) {\n  const c = a.regex, e = /^[a-zA-Z][a-zA-Z0-9-]*/, t = [\"ALPHA\", \"BIT\", \"CHAR\", \"CR\", \"CRLF\", \"CTL\", \"DIGIT\", \"DQUOTE\", \"HEXDIG\", \"HTAB\", \"LF\", \"LWSP\", \"OCTET\", \"SP\", \"VCHAR\", \"WSP\"], s = a.COMMENT(/;/, /$/), o = { scope: \"symbol\", match: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+)?/ }, m = { scope: \"symbol\", match: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+)?/ }, A = { scope: \"symbol\", match: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+)?/ }, T = { scope: \"symbol\", match: /%[si](?=\".*\")/ }, n = { scope: \"attribute\", match: c.concat(e, /(?=\\s*=)/) };\n  return { name: \"Augmented Backus-Naur Form\", illegal: /[!@#$^&',?+~`|:]/, keywords: t, contains: [{ scope: \"operator\", match: /=\\/?/ }, n, s, o, m, A, T, a.QUOTE_STRING_MODE, a.NUMBER_MODE] };\n}\nexport {\n  r as default\n};\n"],"mappings":"sFAAA,SAASA,EAAEC,GACT,IAAMC,EAAID,EAAEE,MAAOC,EAAI,yBAA0BC,EAAI,CAAC,QAAS,MAAO,OAAQ,KAAM,OAAQ,MAAO,QAAS,SAAU,SAAU,OAAQ,KAAM,OAAQ,QAAS,KAAM,QAAS,OAAQC,EAAIL,EAAEM,QAAQ,IAAK,KAAMC,EAAI,CAAEC,MAAO,SAAUC,MAAO,kCAAoCC,EAAI,CAAEF,MAAO,SAAUC,MAAO,kCAAoCE,EAAI,CAAEH,MAAO,SAAUC,MAAO,2CAA6CG,EAAI,CAAEJ,MAAO,SAAUC,MAAO,iBAAmBI,EAAI,CAAEL,MAAO,YAAaC,MAAOR,EAAEa,OAAOX,EAAG,aAC5f,MAAO,CAAEY,KAAM,6BAA8BC,QAAS,mBAAoBC,SAAUb,EAAGc,SAAU,CAAC,CAAEV,MAAO,WAAYC,MAAO,QAAUI,EAAGR,EAAGE,EAAGG,EAAGC,EAAGC,EAAGZ,EAAEmB,kBAAmBnB,EAAEoB,aACnL,C"}