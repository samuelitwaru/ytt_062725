{"version":3,"names":["listCss","ChListStyle0","TRANSITION_DURATION","BUTTON_POSITION_X","BUTTON_POSITION_Y","BUTTON_SIZE","MOUSE_OFFSET_X","MOUSE_OFFSET_Y","MOUSE_POSITION_X","MOUSE_POSITION_Y","TAB_LIST_EDGE_START_POSITION","TAB_LIST_EDGE_END_POSITION","DECORATIVE_IMAGE","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","HOME","END","FIRST_CAPTION_BUTTON","tabListRef","querySelector","LAST_CAPTION_BUTTON","isBlockDirection","direction","setProperty","element","property","value","style","concat","setButtonInitialPosition","positionX","positionY","setButtonSize","size","setMousePosition","setTabListStartEndPosition","startPosition","endPosition","getTabListSizesAndSetPosition","hostRef","buttonRect","tabListRect","getBoundingClientRect","tabListSizes","xStart","x","xEnd","width","yStart","y","yEnd","height","setMouseOffset","offsetX","offsetY","addGrabbingStyle","document","body","removeGrabbingStyle","removeProperty","focusNextOrPreviousCaption","focusNextSibling","focusedCaption","event","preventDefault","nextFocusedCaption","_b","nextElementSibling","_c","previousElementSibling","focus","click","ChList","exports","_a","_cancelId","set","this","_classes","_parts","_selectedIndex","_lastDragEvent","_needForRAF","_initialMousePosition","_itemSizes","_mouseBoundingLimits","_renderedPages","Set","_dragPreviewRef","_tabListRef","_tabPageRef","_keyEvents","ev","focusedButton","__classPrivateFieldGet","_this","isRTL","_handleSelectedItemChange","index","itemId","stopPropagation","eventInfo","selectedItemChange","emit","lastSelectedIndex","newSelectedId","newSelectedIndex","defaultPrevented","__classPrivateFieldSet","selectedId","_updateRenderedPages","items","forEach","item","wasRendered","add","id","_handleDragStart","draggedElementIndex","mousePositionX","clientX","mousePositionY","clientY","getItemSize","__spreadArray","children","map","target","el","buttonSizes","mouseDistanceToButtonTopEdge","mouseDistanceToButtonBottomEdge","mouseDistanceToButtonLeftEdge","mouseDistanceToButtonRightEdge","dragOutsideDisabled","addEventListener","_handleItemDrag","capture","passive","_handleDragEnd","cancelAnimationFrame","removeEventListener","anItemWasReordered","hasCrossedBoundaries","draggedElementNewIndex","itemToInsert","removeElement","model","insertIntoIndex","_adjustLastSelectedIndexValueAfterReorder","call","undefined","requestAnimationFrame","mouseLimits","draggedButtonIsInsideTheTabList","inBetween","itemDragStart","length","mousePosition","hasMovedToTheEnd","distanceTraveled","Math","abs","newIndex","_handleClose","itemClose","itemIndex","_handleTabFocus","keyEventHandler","code","currentFocusedCaption","focusComposedPath","closest","BUTTON","_imgRender","startImageType","startImageSrc","h","class","IMAGE","part","alt","src","loading","_renderTabBar","thereAreShiftedElements","role","accessibleName","TAB_LIST","ref","onKeyDown","key","CAPTION_ID","PAGE_ID","showCaptions","name","toString","isPseudoElementImg","sortable","tokenMap","SELECTED_PART","_d","onAuxClick","onClick","onDragStart","closeButtonHidden","closeButtonAccessibleName","CLOSE_BUTTON_PART","type","_renderTabPages","PAGE_CONTAINER","expanded","keys","PAGE","_renderDragPreview","draggedElement","classes","DRAG_PREVIEW","DRAG_PREVIEW_OUTSIDE","DRAG_PREVIEW_INSIDE_INLINE","DRAG_PREVIEW_INSIDE_BLOCK","decorativeImage","DRAG_PREVIEW_ELEMENT","_e","_initializeState","_setClassesAndParts","LIST_CLASSES","LIST_PART_BLOCK","LIST_PART_INLINE","class_1","prototype","directionChange","newDirection","modelChanged","newModel","handleSelectedIdChange","endDragPreview","getDraggableViews","mainView","pageView","tabListView","promoteDragPreviewToTopLayer","popover","showPopover","removePage","pageId_1","pageId","forceRerender","delete","forceUpdate","componentWillLoad","render","draggedIndex","thereAreShiftedElementsInPreview","Host"],"sources":["src/components/list/list.scss?tag=ch-list&encapsulation=shadow","src/components/list/list.tsx"],"sourcesContent":["@import \"../../common/_base\";\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//         Caption button\r\n// - - - - - - - - - - - - - - - -\r\n:where(button) {\r\n  all: unset;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  // Disallow selecting the text\r\n  user-select: none;\r\n\r\n  // Avoid zooming on double tap on iOS devices\r\n  touch-action: manipulation;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n@include box-sizing();\r\n\r\n$z-index-gx-navbar-item: 107; // Same as $z-index-gx-navbar-item from w-c-l\r\n\r\n:host {\r\n  --ch-list-transition-duration: 150ms;\r\n  --ch-list-mask-image-size: 100%;\r\n  --ch-list-image-size: 18px;\r\n\r\n  display: grid;\r\n  block-size: 100%;\r\n}\r\n\r\n// :host([type=\"blockStart\"]) {\r\n//   grid-auto-flow: row;\r\n//   grid-auto-rows: max-content;\r\n// }\r\n\r\n:host(.ch-list-direction--block) {\r\n  grid-template-rows: max-content 1fr;\r\n}\r\n\r\n:host(.ch-list-direction--inline) {\r\n  grid-template-columns: max-content 1fr;\r\n}\r\n\r\n.sortable {\r\n  // Allow user drag\r\n  -webkit-user-drag: element;\r\n}\r\n\r\n.caption-image,\r\n.decorative-image::before {\r\n  display: block;\r\n  block-size: var(--ch-list-image-size);\r\n  inline-size: var(--ch-list-image-size);\r\n}\r\n\r\n.decorative-image::before {\r\n  content: \"\";\r\n  -webkit-mask: var(--ch-list-decorative-image) 50% 50% /\r\n    var(--ch-list-mask-image-size) var(--ch-list-mask-image-size) no-repeat;\r\n  background-color: currentColor;\r\n}\r\n\r\n.close-button {\r\n  &::after {\r\n    content: \"\";\r\n    display: flex;\r\n    block-size: 1em;\r\n    inline-size: 1em;\r\n    -webkit-mask: url('data:image/svg+xml,<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 2L15.5 15.5\" stroke=\"white\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M15.5 2L2 15.5\" stroke=\"white\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>')\r\n      50% 50% / 0.75em 0.75em no-repeat;\r\n    background-color: currentColor;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  &:hover > .close-button::after,\r\n  &:focus-within > .close-button::after,\r\n  &[aria-selected=\"true\"] > .close-button::after {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//          Drag preview\r\n// - - - - - - - - - - - - - - - -\r\n// \"Hide\" the dragged element, without removing it from the accessibility tree\r\n.dragged-element {\r\n  opacity: 0;\r\n\r\n  &--outside {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.drag-preview {\r\n  // \"clamp\" implements snap to the edges\r\n  --ch-list-snap-drag-preview: clamp(\r\n    var(--ch-list-tab-list-start),\r\n    var(--ch-list-mouse-position),\r\n    var(--ch-list-tab-list-end)\r\n  );\r\n\r\n  position: fixed;\r\n  left: 0; // Necessary since the custom vars are physical values\r\n  top: 0; // Necessary since the custom vars are physical values\r\n  z-index: $z-index-gx-navbar-item + 1;\r\n\r\n  &:popover-open {\r\n    // Reset popover's browser defaults\r\n    padding: 0;\r\n    margin: 0;\r\n    border: unset;\r\n    color: unset;\r\n\r\n    // Native popovers have \"inset: 0\", so we need to reset that property with\r\n    // the physical values again to support RTL\r\n    inset: unset;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    // The preview MUST NOT capture pointer-events in order to properly show\r\n    // the droppable areas\r\n    pointer-events: none;\r\n  }\r\n\r\n  &-element {\r\n    cursor: grabbing;\r\n  }\r\n\r\n  // Drag outside\r\n  &--outside-tab-list {\r\n    transform: translate(\r\n      calc(var(--ch-list-mouse-position-x) - var(--ch-list-mouse-offset-x)),\r\n      calc(var(--ch-list-mouse-position-y) - var(--ch-list-mouse-offset-y))\r\n    );\r\n  }\r\n\r\n  // Drag inside (block)\r\n  &--inside-tab-list__block {\r\n    --ch-list-mouse-position: calc(\r\n      var(--ch-list-mouse-position-x) - var(--ch-list-mouse-offset-x)\r\n    );\r\n\r\n    transform: translate(\r\n      var(--ch-list-snap-drag-preview),\r\n      var(--ch-list-button-position-y)\r\n    );\r\n  }\r\n\r\n  // Drag inside (inline)\r\n  &--inside-tab-list__inline {\r\n    --ch-list-mouse-position: calc(\r\n      var(--ch-list-mouse-position-y) - var(--ch-list-mouse-offset-y)\r\n    );\r\n\r\n    transform: translate(\r\n      var(--ch-list-button-position-x),\r\n      var(--ch-list-snap-drag-preview)\r\n    );\r\n  }\r\n}\r\n\r\n.shifted-element {\r\n  transition: transform var(--ch-list-transition-duration);\r\n}\r\n\r\n:host(.ch-list-direction--block) {\r\n  .shifted-element--start {\r\n    transform: translate(calc(var(--ch-list-button-size) * -1), 0);\r\n  }\r\n\r\n  .shifted-element--end {\r\n    transform: translate(var(--ch-list-button-size), 0);\r\n  }\r\n}\r\n\r\n:host(.ch-list-direction--inline) {\r\n  .shifted-element--start {\r\n    transform: translateY(calc(var(--ch-list-button-size) * -1));\r\n  }\r\n\r\n  .shifted-element--end {\r\n    transform: translateY(var(--ch-list-button-size));\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//            Tab lists\r\n// - - - - - - - - - - - - - - - -\r\n:host([direction=\"inline\"]) > .tab-list {\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  grid-auto-rows: max-content;\r\n}\r\n\r\n:host([direction=\"block\"]) > .tab-list {\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: max-content;\r\n}\r\n\r\n.page {\r\n  contain: strict;\r\n  display: grid;\r\n}\r\n\r\n.page-container {\r\n  display: grid;\r\n  grid-template: \"selected\" 1fr / 1fr;\r\n  block-size: 100%;\r\n  inline-size: 100%;\r\n}\r\n\r\n.page--selected {\r\n  grid-area: selected;\r\n}\r\n\r\n// content-visibility: hidden is faster for rendering the content back, as\r\n// it preserves the rendering state of the content (display: none does not)\r\n@supports (content-visibility: hidden) {\r\n  .page-container--collapsed,\r\n  .page--hidden {\r\n    content-visibility: hidden;\r\n  }\r\n\r\n  .page-container--collapsed {\r\n    inline-size: 0;\r\n  }\r\n}\r\n\r\n@supports not (content-visibility: hidden) {\r\n  .page-container--collapsed,\r\n  .page--hidden {\r\n    display: none; // Destroys the render state. Ctrl + Z and Ctrl + C won't work properly\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Method,\r\n  Prop,\r\n  State,\r\n  Watch,\r\n  forceUpdate,\r\n  h\r\n} from \"@stencil/core\";\r\nimport {\r\n  DraggableView,\r\n  DraggableViewInfo,\r\n  FlexibleLayoutWidget\r\n} from \"../flexible-layout/internal/flexible-layout/types\";\r\nimport {\r\n  inBetween,\r\n  isPseudoElementImg,\r\n  isRTL,\r\n  tokenMap\r\n} from \"../../common/utils\";\r\nimport {\r\n  ListDirection,\r\n  ListElementSize,\r\n  ListItemCloseInfo,\r\n  ListSelectedItemInfo\r\n} from \"./types\";\r\nimport {\r\n  CAPTION_ID,\r\n  CLOSE_BUTTON_PART,\r\n  DRAG_PREVIEW,\r\n  DRAG_PREVIEW_ELEMENT,\r\n  DRAG_PREVIEW_INSIDE_BLOCK,\r\n  DRAG_PREVIEW_INSIDE_INLINE,\r\n  DRAG_PREVIEW_OUTSIDE,\r\n  LIST_CLASSES,\r\n  LIST_PART_BLOCK,\r\n  LIST_PART_INLINE,\r\n  PAGE_ID,\r\n  SELECTED_PART\r\n} from \"./utils\";\r\nimport { insertIntoIndex, removeElement } from \"../../common/array\";\r\nimport { focusComposedPath } from \"../common/helpers\";\r\n\r\n// Custom vars\r\nconst TRANSITION_DURATION = \"--ch-list-transition-duration\";\r\n\r\nconst BUTTON_POSITION_X = \"--ch-list-button-position-x\";\r\nconst BUTTON_POSITION_Y = \"--ch-list-button-position-y\";\r\n\r\nconst BUTTON_SIZE = \"--ch-list-button-size\";\r\n\r\nconst MOUSE_OFFSET_X = \"--ch-list-mouse-offset-x\";\r\nconst MOUSE_OFFSET_Y = \"--ch-list-mouse-offset-y\";\r\n\r\nconst MOUSE_POSITION_X = \"--ch-list-mouse-position-x\";\r\nconst MOUSE_POSITION_Y = \"--ch-list-mouse-position-y\";\r\n\r\nconst TAB_LIST_EDGE_START_POSITION = \"--ch-list-tab-list-start\";\r\nconst TAB_LIST_EDGE_END_POSITION = \"--ch-list-tab-list-end\";\r\n\r\nconst DECORATIVE_IMAGE = \"--ch-list-decorative-image\";\r\n\r\n// Key codes\r\nconst ARROW_UP = \"ArrowUp\";\r\nconst ARROW_RIGHT = \"ArrowRight\";\r\nconst ARROW_DOWN = \"ArrowDown\";\r\nconst ARROW_LEFT = \"ArrowLeft\";\r\nconst HOME = \"Home\";\r\nconst END = \"End\";\r\n\r\ntype KeyEvents =\r\n  | typeof ARROW_UP\r\n  | typeof ARROW_RIGHT\r\n  | typeof ARROW_DOWN\r\n  | typeof ARROW_LEFT\r\n  | typeof HOME\r\n  | typeof END;\r\n\r\n// Selectors\r\nconst FIRST_CAPTION_BUTTON = (tabListRef: HTMLElement) =>\r\n  tabListRef.querySelector(\":scope>button\");\r\n\r\nconst LAST_CAPTION_BUTTON = (tabListRef: HTMLElement) =>\r\n  tabListRef.querySelector(\":scope>button:last-child\");\r\n\r\n// Utility functions\r\n\r\nconst isBlockDirection = (direction: ListDirection) => direction === \"block\";\r\n\r\nconst setProperty = (element: HTMLElement, property: string, value: number) =>\r\n  element.style.setProperty(property, `${value}px`);\r\n\r\nconst setButtonInitialPosition = (\r\n  element: HTMLElement,\r\n  positionX: number,\r\n  positionY: number\r\n) => {\r\n  setProperty(element, BUTTON_POSITION_X, positionX);\r\n  setProperty(element, BUTTON_POSITION_Y, positionY);\r\n};\r\n\r\nconst setButtonSize = (element: HTMLElement, size: number) => {\r\n  setProperty(element, BUTTON_SIZE, size);\r\n};\r\n\r\nconst setMousePosition = (\r\n  element: HTMLElement,\r\n  positionX: number,\r\n  positionY: number\r\n) => {\r\n  setProperty(element, MOUSE_POSITION_X, positionX);\r\n  setProperty(element, MOUSE_POSITION_Y, positionY);\r\n};\r\n\r\n// Useful to implement snap to the edges\r\nconst setTabListStartEndPosition = (\r\n  element: HTMLElement,\r\n  startPosition: number,\r\n  endPosition: number\r\n) => {\r\n  setProperty(element, TAB_LIST_EDGE_START_POSITION, startPosition);\r\n  setProperty(element, TAB_LIST_EDGE_END_POSITION, endPosition);\r\n};\r\n\r\nconst getTabListSizesAndSetPosition = (\r\n  hostRef: HTMLChListElement,\r\n  tabListRef: HTMLElement,\r\n  direction: ListDirection,\r\n  buttonRect: DOMRect\r\n): ListElementSize => {\r\n  const tabListRect = tabListRef.getBoundingClientRect();\r\n\r\n  // Tab List information\r\n  const tabListSizes: ListElementSize = {\r\n    xStart: tabListRect.x,\r\n    xEnd: tabListRect.x + tabListRect.width,\r\n    yStart: tabListRect.y,\r\n    yEnd: tabListRect.y + tabListRect.height\r\n  };\r\n\r\n  if (isBlockDirection(direction)) {\r\n    setTabListStartEndPosition(\r\n      hostRef,\r\n      tabListSizes.xStart,\r\n      tabListSizes.xEnd - buttonRect.width\r\n    );\r\n  } else {\r\n    setTabListStartEndPosition(\r\n      hostRef,\r\n      tabListSizes.yStart,\r\n      tabListSizes.yEnd - buttonRect.height\r\n    );\r\n  }\r\n\r\n  return tabListSizes;\r\n};\r\n\r\nconst setMouseOffset = (\r\n  element: HTMLElement,\r\n  offsetX: number,\r\n  offsetY: number\r\n) => {\r\n  setProperty(element, MOUSE_OFFSET_X, offsetX);\r\n  setProperty(element, MOUSE_OFFSET_Y, offsetY);\r\n};\r\n\r\nconst addGrabbingStyle = () =>\r\n  document.body.style.setProperty(\"cursor\", \"grabbing\");\r\nconst removeGrabbingStyle = () => document.body.style.removeProperty(\"cursor\");\r\n\r\nconst focusNextOrPreviousCaption = (\r\n  focusNextSibling: boolean,\r\n  tabListRef: HTMLElement,\r\n  focusedCaption: HTMLButtonElement,\r\n  event: KeyboardEvent\r\n) => {\r\n  // Prevent scroll\r\n  event.preventDefault();\r\n\r\n  let nextFocusedCaption: HTMLButtonElement;\r\n\r\n  // Determine the next selected caption button\r\n  if (focusNextSibling) {\r\n    nextFocusedCaption = (focusedCaption.nextElementSibling ??\r\n      FIRST_CAPTION_BUTTON(tabListRef)) as HTMLButtonElement;\r\n  } else {\r\n    nextFocusedCaption = (focusedCaption.previousElementSibling ??\r\n      LAST_CAPTION_BUTTON(tabListRef)) as HTMLButtonElement;\r\n  }\r\n\r\n  // Focus and select the caption\r\n  nextFocusedCaption.focus();\r\n  nextFocusedCaption.click();\r\n};\r\n\r\n@Component({\r\n  shadow: true,\r\n  styleUrl: \"list.scss\",\r\n  tag: \"ch-list\"\r\n})\r\nexport class ChList implements DraggableView {\r\n  #cancelId: number;\r\n\r\n  // Styling\r\n  #classes: {\r\n    BUTTON?: string;\r\n    IMAGE?: string;\r\n    PAGE?: string;\r\n    PAGE_CONTAINER?: string;\r\n    PAGE_NAME?: string;\r\n    TAB_LIST?: string;\r\n  } = {};\r\n  #parts: {\r\n    BUTTON?: string;\r\n    IMAGE?: string;\r\n    PAGE?: string;\r\n    PAGE_CONTAINER?: string;\r\n    PAGE_NAME?: string;\r\n    TAB_LIST?: string;\r\n  } = {};\r\n\r\n  #selectedIndex: number = -1;\r\n\r\n  #lastDragEvent: MouseEvent;\r\n  #needForRAF = true; // To prevent redundant RAF (request animation frame) calls\r\n\r\n  #initialMousePosition = -1;\r\n\r\n  // Allocated at runtime to reduce memory usage\r\n  #itemSizes: number[];\r\n\r\n  /**\r\n   * This variable represents the boundaries of the box where the mouse can be\r\n   * placed when dragging a caption, to consider that the caption is within the\r\n   * tab list.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #mouseBoundingLimits: ListElementSize;\r\n\r\n  #renderedPages: Set<string> = new Set();\r\n\r\n  // Refs\r\n  #dragPreviewRef: HTMLDivElement;\r\n  #tabListRef: HTMLDivElement;\r\n  #tabPageRef: HTMLDivElement;\r\n\r\n  // Keyboard interactions\r\n  #keyEvents: {\r\n    [key in KeyEvents]: (\r\n      direction: ListDirection,\r\n      event: KeyboardEvent,\r\n      focusedCaption: HTMLButtonElement\r\n    ) => void;\r\n  } = {\r\n    [ARROW_UP]: (direction, ev, focusedButton) => {\r\n      if (direction === \"block\") {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(false, this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [ARROW_RIGHT]: (direction, ev, focusedButton) => {\r\n      if (direction === \"inline\") {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(!isRTL(), this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [ARROW_DOWN]: (direction, ev, focusedButton) => {\r\n      if (direction === \"block\") {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(true, this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [ARROW_LEFT]: (direction, ev, focusedButton) => {\r\n      if (direction === \"inline\") {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(isRTL(), this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [HOME]: () => {\r\n      const nextFocusedCaption = FIRST_CAPTION_BUTTON(\r\n        this.#tabListRef\r\n      ) as HTMLButtonElement;\r\n\r\n      // Focus and select the caption\r\n      nextFocusedCaption.focus();\r\n      nextFocusedCaption.click();\r\n    },\r\n\r\n    [END]: () => {\r\n      const nextFocusedCaption = LAST_CAPTION_BUTTON(\r\n        this.#tabListRef\r\n      ) as HTMLButtonElement;\r\n\r\n      // Focus and select the caption\r\n      nextFocusedCaption.focus();\r\n      nextFocusedCaption.click();\r\n    }\r\n  };\r\n\r\n  @Element() el: HTMLChListElement;\r\n\r\n  @State() draggedElementIndex = -1;\r\n  @State() draggedElementNewIndex = -1;\r\n\r\n  /**\r\n   * `true` when the mouse position is out of bounds at least once.\r\n   */\r\n  @State() hasCrossedBoundaries = false;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element.\r\n   */\r\n  @Prop() readonly accessibleName: string;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element. This label is used for the close button of the captions.\r\n   */\r\n  @Prop() readonly closeButtonAccessibleName: string = \"Close\";\r\n\r\n  /**\r\n   * `true` to hide the close button in the items.\r\n   */\r\n  @Prop() readonly closeButtonHidden: boolean = false;\r\n\r\n  /**\r\n   * Specifies the flexible layout type.\r\n   */\r\n  @Prop({ reflect: true }) readonly direction: ListDirection;\r\n  @Watch(\"direction\")\r\n  directionChange(newDirection: ListDirection) {\r\n    this.#initializeState(newDirection);\r\n  }\r\n\r\n  /**\r\n   * When the control is sortable, the items can be dragged outside of the\r\n   * tab-list. This property lets you specify if this behavior is disabled.\r\n   */\r\n  @Prop() readonly dragOutsideDisabled: boolean = false;\r\n\r\n  /**\r\n   * `true` if the group has is view section expanded. Otherwise, only the\r\n   * toolbar will be displayed.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/ban-default-true\r\n  @Prop() readonly expanded: boolean = true;\r\n\r\n  /**\r\n   * Specifies the items of the tab control.\r\n   */\r\n  @Prop() readonly model: FlexibleLayoutWidget[];\r\n  @Watch(\"model\")\r\n  modelChanged(newModel: FlexibleLayoutWidget[]) {\r\n    this.#updateRenderedPages(newModel);\r\n  }\r\n\r\n  /**\r\n   * Specifies the selected item of the widgets array.\r\n   */\r\n  @Prop({ mutable: true }) selectedId: string;\r\n  @Watch(\"selectedId\")\r\n  handleSelectedIdChange(newSelectedId: string) {\r\n    this.#renderedPages.add(newSelectedId);\r\n  }\r\n\r\n  /**\r\n   * `true` to show the captions of the items.\r\n   */\r\n  @Prop() readonly showCaptions: boolean = true;\r\n\r\n  /**\r\n   * `true` to enable sorting the tab buttons by dragging them in the tab-list.\r\n   * If sortable !== true, the tab buttons can not be dragged out either.\r\n   */\r\n  @Prop() readonly sortable: boolean = false;\r\n\r\n  /**\r\n   * Fired when an item of the main group is double clicked.\r\n   */\r\n  @Event() expandMainGroup: EventEmitter<string>;\r\n\r\n  /**\r\n   * Fired the close button of an item is clicked.\r\n   */\r\n  @Event() itemClose: EventEmitter<ListItemCloseInfo>;\r\n\r\n  /**\r\n   * Fired when the selected item change.\r\n   * This event can be default prevented to prevent the item selection.\r\n   */\r\n  @Event() selectedItemChange: EventEmitter<ListSelectedItemInfo>;\r\n\r\n  /**\r\n   * Fired the first time a caption button is dragged outside of its tab list.\r\n   */\r\n  @Event() itemDragStart: EventEmitter<number>;\r\n\r\n  /**\r\n   * Ends the preview of the dragged item. Useful for ending the preview via\r\n   * keyboard interaction.\r\n   */\r\n  @Method()\r\n  async endDragPreview(): Promise<void> {\r\n    this.#handleDragEnd();\r\n  }\r\n\r\n  /**\r\n   * Returns the info associated to the draggable view.\r\n   */\r\n  @Method()\r\n  async getDraggableViews(): Promise<DraggableViewInfo> {\r\n    return {\r\n      mainView: this.el,\r\n      pageView: this.#tabPageRef,\r\n      tabListView: this.#tabListRef\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Promotes the drag preview to the top layer. Useful to avoid z-index issues.\r\n   */\r\n  @Method()\r\n  async promoteDragPreviewToTopLayer(): Promise<void> {\r\n    if (this.draggedElementIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    // If this property is added in a declarative way via the Stencil's render,\r\n    // we would have to use requestAnimationFrame to delay the shopPopover()\r\n    // method, since the popover defaults to \"auto\", which does not allow to\r\n    // keep multiple \"auto\" popover open at the same time\r\n    this.#dragPreviewRef.popover = \"manual\";\r\n\r\n    this.#dragPreviewRef.showPopover();\r\n  }\r\n\r\n  /**\r\n   * Given an id, remove the page from the render\r\n   */\r\n  @Method()\r\n  async removePage(pageId: string, forceRerender = true) {\r\n    this.#renderedPages.delete(pageId);\r\n\r\n    if (forceRerender) {\r\n      forceUpdate(this);\r\n    }\r\n  }\r\n\r\n  #handleSelectedItemChange =\r\n    (index: number, itemId: string) => (event: MouseEvent) => {\r\n      event.stopPropagation();\r\n\r\n      const eventInfo = this.selectedItemChange.emit({\r\n        lastSelectedIndex: this.#selectedIndex,\r\n        newSelectedId: itemId,\r\n        newSelectedIndex: index\r\n      });\r\n\r\n      if (!eventInfo.defaultPrevented) {\r\n        this.#selectedIndex = index;\r\n        this.selectedId = itemId;\r\n      }\r\n    };\r\n\r\n  /**\r\n   * Make a set based on the rendered items array to maintain order between the\r\n   * pages, even when re-ordering tabs. This is useful for optimizing rendering\r\n   * performance by not re-ordering pages when the caption's order changes.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #updateRenderedPages = (items: FlexibleLayoutWidget[]) => {\r\n    (items ?? []).forEach(item => {\r\n      if (item.wasRendered) {\r\n        this.#renderedPages.add(item.id);\r\n      }\r\n    });\r\n\r\n    // The selected id must be added to the rendered pages, even if it was not\r\n    // marked as \"wasRendered\" in the UI Model\r\n    if (this.selectedId) {\r\n      this.#renderedPages.add(this.selectedId);\r\n    }\r\n  };\r\n\r\n  // #handleItemDblClick = (event: MouseEvent) => {\r\n  //   event.preventDefault();\r\n  //   event.stopPropagation();\r\n\r\n  //   this.expandMainGroup.emit();\r\n  // };\r\n\r\n  #handleDragStart = (index: number) => (event: DragEvent) => {\r\n    // Remove dragover event to allow mousemove event to fire\r\n    event.preventDefault();\r\n\r\n    // Store the index of the dragged element\r\n    this.draggedElementIndex = index;\r\n\r\n    // - - - - - - - - - - - DOM read operations - - - - - - - - - - -\r\n    const mousePositionX = event.clientX;\r\n    const mousePositionY = event.clientY;\r\n    const direction = this.direction;\r\n\r\n    const getItemSize = isBlockDirection(direction)\r\n      ? (item: HTMLElement) => item.getBoundingClientRect().width\r\n      : (item: HTMLElement) => item.getBoundingClientRect().height;\r\n    this.#itemSizes = [...this.#tabListRef.children].map(getItemSize);\r\n\r\n    const buttonRect = (\r\n      event.target as HTMLButtonElement\r\n    ).getBoundingClientRect();\r\n\r\n    // Tab List information\r\n    const tabListSizes = getTabListSizesAndSetPosition(\r\n      this.el,\r\n      this.#tabListRef,\r\n      direction,\r\n      buttonRect\r\n    );\r\n\r\n    // Button information\r\n    const buttonSizes: ListElementSize = {\r\n      xStart: buttonRect.x,\r\n      xEnd: buttonRect.x + buttonRect.width,\r\n      yStart: buttonRect.y,\r\n      yEnd: buttonRect.y + buttonRect.height\r\n    };\r\n\r\n    const mouseDistanceToButtonTopEdge = mousePositionY - buttonSizes.yStart;\r\n    const mouseDistanceToButtonBottomEdge = buttonSizes.yEnd - mousePositionY;\r\n    const mouseDistanceToButtonLeftEdge = mousePositionX - buttonSizes.xStart;\r\n    const mouseDistanceToButtonRightEdge = buttonSizes.xEnd - mousePositionX;\r\n\r\n    // Update mouse limits if drag outside is enabled\r\n    if (!this.dragOutsideDisabled) {\r\n      this.#mouseBoundingLimits = {\r\n        xStart: tabListSizes.xStart - mouseDistanceToButtonRightEdge,\r\n        xEnd: tabListSizes.xEnd + mouseDistanceToButtonLeftEdge,\r\n        yStart: tabListSizes.yStart - mouseDistanceToButtonBottomEdge,\r\n        yEnd: tabListSizes.yEnd + mouseDistanceToButtonTopEdge\r\n      };\r\n    }\r\n\r\n    // Store initial mouse position\r\n    this.#initialMousePosition = isBlockDirection(direction)\r\n      ? mousePositionX\r\n      : mousePositionY;\r\n\r\n    // - - - - - - - - - - - DOM write operations - - - - - - - - - - -\r\n    // Initialize mouse position to avoid initial flickering\r\n    setMousePosition(this.el, mousePositionX, mousePositionY);\r\n\r\n    // Initialize the button position\r\n    setButtonInitialPosition(this.el, buttonSizes.xStart, buttonSizes.yStart);\r\n\r\n    setButtonSize(\r\n      this.el,\r\n      isBlockDirection(direction) ? buttonRect.width : buttonRect.height\r\n    );\r\n\r\n    // Update mouse offset to correctly place the dragged element preview\r\n    setMouseOffset(\r\n      this.el,\r\n      mouseDistanceToButtonLeftEdge,\r\n      mouseDistanceToButtonTopEdge\r\n    );\r\n\r\n    addGrabbingStyle();\r\n\r\n    // Add listeners\r\n    document.addEventListener(\"mousemove\", this.#handleItemDrag, {\r\n      capture: true,\r\n      passive: true\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true\r\n    });\r\n  };\r\n\r\n  #handleDragEnd = () => {\r\n    // Since mousemove callbacks are executed on animation frames, we must also\r\n    // remove the events on animations frame. Otherwise we would remove the\r\n    // events and in the next frame the mousemove handler will be executes\r\n    cancelAnimationFrame(this.#cancelId);\r\n    this.#needForRAF = true;\r\n\r\n    document.removeEventListener(\"mousemove\", this.#handleItemDrag, {\r\n      capture: true\r\n    });\r\n\r\n    document.removeEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true\r\n    });\r\n\r\n    removeGrabbingStyle();\r\n\r\n    const anItemWasReordered =\r\n      !this.hasCrossedBoundaries &&\r\n      this.draggedElementNewIndex !== this.draggedElementIndex;\r\n\r\n    // Move the item to the new position\r\n    if (anItemWasReordered) {\r\n      const itemToInsert = removeElement(this.model, this.draggedElementIndex);\r\n      insertIntoIndex(this.model, itemToInsert, this.draggedElementNewIndex);\r\n\r\n      // Update last selected index\r\n      this.#adjustLastSelectedIndexValueAfterReorder();\r\n    }\r\n\r\n    // Restore visibility of the dragged element\r\n    this.draggedElementIndex = -1;\r\n    this.draggedElementNewIndex = -1;\r\n\r\n    // Free the memory\r\n    this.#itemSizes = undefined;\r\n\r\n    // Reset state\r\n    this.hasCrossedBoundaries = false;\r\n    this.el.style.removeProperty(TRANSITION_DURATION);\r\n  };\r\n\r\n  #adjustLastSelectedIndexValueAfterReorder = () => {\r\n    // If the dragged element is the selected element, use the new index\r\n    if (this.#selectedIndex === this.draggedElementIndex) {\r\n      this.#selectedIndex = this.draggedElementNewIndex;\r\n    }\r\n    // Dragged element:\r\n    //   - Started: Before the selected index\r\n    //   - Ended: After the selected index or in the same position\r\n    else if (\r\n      this.draggedElementIndex < this.#selectedIndex &&\r\n      this.#selectedIndex <= this.draggedElementNewIndex\r\n    ) {\r\n      this.#selectedIndex--;\r\n    }\r\n    // Dragged element:\r\n    //   - Started: After the selected index\r\n    //   - Ended: Before the selected index or in the same position\r\n    else if (\r\n      this.#selectedIndex < this.draggedElementIndex &&\r\n      this.draggedElementNewIndex <= this.#selectedIndex\r\n    ) {\r\n      this.#selectedIndex++;\r\n    }\r\n  };\r\n\r\n  #handleItemDrag = (event: MouseEvent) => {\r\n    this.#lastDragEvent = event;\r\n\r\n    if (!this.#needForRAF) {\r\n      return;\r\n    }\r\n    this.#needForRAF = false; // No need to call RAF up until next frame\r\n\r\n    this.#cancelId = requestAnimationFrame(() => {\r\n      this.#needForRAF = true; // RAF now consumes the movement instruction so a new one can come\r\n\r\n      const mousePositionX = this.#lastDragEvent.clientX;\r\n      const mousePositionY = this.#lastDragEvent.clientY;\r\n\r\n      setMousePosition(this.el, mousePositionX, mousePositionY);\r\n\r\n      // There is no need to update the preview of the reorder\r\n      if (this.hasCrossedBoundaries) {\r\n        return;\r\n      }\r\n\r\n      const mouseLimits = this.#mouseBoundingLimits;\r\n\r\n      // Check mouse limits if drag outside is enabled\r\n      if (!this.dragOutsideDisabled) {\r\n        const draggedButtonIsInsideTheTabList =\r\n          inBetween(mouseLimits.xStart, mousePositionX, mouseLimits.xEnd) &&\r\n          inBetween(mouseLimits.yStart, mousePositionY, mouseLimits.yEnd);\r\n\r\n        // Emit the itemDragStart event the first time the button is out of the\r\n        // mouse bounds (`mouseBoundingLimits`)\r\n        if (!draggedButtonIsInsideTheTabList) {\r\n          this.hasCrossedBoundaries = true;\r\n\r\n          // Remove transition before the render to avoid flickering in the animation\r\n          this.el.style.setProperty(TRANSITION_DURATION, \"0s\");\r\n\r\n          this.itemDragStart.emit(this.draggedElementIndex);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // There is no need to re-order the items in the preview\r\n      if (this.model.length === 1) {\r\n        return;\r\n      }\r\n\r\n      // In this point, the preview is inside the tab list, we should check\r\n      // in which place is the preview to give feedback for the item's reorder\r\n      const mousePosition = isBlockDirection(this.direction)\r\n        ? mousePositionX\r\n        : mousePositionY;\r\n\r\n      const hasMovedToTheEnd = this.#initialMousePosition < mousePosition;\r\n\r\n      // Distance traveled from the initial mouse position\r\n      let distanceTraveled = Math.abs(\r\n        this.#initialMousePosition - mousePosition\r\n      );\r\n\r\n      let newIndex = this.draggedElementIndex;\r\n\r\n      if (hasMovedToTheEnd) {\r\n        // While it is not the last item and the distance traveled is greater\r\n        // than half the size of the next item\r\n        while (\r\n          newIndex < this.model.length - 1 &&\r\n          distanceTraveled - this.#itemSizes[newIndex + 1] / 2 > 0\r\n        ) {\r\n          distanceTraveled -= this.#itemSizes[newIndex + 1];\r\n          newIndex++;\r\n        }\r\n      } else {\r\n        // While it is not the first item and the distance traveled is greater\r\n        // than half the size of the previous item\r\n        while (\r\n          newIndex > 0 &&\r\n          distanceTraveled - this.#itemSizes[newIndex - 1] / 2 > 0\r\n        ) {\r\n          distanceTraveled -= this.#itemSizes[newIndex - 1];\r\n          newIndex--;\r\n        }\r\n      }\r\n\r\n      // Check if should update the dragged element index in the preview\r\n      if (this.draggedElementNewIndex !== newIndex) {\r\n        this.draggedElementNewIndex = newIndex;\r\n      }\r\n    });\r\n  };\r\n\r\n  #handleClose = (index: number, itemId: string) => (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.itemClose.emit({\r\n      itemIndex: index,\r\n      itemId: itemId\r\n    });\r\n  };\r\n\r\n  #handleTabFocus = (event: KeyboardEvent) => {\r\n    if (this.model.length < 2) {\r\n      return;\r\n    }\r\n\r\n    const keyEventHandler = this.#keyEvents[event.code];\r\n    if (!keyEventHandler) {\r\n      return;\r\n    }\r\n\r\n    const currentFocusedCaption = focusComposedPath()[0].closest(\r\n      \".\" + this.#classes.BUTTON\r\n    ) as HTMLButtonElement;\r\n\r\n    keyEventHandler(this.direction, event, currentFocusedCaption);\r\n  };\r\n\r\n  #imgRender = (item: FlexibleLayoutWidget) =>\r\n    item.startImageType === \"img\" &&\r\n    item.startImageSrc && (\r\n      <img\r\n        aria-hidden=\"true\"\r\n        class={\"caption-image \" + this.#classes.IMAGE}\r\n        part={this.#parts.IMAGE}\r\n        alt=\"\"\r\n        src={item.startImageSrc}\r\n        loading=\"lazy\"\r\n      />\r\n    );\r\n\r\n  #renderTabBar = (thereAreShiftedElements: boolean) => (\r\n    <div\r\n      role=\"tablist\"\r\n      aria-label={this.accessibleName}\r\n      class={this.#classes.TAB_LIST}\r\n      part={this.#parts.TAB_LIST}\r\n      ref={el => (this.#tabListRef = el)}\r\n      onKeyDown={this.#handleTabFocus}\r\n    >\r\n      {this.model.map((item, index) => (\r\n        <button\r\n          key={CAPTION_ID(item.id)}\r\n          id={CAPTION_ID(item.id)}\r\n          role=\"tab\"\r\n          aria-controls={PAGE_ID(item.id)}\r\n          aria-label={!this.showCaptions ? item.name : null}\r\n          aria-selected={(item.id === this.selectedId).toString()}\r\n          class={{\r\n            [this.#classes.BUTTON]: true,\r\n            \"decorative-image\": isPseudoElementImg(\r\n              item.startImageSrc,\r\n              item.startImageType\r\n            ),\r\n\r\n            \"dragged-element\": this.draggedElementIndex === index,\r\n            \"dragged-element--outside\":\r\n              this.draggedElementIndex === index &&\r\n              this.hasCrossedBoundaries &&\r\n              this.model.length > 1,\r\n            \"shifted-element\": this.draggedElementIndex !== -1,\r\n\r\n            \"shifted-element--start\":\r\n              thereAreShiftedElements &&\r\n              this.draggedElementIndex < index &&\r\n              index <= this.draggedElementNewIndex,\r\n\r\n            \"shifted-element--end\":\r\n              thereAreShiftedElements &&\r\n              this.draggedElementNewIndex <= index &&\r\n              index < this.draggedElementIndex,\r\n\r\n            sortable: this.sortable\r\n          }}\r\n          part={tokenMap({\r\n            [this.#parts.BUTTON]: true,\r\n            [CAPTION_ID(item.id)]: true,\r\n            [SELECTED_PART]: item.id === this.selectedId\r\n          })}\r\n          style={\r\n            isPseudoElementImg(item.startImageSrc, item.startImageType)\r\n              ? { [DECORATIVE_IMAGE]: `url(\"${item.startImageSrc}\")` }\r\n              : null\r\n          }\r\n          onAuxClick={this.#handleClose(index, item.id)}\r\n          onClick={\r\n            !(item.id === this.selectedId)\r\n              ? this.#handleSelectedItemChange(index, item.id)\r\n              : null\r\n          }\r\n          // onDblClick={\r\n          //   this.direction === \"main\" ? this.#handleItemDblClick : null\r\n          // }\r\n          // Drag and drop\r\n          onDragStart={this.sortable ? this.#handleDragStart(index) : null}\r\n        >\r\n          {this.#imgRender(item)}\r\n\r\n          {this.showCaptions && item.name}\r\n\r\n          {!this.closeButtonHidden && (\r\n            <button\r\n              aria-label={this.closeButtonAccessibleName}\r\n              class=\"close-button\"\r\n              part={CLOSE_BUTTON_PART}\r\n              type=\"button\"\r\n              onClick={this.#handleClose(index, item.id)}\r\n            ></button>\r\n          )}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  #renderTabPages = () => (\r\n    <div\r\n      class={{\r\n        [this.#classes.PAGE_CONTAINER]: true,\r\n        \"page-container\": true,\r\n        \"page-container--collapsed\": !this.expanded\r\n      }}\r\n      part={this.#parts.PAGE_CONTAINER}\r\n      ref={el => (this.#tabPageRef = el)}\r\n    >\r\n      {[...this.#renderedPages.keys()].map(itemId => (\r\n        <div\r\n          key={PAGE_ID(itemId)}\r\n          id={PAGE_ID(itemId)}\r\n          role=\"tabpanel\"\r\n          aria-labelledby={CAPTION_ID(itemId)}\r\n          class={{\r\n            [this.#classes.PAGE]: true,\r\n            \"page--selected\": itemId === this.selectedId,\r\n            \"page--hidden\": !(itemId === this.selectedId)\r\n          }}\r\n          part={this.#parts.PAGE}\r\n        >\r\n          <slot name={itemId} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  #renderDragPreview = (draggedElement: FlexibleLayoutWidget) => {\r\n    const classes = {\r\n      [DRAG_PREVIEW]: true,\r\n      [DRAG_PREVIEW_OUTSIDE]: this.hasCrossedBoundaries,\r\n\r\n      [DRAG_PREVIEW_INSIDE_INLINE]:\r\n        !this.hasCrossedBoundaries && !isBlockDirection(this.direction),\r\n\r\n      [DRAG_PREVIEW_INSIDE_BLOCK]:\r\n        !this.hasCrossedBoundaries && isBlockDirection(this.direction)\r\n    };\r\n\r\n    const decorativeImage = isPseudoElementImg(\r\n      draggedElement.startImageSrc,\r\n      draggedElement.startImageType\r\n    );\r\n\r\n    return (\r\n      <div\r\n        aria-hidden=\"true\"\r\n        class={classes}\r\n        part={tokenMap(classes)}\r\n        ref={el => (this.#dragPreviewRef = el)}\r\n      >\r\n        <button\r\n          class={{\r\n            [this.#classes.BUTTON]: true,\r\n            [DRAG_PREVIEW_ELEMENT]: true,\r\n            \"decorative-image\": decorativeImage\r\n          }}\r\n          part={tokenMap({\r\n            [this.#parts.BUTTON]: true,\r\n            [CAPTION_ID(draggedElement.id)]: true,\r\n            [DRAG_PREVIEW_ELEMENT]: true,\r\n            [SELECTED_PART]: draggedElement.id === this.selectedId\r\n          })}\r\n          style={\r\n            decorativeImage\r\n              ? { [DECORATIVE_IMAGE]: `url(\"${draggedElement.startImageSrc}\")` }\r\n              : null\r\n          }\r\n        >\r\n          {this.#imgRender(draggedElement)}\r\n\r\n          {this.showCaptions && draggedElement.name}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  #initializeState = (direction: ListDirection) => {\r\n    this.#updateRenderedPages(this.model);\r\n\r\n    // Initialize classes and parts\r\n    this.#setClassesAndParts(direction);\r\n  };\r\n\r\n  #setClassesAndParts = (direction: ListDirection) => {\r\n    this.#classes = LIST_CLASSES;\r\n    this.#parts = direction === \"block\" ? LIST_PART_BLOCK : LIST_PART_INLINE;\r\n  };\r\n\r\n  componentWillLoad() {\r\n    this.#initializeState(this.direction);\r\n  }\r\n\r\n  render() {\r\n    if (this.model == null || this.model.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    const draggedIndex = this.draggedElementIndex;\r\n    const draggedElement = this.model[draggedIndex];\r\n    const thereAreShiftedElementsInPreview =\r\n      !this.hasCrossedBoundaries &&\r\n      this.draggedElementNewIndex !== -1 &&\r\n      this.draggedElementIndex !== this.draggedElementNewIndex;\r\n\r\n    return (\r\n      <Host class={`ch-list-direction--${this.direction}`}>\r\n        {this.#renderTabBar(thereAreShiftedElementsInPreview)}\r\n        {this.#renderTabPages()}\r\n\r\n        {draggedIndex !== -1 && this.#renderDragPreview(draggedElement)}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}