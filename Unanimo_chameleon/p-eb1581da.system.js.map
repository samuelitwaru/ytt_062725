{"version":3,"names":["e","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","t","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/css-Bnm3Iei0.js"],"sourcesContent":["var e = { wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g, comments: { blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }, { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], folding: { markers: { start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"), end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\") } } }, t = { defaultToken: \"\", tokenPostfix: \".css\", ws: `[ \t\n\\r\\f]*`, identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\", brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.bracket\" }, { open: \"[\", close: \"]\", token: \"delimiter.bracket\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }, { open: \"<\", close: \">\", token: \"delimiter.angle\" }], tokenizer: { root: [{ include: \"@selector\" }], selector: [{ include: \"@comments\" }, { include: \"@import\" }, { include: \"@strings\" }, [\"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\", { token: \"keyword\", next: \"@keyframedeclaration\" }], [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }], [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }], [\"(url-prefix)(\\\\()\", [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]], [\"(url)(\\\\()\", [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]], { include: \"@selectorname\" }, [\"[\\\\*]\", \"tag\"], [\"[>\\\\+,]\", \"delimiter\"], [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }], [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }]], selectorbody: [{ include: \"@comments\" }, [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"], [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]], selectorname: [[\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]], selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]], term: [{ include: \"@comments\" }, [\"(url-prefix)(\\\\()\", [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]], [\"(url)(\\\\()\", [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]], { include: \"@functioninvocation\" }, { include: \"@numbers\" }, { include: \"@name\" }, { include: \"@strings\" }, [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"], [\",\", \"delimiter\"]], rulevalue: [{ include: \"@comments\" }, { include: \"@strings\" }, { include: \"@term\" }, [\"!important\", \"keyword\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", { token: \"\", next: \"@pop\" }]], warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]], import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]], urldeclaration: [{ include: \"@strings\" }, [`[^)\\r\n]+`, \"string\"], [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]], parenthizedterm: [{ include: \"@term\" }, [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]], declarationbody: [{ include: \"@term\" }, [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", { token: \"\", next: \"@pop\" }]], comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]], comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [/[^*/]+/, \"comment\"], [/./, \"comment\"]], name: [[\"@identifier\", \"attribute.value\"]], numbers: [[\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }], [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]], units: [[\"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\", \"attribute.value.unit\", \"@pop\"]], keyframedeclaration: [[\"@identifier\", \"attribute.value\"], [\"{\", { token: \"delimiter.bracket\", switchTo: \"@keyframebody\" }]], keyframebody: [{ include: \"@term\" }, [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }], [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]], functioninvocation: [[\"@identifier\\\\(\", { token: \"attribute.value\", next: \"@functionarguments\" }]], functionarguments: [[\"\\\\$@identifier@ws:\", \"attribute.name\"], [\"[,]\", \"delimiter\"], { include: \"@term\" }, [\"\\\\)\", { token: \"attribute.value\", next: \"@pop\" }]], strings: [['~?\"', { token: \"string\", next: \"@stringenddoublequote\" }], [\"~?'\", { token: \"string\", next: \"@stringendquote\" }]], stringenddoublequote: [[\"\\\\\\\\.\", \"string\"], ['\"', { token: \"string\", next: \"@pop\" }], [/[^\\\\\"]+/, \"string\"], [\".\", \"string\"]], stringendquote: [[\"\\\\\\\\.\", \"string\"], [\"'\", { token: \"string\", next: \"@pop\" }], [/[^\\\\']+/, \"string\"], [\".\", \"string\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}