{"version":3,"names":["E","brackets","autoClosingPairs","open","close","surroundingPairs","S","defaultToken","tokenPostfix","ignoreCase","token","keywords","operators","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","next","string","stringDouble","scopes","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/redis-BcdKgvB8.js"],"sourcesContent":["var E = { brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }] }, S = { defaultToken: \"\", tokenPostfix: \".redis\", ignoreCase: !0, brackets: [{ open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }], keywords: [\"APPEND\", \"AUTH\", \"BGREWRITEAOF\", \"BGSAVE\", \"BITCOUNT\", \"BITFIELD\", \"BITOP\", \"BITPOS\", \"BLPOP\", \"BRPOP\", \"BRPOPLPUSH\", \"CLIENT\", \"KILL\", \"LIST\", \"GETNAME\", \"PAUSE\", \"REPLY\", \"SETNAME\", \"CLUSTER\", \"ADDSLOTS\", \"COUNT-FAILURE-REPORTS\", \"COUNTKEYSINSLOT\", \"DELSLOTS\", \"FAILOVER\", \"FORGET\", \"GETKEYSINSLOT\", \"INFO\", \"KEYSLOT\", \"MEET\", \"NODES\", \"REPLICATE\", \"RESET\", \"SAVECONFIG\", \"SET-CONFIG-EPOCH\", \"SETSLOT\", \"SLAVES\", \"SLOTS\", \"COMMAND\", \"COUNT\", \"GETKEYS\", \"CONFIG\", \"GET\", \"REWRITE\", \"SET\", \"RESETSTAT\", \"DBSIZE\", \"DEBUG\", \"OBJECT\", \"SEGFAULT\", \"DECR\", \"DECRBY\", \"DEL\", \"DISCARD\", \"DUMP\", \"ECHO\", \"EVAL\", \"EVALSHA\", \"EXEC\", \"EXISTS\", \"EXPIRE\", \"EXPIREAT\", \"FLUSHALL\", \"FLUSHDB\", \"GEOADD\", \"GEOHASH\", \"GEOPOS\", \"GEODIST\", \"GEORADIUS\", \"GEORADIUSBYMEMBER\", \"GETBIT\", \"GETRANGE\", \"GETSET\", \"HDEL\", \"HEXISTS\", \"HGET\", \"HGETALL\", \"HINCRBY\", \"HINCRBYFLOAT\", \"HKEYS\", \"HLEN\", \"HMGET\", \"HMSET\", \"HSET\", \"HSETNX\", \"HSTRLEN\", \"HVALS\", \"INCR\", \"INCRBY\", \"INCRBYFLOAT\", \"KEYS\", \"LASTSAVE\", \"LINDEX\", \"LINSERT\", \"LLEN\", \"LPOP\", \"LPUSH\", \"LPUSHX\", \"LRANGE\", \"LREM\", \"LSET\", \"LTRIM\", \"MGET\", \"MIGRATE\", \"MONITOR\", \"MOVE\", \"MSET\", \"MSETNX\", \"MULTI\", \"PERSIST\", \"PEXPIRE\", \"PEXPIREAT\", \"PFADD\", \"PFCOUNT\", \"PFMERGE\", \"PING\", \"PSETEX\", \"PSUBSCRIBE\", \"PUBSUB\", \"PTTL\", \"PUBLISH\", \"PUNSUBSCRIBE\", \"QUIT\", \"RANDOMKEY\", \"READONLY\", \"READWRITE\", \"RENAME\", \"RENAMENX\", \"RESTORE\", \"ROLE\", \"RPOP\", \"RPOPLPUSH\", \"RPUSH\", \"RPUSHX\", \"SADD\", \"SAVE\", \"SCARD\", \"SCRIPT\", \"FLUSH\", \"LOAD\", \"SDIFF\", \"SDIFFSTORE\", \"SELECT\", \"SETBIT\", \"SETEX\", \"SETNX\", \"SETRANGE\", \"SHUTDOWN\", \"SINTER\", \"SINTERSTORE\", \"SISMEMBER\", \"SLAVEOF\", \"SLOWLOG\", \"SMEMBERS\", \"SMOVE\", \"SORT\", \"SPOP\", \"SRANDMEMBER\", \"SREM\", \"STRLEN\", \"SUBSCRIBE\", \"SUNION\", \"SUNIONSTORE\", \"SWAPDB\", \"SYNC\", \"TIME\", \"TOUCH\", \"TTL\", \"TYPE\", \"UNSUBSCRIBE\", \"UNLINK\", \"UNWATCH\", \"WAIT\", \"WATCH\", \"ZADD\", \"ZCARD\", \"ZCOUNT\", \"ZINCRBY\", \"ZINTERSTORE\", \"ZLEXCOUNT\", \"ZRANGE\", \"ZRANGEBYLEX\", \"ZREVRANGEBYLEX\", \"ZRANGEBYSCORE\", \"ZRANK\", \"ZREM\", \"ZREMRANGEBYLEX\", \"ZREMRANGEBYRANK\", \"ZREMRANGEBYSCORE\", \"ZREVRANGE\", \"ZREVRANGEBYSCORE\", \"ZREVRANK\", \"ZSCORE\", \"ZUNIONSTORE\", \"SCAN\", \"SSCAN\", \"HSCAN\", \"ZSCAN\"], operators: [], builtinFunctions: [], builtinVariables: [], pseudoColumns: [], tokenizer: { root: [{ include: \"@whitespace\" }, { include: \"@pseudoColumns\" }, { include: \"@numbers\" }, { include: \"@strings\" }, { include: \"@scopes\" }, [/[;,.]/, \"delimiter\"], [/[()]/, \"@brackets\"], [/[\\w@#$]+/, { cases: { \"@keywords\": \"keyword\", \"@operators\": \"operator\", \"@builtinVariables\": \"predefined\", \"@builtinFunctions\": \"predefined\", \"@default\": \"identifier\" } }], [/[<>=!%&+\\-*/|~^]/, \"operator\"]], whitespace: [[/\\s+/, \"white\"]], pseudoColumns: [[/[$][A-Za-z_][\\w@#$]*/, { cases: { \"@pseudoColumns\": \"predefined\", \"@default\": \"identifier\" } }]], numbers: [[/0[xX][0-9a-fA-F]*/, \"number\"], [/[$][+-]*\\d*(\\.\\d*)?/, \"number\"], [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, \"number\"]], strings: [[/'/, { token: \"string\", next: \"@string\" }], [/\"/, { token: \"string.double\", next: \"@stringDouble\" }]], string: [[/[^']+/, \"string\"], [/''/, \"string\"], [/'/, { token: \"string\", next: \"@pop\" }]], stringDouble: [[/[^\"]+/, \"string.double\"], [/\"\"/, \"string.double\"], [/\"/, { token: \"string.double\", next: \"@pop\" }]], scopes: [] } };\nexport {\n  E as conf,\n  S as language\n};\n"],"mappings":"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"}