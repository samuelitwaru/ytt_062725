{"version":3,"names":["t","e","a","regex","n","name","aliases","case_insensitive","disableAutodetect","keywords","keyword","literal","contains","HASH_COMMENT_MODE","QUOTE_STRING_MODE","NUMBER_MODE","scope","match","relevance","begin","end","excludeEnd","concat","lookahead","illegal"],"sources":["node_modules/@genexus/markdown-parser/dist/graphql-D86VYnRi.js"],"sourcesContent":["function t(e) {\n  const a = e.regex, n = /[_A-Za-z][_0-9A-Za-z]*/;\n  return { name: \"GraphQL\", aliases: [\"gql\"], case_insensitive: !0, disableAutodetect: !1, keywords: { keyword: [\"query\", \"mutation\", \"subscription\", \"type\", \"input\", \"schema\", \"directive\", \"interface\", \"union\", \"scalar\", \"fragment\", \"enum\", \"on\"], literal: [\"true\", \"false\", \"null\"] }, contains: [e.HASH_COMMENT_MODE, e.QUOTE_STRING_MODE, e.NUMBER_MODE, { scope: \"punctuation\", match: /[.]{3}/, relevance: 0 }, { scope: \"punctuation\", begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/, relevance: 0 }, { scope: \"variable\", begin: /\\$/, end: /\\W/, excludeEnd: !0, relevance: 0 }, { scope: \"meta\", match: /@\\w+/, excludeEnd: !0 }, { scope: \"symbol\", begin: a.concat(n, a.lookahead(/\\s*:/)), relevance: 0 }], illegal: [/[;<']/, /BEGIN/] };\n}\nexport {\n  t as default\n};\n"],"mappings":"AAAA,SAASA,EAAEC,GACT,MAAMC,EAAID,EAAEE,MAAOC,EAAI,yBACvB,MAAO,CAAEC,KAAM,UAAWC,QAAS,CAAC,OAAQC,kBAAmB,EAAGC,mBAAoB,EAAGC,SAAU,CAAEC,QAAS,CAAC,QAAS,WAAY,eAAgB,OAAQ,QAAS,SAAU,YAAa,YAAa,QAAS,SAAU,WAAY,OAAQ,MAAOC,QAAS,CAAC,OAAQ,QAAS,SAAWC,SAAU,CAACX,EAAEY,kBAAmBZ,EAAEa,kBAAmBb,EAAEc,YAAa,CAAEC,MAAO,cAAeC,MAAO,SAAUC,UAAW,GAAK,CAAEF,MAAO,cAAeG,MAAO,4BAA6BD,UAAW,GAAK,CAAEF,MAAO,WAAYG,MAAO,KAAMC,IAAK,KAAMC,YAAa,EAAGH,UAAW,GAAK,CAAEF,MAAO,OAAQC,MAAO,OAAQI,YAAa,GAAK,CAAEL,MAAO,SAAUG,MAAOjB,EAAEoB,OAAOlB,EAAGF,EAAEqB,UAAU,SAAUL,UAAW,IAAMM,QAAS,CAAC,QAAS,SACvsB,Q"}