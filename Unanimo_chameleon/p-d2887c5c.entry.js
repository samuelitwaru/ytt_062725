import{r as t,c as i,g as s,h as e}from"./p-7af91c05.js";const n=":host{display:-ms-flexbox;display:flex;grid-column-start:1;grid-column-end:-1}.loading:not([hidden]){display:contents}";const o=n;const r=class{constructor(s){t(this,s);this.infinite=i(this,"infinite",7);this.hasGridScroll=undefined;this.status="loaded"}gridLayoutElement;intersectionGridLayoutObserver;intersectionDocumentObserver;get el(){return s(this)}infinite;componentWillLoad(){this.gridLayoutElement=this.el.assignedSlot.closest("section.main");this.intersectionGridLayoutObserver=new IntersectionObserver(this.intersectionObserverHandler,{root:this.gridLayoutElement,rootMargin:"1px"});this.intersectionGridLayoutObserver.observe(this.el);this.intersectionDocumentObserver=new IntersectionObserver(this.intersectionObserverHandler,{rootMargin:"1px"});this.intersectionDocumentObserver.observe(this.el)}disconnectedCallback(){if(this.intersectionGridLayoutObserver){this.intersectionGridLayoutObserver.disconnect()}}async complete(){this.status="loaded"}intersectionObserverHandler=(t,i)=>{const s=this.gridLayoutElement.scrollHeight!==this.gridLayoutElement.clientHeight;const e=i.root?s:!s;if(e&&t[0].isIntersecting&&this.status==="loaded"){this.status="loading";this.infinite.emit()}};render(){return e("div",{key:"2f0240c9a3cd4432fb883bce52927b72e2eea5b3",class:"loading",hidden:!(this.status==="loading")},e("slot",{key:"5574c773bb63ed7bd8ded5aaad649eb29f2f1d80"}))}};r.style=o;export{r as ch_grid_infinite_scroll};
//# sourceMappingURL=p-d2887c5c.entry.js.map