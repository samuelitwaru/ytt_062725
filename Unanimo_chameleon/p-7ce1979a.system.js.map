{"version":3,"names":["e","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","t","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","javadoc","string","multistring","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/kotlin-DX5ll4GS.js"],"sourcesContent":["var e = { wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g, comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }, { open: \"<\", close: \">\" }], folding: { markers: { start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"), end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\") } } }, t = { defaultToken: \"\", tokenPostfix: \".kt\", keywords: [\"as\", \"as?\", \"break\", \"class\", \"continue\", \"do\", \"else\", \"false\", \"for\", \"fun\", \"if\", \"in\", \"!in\", \"interface\", \"is\", \"!is\", \"null\", \"object\", \"package\", \"return\", \"super\", \"this\", \"throw\", \"true\", \"try\", \"typealias\", \"val\", \"var\", \"when\", \"while\", \"by\", \"catch\", \"constructor\", \"delegate\", \"dynamic\", \"field\", \"file\", \"finally\", \"get\", \"import\", \"init\", \"param\", \"property\", \"receiver\", \"set\", \"setparam\", \"where\", \"actual\", \"abstract\", \"annotation\", \"companion\", \"const\", \"crossinline\", \"data\", \"enum\", \"expect\", \"external\", \"final\", \"infix\", \"inline\", \"inner\", \"internal\", \"lateinit\", \"noinline\", \"open\", \"operator\", \"out\", \"override\", \"private\", \"protected\", \"public\", \"reified\", \"sealed\", \"suspend\", \"tailrec\", \"vararg\", \"field\", \"it\"], operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"++\", \"--\", \"&&\", \"||\", \"!\", \"==\", \"!=\", \"===\", \"!==\", \">\", \"<\", \"<=\", \">=\", \"[\", \"]\", \"!!\", \"?.\", \"?:\", \"::\", \"..\", \":\", \"?\", \"->\", \"@\", \";\", \"$\", \"_\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, digits: /\\d+(_+\\d+)*/, octaldigits: /[0-7]+(_+[0-7]+)*/, binarydigits: /[0-1]+(_+[0-1]+)*/, hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/, tokenizer: { root: [[/[A-Z][\\w\\$]*/, \"type.identifier\"], [/[a-zA-Z_$][\\w$]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"], [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/0[xX](@hexdigits)[Ll]?/, \"number.hex\"], [/0(@octaldigits)[Ll]?/, \"number.octal\"], [/0[bB](@binarydigits)[Ll]?/, \"number.binary\"], [/(@digits)[fFdD]/, \"number.float\"], [/(@digits)[lL]?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"\"\"/, \"string\", \"@multistring\"], [/\"/, \"string\", \"@string\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@javadoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], javadoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\/\\*/, \"comment.doc\", \"@push\"], [/\\/\\*/, \"comment.doc.invalid\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]], string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]], multistring: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"\"\"/, \"string\", \"@pop\"], [/./, \"string\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}