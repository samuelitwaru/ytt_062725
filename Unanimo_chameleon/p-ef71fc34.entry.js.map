{"version":3,"names":["StorageItem","key","value","constructor","data","this","SessionStorageWorker","sessionStorageSupported","window","sessionStorage","add","item","setItem","getAllItems","list","Array","i","length","getItem","push","getAllValues","get","remove","removeItem","clear","chSidebarMenuCss","ChSidebarMenuStyle0","ChSidebarMenu","itemClicked","collapseBtnClicked","topHeightSpeed","speedDivisionValue","main","menu","title","footer","collapseButton","componentDidLoad","matchMedia","matches","classList","addEventListener","handleMatchMedia","bind","getSidebarState","titleHeight","offsetHeight","footerHeight","titleAndFooterHeight","collapsableItems","el","querySelectorAll","topDistance","distanceToTop","toString","style","top","height","items","from","forEach","mainContainer","shadowRoot","querySelector","maxHeight","uncollapsedItems","uncollapsedItemsArr","prototype","slice","call","reverse","mainContainerHeight","menuList","menuListHeight","indicator","document","createElement","setAttribute","appendChild","repositionIndicatorAfterMenuUncollapse","e","stopPropagation","contains","itemTopPosition","getBoundingClientRect","y","itemHeight","singleListOpen","itemCopy","totalHeight","previousElementSibling","itemCopyMainContainer","currentActiveItem","GetCurrentItemIndicatorPos","storeSidebarActiveItem","activeItem","id","activeItemId","parentEl","parentElement","hasAttribute","uncollapseList","grandpaEl","activeItemTopPosition","activeItemHeight","click","toggleIcon","setTransitionSpeed","collapseList","parentItem1","closest","heightToTransition","updateListItem1TransitionSpeed","updateListItem1MaxHeight","collapsableListOneItems","lastUl1Opened","lastUl1OpenedMainContainer","collapsible","setTimeOutDelay","hideIndicator","setTimeout","uncollapseCollapsedLists","undoSwitchListOneOrder","isCollapsed","collapseMenuHandler","storeSidebarState","collapseUncollapsedLists1","switchListOneOrder","repositionIndicatorAfterMenuCollapse","showIndicator","getSidebarCollapsedState","itemTooltip","zIndex","innerHTML","childNodes","nodeValue","lastTop","doc","documentElement","pageYOffset","scrollTop","clientTop","undefined","menuTop","Number","split","scrollTopValue","mainTop","topStr","q","closeSidebar","screenSize","className","timer","currentActiveItemTopPosition","clearTimeout","closestL1","closestL1MainContainer","topPosition","activeItemMainContainer","activeItemMainContainerTopPosition","activeItemMainContainerHeight","uncollapsedLists1Items","removeSpeedZero","propertyName","removeEventListener","uncollapsedMaxHeight","getAttribute","removeAttribute","listOneItems","transitionDuration","clientHeight","list2Items","totalMaxHeight","parseInt","transitionSpeed","childListHeight","storeSidebarCollapsedItem","storeSidebarUncollapsedItem","storageHelper","StorageHelper.SessionStorageWorker","sessionItemValue","storageItem","storageItems","getElementById","emit","render","h","Host","part","ref","menuTitle","name","class","__decorate","ClickOutside","exclude"],"sources":["src/helpers/storage-helper.ts","src/deprecated-components/sidebar-menu/ch-sidebar-menu.scss?tag=ch-sidebar-menu&encapsulation=shadow","src/deprecated-components/sidebar-menu/ch-sidebar-menu.tsx"],"sourcesContent":["export interface IStorageItem {\r\n  key: string;\r\n  value: any;\r\n}\r\n\r\nexport class StorageItem {\r\n  key: string;\r\n  value: any;\r\n\r\n  constructor(data: IStorageItem) {\r\n    this.key = data.key;\r\n    this.value = data.value;\r\n  }\r\n}\r\n\r\n// class for working with session storage in browser (common that can use other classes for store some data)\r\nexport class SessionStorageWorker {\r\n  sessionStorageSupported: boolean;\r\n\r\n  constructor() {\r\n    this.sessionStorageSupported =\r\n      typeof window.sessionStorage !== \"undefined\" &&\r\n      window.sessionStorage != null;\r\n  }\r\n\r\n  // add value to storage\r\n  add(key: string, item: string) {\r\n    if (this.sessionStorageSupported) {\r\n      sessionStorage.setItem(key, item);\r\n    }\r\n  }\r\n\r\n  // get all values from storage (all items)\r\n  getAllItems(): Array<StorageItem> {\r\n    const list = new Array<StorageItem>();\r\n    for (let i = 0; i < sessionStorage.length; i++) {\r\n      const key = sessionStorage.key(i);\r\n      const value = sessionStorage.getItem(key);\r\n\r\n      list.push(\r\n        new StorageItem({\r\n          key: key,\r\n          value: value\r\n        })\r\n      );\r\n    }\r\n    return list;\r\n  }\r\n\r\n  // get only all values from sessionStorage\r\n  getAllValues(): Array<any> {\r\n    const list = new Array<any>();\r\n    for (let i = 0; i < sessionStorage.length; i++) {\r\n      const key = sessionStorage.key(i);\r\n      const value = sessionStorage.getItem(key);\r\n\r\n      list.push(value);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  // get one item by key from storage\r\n  get(key: string): string {\r\n    if (this.sessionStorageSupported) {\r\n      const item = sessionStorage.getItem(key);\r\n      return item;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // remove value from storage\r\n  remove(key: string) {\r\n    if (this.sessionStorageSupported) {\r\n      sessionStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  // clear storage (remove all items from it)\r\n  clear() {\r\n    if (this.sessionStorageSupported) {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n","$menuWidth: 240px;\r\n\r\n:host {\r\n  /**\r\n  * @prop --title-font-family: The menu font family\r\n  */\r\n  --title-font-family: \"Source Sans Pro\", sans-serif;\r\n\r\n  /**\r\n  * @prop --title-text-transform: The menu text transform property\r\n  */\r\n  --title-text-transform: lowercase;\r\n\r\n  /**\r\n  * @prop --title-font-weight: The menu text font weight\r\n  */\r\n  --title-font-weight: bold;\r\n\r\n  /**\r\n  * @prop --first-list-font-size: The item font size for the first list items\r\n  */\r\n  --first-list-font-size: 14px;\r\n\r\n  /**\r\n  * @prop --second-list-font-size: The item font size for the second list items\r\n  */\r\n  --second-list-font-size: 14px;\r\n\r\n  /**\r\n  * @prop --third-list-font-size: The item font size for the third list items\r\n  */\r\n  --third-list-font-size: 14px;\r\n\r\n  /**\r\n  * @prop --first-list-line-height: The item line height for the first list items\r\n  */\r\n  --first-list-line-height: 1.4em;\r\n\r\n  /**\r\n  * @prop --second-list-line-height: The item line height for the second list items\r\n  */\r\n  --second-list-line-height: 1.4em;\r\n\r\n  /**\r\n  * @prop --third-list-line-height: The item line height for the third list items\r\n  */\r\n  --third-list-line-height: 1.4em;\r\n\r\n  /**\r\n  * @prop --first-list-text-transform: The item text transform for the first list items\r\n  */\r\n  --first-list-text-transform: capitalize;\r\n\r\n  /**\r\n  * @prop --second-list-text-transform: The item text transform for the second list items\r\n  */\r\n  --second-list-text-transform: lowercase;\r\n\r\n  /**\r\n  * @prop --third-list-text-transform: The item text transform for the third list items\r\n  */\r\n  --third-list-text-transform: capitalize;\r\n\r\n  /**\r\n  * @prop --first-list-text-vertical-padding: The vertical padding (top and bottom) for the first list items\r\n  */\r\n  --first-list-text-vertical-padding: 8px;\r\n\r\n  /**\r\n  * @prop --second-list-text-vertical-padding: The vertical padding (top and bottom) for the second list items\r\n  */\r\n  --second-list-text-vertical-padding: 6px;\r\n\r\n  /**\r\n  * @prop --third-list-text-vertical-padding: The vertical padding (top and bottom) for the third list items\r\n  */\r\n  --third-list-text-vertical-padding: 4px;\r\n\r\n  /**\r\n  * @prop --menu-background-color: The background color of the menu\r\n  */\r\n  --menu-background-color: var(--whiteSmoke);\r\n\r\n  /**\r\n  * @prop --text-color: The color of the text\r\n  */\r\n  --text-color: var(--black);\r\n\r\n  /**\r\n  * @prop --item-hover-color: The color of the item on hover\r\n  */\r\n  --item-hover-color: var(--lightGray);\r\n\r\n  /**\r\n  * @prop --item-active-color: The color of active item\r\n  */\r\n  --item-active-color: var(--silverGray);\r\n\r\n  /**\r\n  * @prop --first-list-icon-color: The color of the first list icon\r\n  */\r\n  --first-list-icon-color: var(--black);\r\n\r\n  /**\r\n  * @prop --first-list-arrow-color: The color of the first list arrow icon\r\n  */\r\n  --first-list-arrow-color: var(--black);\r\n\r\n  /**\r\n  * @prop --second-list-arrow-color: The color of the second list arrow icon\r\n  */\r\n  --second-list-arrow-color: var(--black);\r\n\r\n  /**\r\n  * @prop --footer-line: The color of the footer separator line\r\n  */\r\n  --footer-line-color: var(--black);\r\n\r\n  /**\r\n  * @prop --footer-font-size: The footer font size\r\n  */\r\n  --footer-font-size: 14px;\r\n\r\n  /**\r\n  * @prop --indicator-color: The color of the lateral indicator\r\n  */\r\n  --indicator-color: var(--black);\r\n\r\n  /**\r\n  * @prop --scrollbar-track: The color of the scrollbar track\r\n  */\r\n  --scrollbar-track: var(--lightGray);\r\n\r\n  /**\r\n  * @prop --scrollbar-thumb: The color of the scrollbar thumb\r\n  */\r\n  --scrollbar-thumb: var(--darkGray);\r\n\r\n  display: block;\r\n\r\n  #menu {\r\n    background-color: var(--menu-background-color);\r\n    font-family: var(--title-font-family);\r\n    width: $menuWidth;\r\n    position: fixed;\r\n    height: 100vh;\r\n    inset-inline-start: 0;\r\n    top: 0;\r\n    z-index: 5;\r\n\r\n    #title {\r\n      text-transform: var(--title-text-transform);\r\n      font-weight: var(--title-font-weight);\r\n      color: var(--text-color);\r\n      font-size: 14px;\r\n      letter-spacing: 0.378px;\r\n      padding: 16px;\r\n      margin: 0;\r\n      position: relative;\r\n      z-index: 20;\r\n      width: $menuWidth;\r\n      box-sizing: border-box;\r\n\r\n      &:before {\r\n        //Hide indicator\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 2px;\r\n        height: 10px;\r\n        background-color: var(--menu-background-color);\r\n        inset-inline-start: 0;\r\n        height: 100%;\r\n        top: 0;\r\n      }\r\n    }\r\n\r\n    #main {\r\n      overflow-y: auto;\r\n      position: fixed;\r\n      width: $menuWidth;\r\n      z-index: 10;\r\n    }\r\n\r\n    .text {\r\n      color: var(--text-color);\r\n    }\r\n\r\n    #footer {\r\n      position: fixed;\r\n      bottom: 0;\r\n      inset-inline-start: 0;\r\n      width: $menuWidth;\r\n      box-sizing: border-box;\r\n      z-index: 20;\r\n      font-size: var(--footer-font-size);\r\n\r\n      #custom-content {\r\n        padding: 32px 16px 8px 16px;\r\n        position: relative;\r\n        &:before {\r\n          //Hide indicator\r\n          content: \"\";\r\n          position: absolute;\r\n          width: 2px;\r\n          height: 10px;\r\n          background-color: var(--menu-background-color);\r\n          inset-inline-start: 0;\r\n          height: 100%;\r\n          top: 0;\r\n        }\r\n      }\r\n\r\n      #collapse-menu {\r\n        cursor: pointer;\r\n        height: 50px;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 16px;\r\n        transition: var(--menu-background-color) 0.25s;\r\n        border-top: 1px solid var(--footer-line-color);\r\n        transition: background-color 0.25s;\r\n        position: relative;\r\n        &:hover {\r\n          background-color: var(--item-hover-color);\r\n          &:before {\r\n            background-color: var(--item-hover-color);\r\n          }\r\n        }\r\n        &:active {\r\n          background-color: var(--item-active-color);\r\n          &:before {\r\n            background-color: var(--item-active-color);\r\n          }\r\n        }\r\n        &:before {\r\n          //Hide indicator\r\n          content: \"\";\r\n          position: absolute;\r\n          width: 2px;\r\n          height: 10px;\r\n          background-color: var(--menu-background-color);\r\n          inset-inline-start: 0;\r\n          height: 100%;\r\n          top: 0;\r\n          transition: background-color 0.25s;\r\n        }\r\n      }\r\n    }\r\n\r\n    // COLLAPSED / COLLAPSING\r\n    &.collapsed {\r\n      #footer {\r\n        #custom-content {\r\n          display: none;\r\n        }\r\n        #collapse-menu {\r\n          padding: 0 10px;\r\n        }\r\n      }\r\n    }\r\n    &.collapsed,\r\n    &.collapsed #title,\r\n    &.collapsed #footer {\r\n      inset-inline-start: -202px;\r\n    }\r\n\r\n    &.collapsing,\r\n    &.collapsing #title,\r\n    &.collapsing #footer {\r\n      inset-inline-start: -240px !important;\r\n      transition: left 0.6s;\r\n      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);\r\n    }\r\n\r\n    &.collapse-faster,\r\n    &.collapse-faster #title,\r\n    &.collapse-faster #footer {\r\n      transition: left 0.3s;\r\n      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);\r\n    }\r\n\r\n    &.collapsed #collapse-menu {\r\n      flex-direction: row-reverse;\r\n      ch-icon {\r\n        transform: rotate(180deg);\r\n      } \r\n      .collapse-icon {\r\n        transform: rotate(180deg);\r\n      }\r\n    }\r\n  }\r\n  #menu,\r\n  #footer {\r\n    color: var(--text-color);\r\n  }\r\n\r\n  /*TOOLTIP*/\r\n  .tooltip {\r\n    position: fixed;\r\n    inset-inline-start:50px;\r\n    opacity: 0;\r\n    transition: opacity 0.25s;\r\n    background-color: var(--menu-background-color);\r\n    color: var(--text-color);\r\n    padding: 4px 8px;\r\n    border-radius: 6px;\r\n    z-index: 0;\r\n  }\r\n  .tooltip.visible {\r\n    opacity: 1;\r\n  }\r\n\r\n  /*INDICATOR*/\r\n  #indicator {\r\n    width: 2px;\r\n    background-color: var(--indicator-color);\r\n    position: fixed;\r\n    inset-inline-start: 0;\r\n    height: 0;\r\n    transition: top 0.4s, height 0.5s, opacity 0.35s;\r\n    opacity: 1;\r\n  }\r\n  #indicator.speed-zero {\r\n    transition-duration: 0s;\r\n  }\r\n  #indicator.hide {\r\n    opacity: 0;\r\n  }\r\n\r\n  /*SCROLLBAR*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: var(--scrollbar-track);\r\n    border-radius: 3px;\r\n  }\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: var(--scrollbar-thumb);\r\n    border-radius: 3px;\r\n  }\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: var(--scrollbar-thumb);\r\n    cursor: pointer;\r\n  }\r\n\r\n  .hidden-xs {\r\n    visibility: hidden;\r\n  }\r\n\r\n  .visible-xs {\r\n    visibility: inherit;\r\n  }\r\n}\r\n","/* eslint-disable @stencil-community/own-methods-must-be-private */\r\n/* eslint-disable @stencil-community/required-jsdoc */\r\nimport {\r\n  Component,\r\n  Element,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  State,\r\n  Event,\r\n  EventEmitter\r\n} from \"@stencil/core\";\r\n\r\nimport * as StorageHelper from \"../../helpers/storage-helper\";\r\nimport { ClickOutside } from \"stencil-click-outside\";\r\n\r\n@Component({\r\n  tag: \"ch-sidebar-menu\",\r\n  styleUrl: \"ch-sidebar-menu.scss\",\r\n  shadow: true,\r\n  assetsDirs: [\"sidebar-menu-assets\"]\r\n})\r\nexport class ChSidebarMenu {\r\n  @Event() itemClicked: EventEmitter;\r\n  @Event() collapseBtnClicked: EventEmitter;\r\n\r\n  @Element() el: HTMLChSidebarMenuElement;\r\n\r\n  private topHeightSpeed = 300;\r\n  private speedDivisionValue = 400;\r\n\r\n  /** *****************\r\n   * REFERENCES\r\n   *******************/\r\n  main!: HTMLElement;\r\n  menu!: HTMLElement;\r\n  title!: HTMLElement;\r\n  footer!: HTMLElement;\r\n  collapseButton!: HTMLElement;\r\n\r\n  /** *****************\r\n   * PROPS\r\n   *******************/\r\n\r\n  /**\r\n   * The menu title\r\n   */\r\n  @Prop() readonly menuTitle: string;\r\n\r\n  /**\r\n   * The presence of this attribute allows the menu to have only one list opened at the same time\r\n   */\r\n  @Prop() readonly singleListOpen: boolean = false;\r\n\r\n  /**\r\n   * Allows to set the distance to the top of the page on the menu\r\n   */\r\n  @Prop() readonly distanceToTop: number = 0;\r\n\r\n  /**\r\n   * Determines if the menu can be collapsed\r\n   */\r\n  @Prop() readonly collapsible: boolean = true;\r\n\r\n  /**\r\n   * The initial active item (optional)\r\n   */\r\n  @Prop() readonly activeItemId: string = \"\";\r\n\r\n  /**\r\n   * The active item\r\n   */\r\n  @Prop({ mutable: true }) activeItem = \"\";\r\n\r\n  /**\r\n   * Determines if the menu is collapsed\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) isCollapsed: boolean;\r\n\r\n  /** *****************\r\n   * STATE\r\n   *******************/\r\n  @State() indicator: HTMLElement;\r\n\r\n  componentDidLoad() {\r\n    // hide menu in mobile view\r\n    if (window.matchMedia(\"(max-width: 767px)\").matches) {\r\n      this.menu.classList.add(\"hidden-xs\");\r\n    }\r\n    window\r\n      .matchMedia(\"(max-width: 767px)\")\r\n      .addEventListener(\"change\", this.handleMatchMedia.bind(this));\r\n\r\n    // get sidebar status from storage\r\n    this.getSidebarState();\r\n\r\n    const titleHeight = this.title.offsetHeight;\r\n    const footerHeight = this.footer.offsetHeight;\r\n    const titleAndFooterHeight = titleHeight + footerHeight + \"px\";\r\n    const collapsableItems = this.el.querySelectorAll(\".collapsable\");\r\n\r\n    /* Set menu top position*/\r\n    const topDistance = this.distanceToTop.toString() + \"px\";\r\n    this.menu.style.top = topDistance;\r\n\r\n    /* Set main height*/\r\n    this.main.style.height = `calc(100vh - ${titleAndFooterHeight} - ${topDistance})`;\r\n\r\n    // SET INITAL ITEMS MAX HEIGHT\r\n    const items = this.el.querySelectorAll(\".item\");\r\n    Array.from(items as unknown as HTMLCollectionOf<HTMLElement>).forEach(\r\n      function (item) {\r\n        const mainContainer = item.shadowRoot.querySelector(\".main-container\");\r\n        item.style.maxHeight =\r\n          (mainContainer as HTMLElement).offsetHeight + \"px\";\r\n      }\r\n    );\r\n    // AFTER INITIAL ITEMS MAX HEIGHT HAS BEEN DEFINED, REDEFINE MAX HEIGHT FOR THE UNCOLLAPSED ITEMS\r\n    const uncollapsedItems = this.el.querySelectorAll(\".item.uncollapsed\");\r\n    const uncollapsedItemsArr = Array.prototype.slice\r\n      .call(uncollapsedItems)\r\n      .reverse();\r\n\r\n    uncollapsedItemsArr.forEach(function (item) {\r\n      // mainContainer height\r\n      const mainContainerHeight =\r\n        item.shadowRoot.querySelector(\".main-container\").offsetHeight;\r\n      // menu list height\r\n      const menuList = item.querySelector(\":scope > ch-sidebar-menu-list\");\r\n      if (menuList) {\r\n        const menuListHeight = (menuList as HTMLElement).offsetHeight;\r\n        item.style.maxHeight = mainContainerHeight + menuListHeight + \"px\";\r\n      }\r\n    });\r\n\r\n    /** ********************************\r\n    LATERAL ACTIVE ITEM INDICATOR LOGIC\r\n    ***********************************/\r\n    this.indicator = document.createElement(\"DIV\");\r\n    this.indicator.setAttribute(\"id\", \"indicator\");\r\n    this.main.appendChild(this.indicator);\r\n\r\n    // when active-item is loaded from session, recalculate indicator position\r\n    this.repositionIndicatorAfterMenuUncollapse();\r\n\r\n    Array.from(items).forEach(\r\n      function (item) {\r\n        item.addEventListener(\r\n          \"click\",\r\n          function (e) {\r\n            e.stopPropagation();\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            if (!this.menu.classList.contains(\"collapsed\")) {\r\n              const itemTopPosition = item.getBoundingClientRect().y;\r\n              const itemHeight =\r\n                item.shadowRoot.querySelector(\".main-container\").offsetHeight;\r\n\r\n              if (\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.singleListOpen &&\r\n                item.classList.contains(\"list-one__item\")\r\n              ) {\r\n                let itemCopy = item;\r\n                let totalHeight = titleHeight;\r\n                while ((itemCopy = itemCopy.previousElementSibling) != null) {\r\n                  const itemCopyMainContainer =\r\n                    itemCopy.shadowRoot.querySelector(\".main-container\");\r\n                  totalHeight += itemCopyMainContainer.offsetHeight;\r\n                }\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.indicator.style.top = totalHeight + \"px\";\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.indicator.style.height = itemHeight + \"px\";\r\n              } else {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.indicator.style.top = itemTopPosition + \"px\";\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.indicator.style.height = itemHeight + \"px\";\r\n              }\r\n            }\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          }.bind(this)\r\n        );\r\n      }.bind(this)\r\n    );\r\n\r\n    /** *******************\r\n    SET ACTIVE ITEM LOGIC\r\n    **********************/\r\n    Array.from(items).forEach(\r\n      function (item) {\r\n        item.addEventListener(\r\n          \"click\",\r\n          function (e) {\r\n            e.stopPropagation();\r\n            // fede\r\n            // if (!this.menu.classList.contains(\"collapsed\")) {\r\n            // remove current active item class\r\n            const currentActiveItem = document.querySelector(\".item--active\");\r\n            if (currentActiveItem !== null) {\r\n              currentActiveItem.classList.remove(\"item--active\");\r\n            }\r\n            // set current item as active\r\n            item.classList.add(\"item--active\");\r\n\r\n            // fede\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.GetCurrentItemIndicatorPos();\r\n\r\n            // store the active item on the sessionStorage\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.storeSidebarActiveItem(item);\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.activeItem = item.id;\r\n            // }\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          }.bind(this)\r\n        );\r\n      }.bind(this)\r\n    );\r\n    // SET ACTIVE CURRENT ACTIVE ITEM IF PRESENT\r\n    // if (this.activeItemId !== \"\") {\r\n    if (this.activeItemId !== \"\" && !this.activeItem) {\r\n      const activeItem = this.el.querySelector(\"#\" + this.activeItemId);\r\n      activeItem.classList.add(\"item--active\");\r\n\r\n      // uncollapse item's parent if exists\r\n      let parentEl = activeItem.parentElement;\r\n      if (parentEl.hasAttribute(\"slot\")) {\r\n        parentEl = parentEl.parentElement;\r\n        this.uncollapseList(parentEl);\r\n        parentEl.classList.add(\"uncollapsed\");\r\n        let grandpaEl = parentEl.parentElement;\r\n        if (grandpaEl.hasAttribute(\"slot\")) {\r\n          grandpaEl = grandpaEl.parentElement;\r\n          this.uncollapseList(grandpaEl);\r\n          grandpaEl.classList.add(\"uncollapsed\");\r\n        }\r\n      }\r\n      // indicator\r\n      // let indicator = this.el.shadowRoot.querySelector(\"#indicator\");\r\n      const activeItemTopPosition = activeItem.getBoundingClientRect().y;\r\n      const activeItemHeight =\r\n        activeItem.shadowRoot.querySelector<HTMLElement>(\r\n          \".main-container\"\r\n        ).offsetHeight;\r\n      this.indicator.style.top = activeItemTopPosition + \"px\";\r\n      this.indicator.style.height = activeItemHeight + \"px\";\r\n    }\r\n\r\n    /** **************************\r\n    COLLAPSABLE LIST ITEMS LOGIC\r\n    ****************************/\r\n    Array.from(collapsableItems).forEach(\r\n      function (item) {\r\n        const mainContainer = item.shadowRoot.querySelector(\".main-container\");\r\n        mainContainer.addEventListener(\r\n          \"click\",\r\n          function () {\r\n            if (\r\n              item.classList.contains(\"list-one__item\") &&\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              this.menu.classList.contains(\"collapsed\")\r\n            ) {\r\n              // If item clicked is type 1, and menu is collapsed, just uncollapse the menu.\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              this.collapseButton.click();\r\n            } else {\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              this.toggleIcon(item); // This function has to be before  uncollapseList or collapseList.\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              this.setTransitionSpeed(item);\r\n              if (item.classList.contains(\"uncollapsed\")) {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.uncollapseList(item);\r\n              } else {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.collapseList(item);\r\n              }\r\n              // If this item is type 2, then update list 1 transition speed and maxheight\r\n              if (item.classList.contains(\"list-two__item\")) {\r\n                const parentItem1 = item.closest(\".list-one__item\");\r\n                const heightToTransition =\r\n                  item.querySelector(\".list-three\").offsetHeight;\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.updateListItem1TransitionSpeed(\r\n                  parentItem1,\r\n                  heightToTransition\r\n                );\r\n                // Update list 1 max. height\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.updateListItem1MaxHeight(parentItem1);\r\n              }\r\n            }\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          }.bind(this)\r\n        );\r\n      }.bind(this)\r\n    );\r\n\r\n    /** *****************************\r\n    SINGLE UL1 OPEN AT A TIME LOGIC  \r\n    *******************************/\r\n    // Only one list of type 1 can be open at the same time.\r\n    // This is an optional parameter. Applies if 'data-single-ul1-open' attribute is present on #menu\r\n    if (this.singleListOpen) {\r\n      const collapsableListOneItems =\r\n        document.querySelectorAll(\".list-one__item\");\r\n      Array.from(collapsableListOneItems).forEach(\r\n        function (item) {\r\n          const mainContainer =\r\n            item.shadowRoot.querySelector(\".main-container\");\r\n          mainContainer.addEventListener(\r\n            \"click\",\r\n            function () {\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              if (!this.menu.classList.contains(\"collapsed\")) {\r\n                const lastUl1Opened = document.querySelector(\".lastUl1Opened\");\r\n                if (\r\n                  lastUl1Opened !== null &&\r\n                  !item.classList.contains(\"lastUl1Opened\")\r\n                ) {\r\n                  const lastUl1OpenedMainContainer =\r\n                    lastUl1Opened.shadowRoot.querySelector(\".main-container\");\r\n                  (lastUl1OpenedMainContainer as HTMLElement).click();\r\n                }\r\n                if (item.classList.contains(\"uncollapsed\")) {\r\n                  item.classList.add(\"lastUl1Opened\");\r\n                } else {\r\n                  item.classList.remove(\"lastUl1Opened\");\r\n                }\r\n              }\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            }.bind(this)\r\n          );\r\n        }.bind(this)\r\n      );\r\n    }\r\n\r\n    /** *****************\r\n    COLLAPSE MENU LOGIC\r\n    *******************/\r\n    if (this.collapsible) {\r\n      this.collapseButton.addEventListener(\r\n        \"click\",\r\n        function () {\r\n          let setTimeOutDelay = 0;\r\n          // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          if (this.menu.classList.contains(\"collapsed\")) {\r\n            // if menu is collapsed, the animation that shows the menu should be quicker\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.menu.classList.add(\"collapse-faster\");\r\n            setTimeOutDelay = 300; // This value should be the same as the #menu.collapse-faster transition speed value.\r\n          } else {\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.menu.classList.remove(\"collapse-faster\");\r\n            setTimeOutDelay = 600; // This value should be the same as the #menu without .collapse-faster transition speed value.\r\n          }\r\n          // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          this.menu.classList.add(\"collapsing\");\r\n          // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          this.hideIndicator();\r\n          setTimeout(\r\n            function () {\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              if (this.menu.classList.contains(\"collapsed\")) {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.uncollapseCollapsedLists();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.undoSwitchListOneOrder();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.menu.classList.remove(\"collapsed\");\r\n                setTimeout(\r\n                  function () {\r\n                    // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                    this.repositionIndicatorAfterMenuUncollapse();\r\n                    // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                  }.bind(this),\r\n                  50\r\n                );\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.isCollapsed = false;\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.collapseMenuHandler();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.storeSidebarState();\r\n              } else {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.collapseUncollapsedLists1();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.switchListOneOrder();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.menu.classList.add(\"collapsed\");\r\n                setTimeout(\r\n                  function () {\r\n                    // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                    this.repositionIndicatorAfterMenuCollapse();\r\n                    // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                  }.bind(this),\r\n                  50\r\n                );\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.isCollapsed = true;\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.collapseMenuHandler();\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.storeSidebarState();\r\n              }\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n              this.menu.classList.remove(\"collapsing\");\r\n              setTimeout(\r\n                function () {\r\n                  // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                  this.showIndicator();\r\n                  // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                }.bind(this),\r\n                400\r\n              );\r\n              // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            }.bind(this),\r\n            setTimeOutDelay\r\n          );\r\n        }.bind(this)\r\n      );\r\n    }\r\n\r\n    this.getSidebarCollapsedState();\r\n\r\n    /** ****************\r\n    ITEMS TOOLTIP LOGIC\r\n    *******************/\r\n    const itemTooltip = document.createElement(\"DIV\");\r\n    itemTooltip.classList.add(\"tooltip\");\r\n    itemTooltip.style.zIndex = \"0\";\r\n    this.menu.appendChild(itemTooltip);\r\n\r\n    Array.from(items).forEach(\r\n      function (item) {\r\n        const mainContainer = item.shadowRoot.querySelector(\".main-container\");\r\n        mainContainer.addEventListener(\r\n          \"mouseenter\",\r\n          function () {\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            if (this.menu.classList.contains(\"collapsed\")) {\r\n              itemTooltip.classList.add(\"visible\");\r\n              itemTooltip.innerHTML = item.childNodes[0].nodeValue;\r\n              const itemTopPosition = item.getBoundingClientRect().y;\r\n              itemTooltip.style.top = itemTopPosition + \"px\";\r\n            }\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          }.bind(this)\r\n        );\r\n        mainContainer.addEventListener(\r\n          \"mouseleave\",\r\n          function () {\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            if (this.menu.classList.contains(\"collapsed\")) {\r\n              itemTooltip.classList.remove(\"visible\");\r\n            }\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          }.bind(this)\r\n        );\r\n      }.bind(this)\r\n    );\r\n\r\n    // REPOSITION INDICATOR ON SCROLL\r\n    this.main.addEventListener(\r\n      \"scroll\",\r\n      function () {\r\n        // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n        this.GetCurrentItemIndicatorPos();\r\n      }.bind(this)\r\n    );\r\n\r\n    // Calculation of menu top value and height on scroll\r\n    let lastTop: number;\r\n    document.addEventListener(\r\n      \"scroll\",\r\n      function () {\r\n        const doc = document.documentElement;\r\n        const top: any =\r\n          (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n        if (lastTop === undefined) {\r\n          lastTop = 0;\r\n        }\r\n        // make menu.top a number\r\n        // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n        const menuTop = Number(this.menu.style.top.split(\"px\")[0]);\r\n        if (menuTop > 0) {\r\n          if (menuTop - (top - lastTop) > 0) {\r\n            const scrollTopValue: number = top - lastTop;\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.menu.style.top = menuTop - scrollTopValue + \"px\";\r\n            lastTop = top;\r\n            /* Set main height*/\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            const mainTop = this.distanceToTop - top;\r\n            const topStr = mainTop + \"px\";\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.main.style.height = `calc(100vh - ${titleAndFooterHeight} - ${topStr})`;\r\n            // reposition of active item indicator\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.GetCurrentItemIndicatorPos();\r\n          } else {\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.menu.style.top = \"0px\";\r\n            // reposition of active item indicator\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.GetCurrentItemIndicatorPos();\r\n          }\r\n        } else if (menuTop == 0) {\r\n          // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          if (top <= this.distanceToTop) {\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.menu.style.top = this.distanceToTop - top + \"px\";\r\n            lastTop = top;\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.main.style.height = `calc(100vh - ${titleAndFooterHeight} - ${top})`;\r\n            // reposition of active item indicator\r\n            // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n            this.GetCurrentItemIndicatorPos();\r\n          }\r\n        }\r\n      }.bind(this)\r\n    );\r\n  } // End of ComponentDidLoad\r\n\r\n  handleMatchMedia(q) {\r\n    if (q.matches) {\r\n      this.menu.classList.add(\"hidden-xs\");\r\n    } else {\r\n      this.menu.classList.remove(\"hidden-xs\");\r\n    }\r\n  }\r\n\r\n  @ClickOutside({ exclude: \".sidebar__toggle-ico\" })\r\n  closeSidebar() {\r\n    // close the sidebar when user clicks outside of component area (only in mobile view - xs media screens).\r\n    const screenSize = window.matchMedia(\"(max-width: 767px)\");\r\n    if (screenSize.matches) {\r\n      // Viewport is less or equal to 767 pixels wide\r\n      this.menu.className = \"\";\r\n      this.menu.classList.add(\"hidden-xs\");\r\n    }\r\n  }\r\n\r\n  // get position of current active item\r\n  GetCurrentItemIndicatorPos() {\r\n    let timer = null;\r\n    const currentActiveItem = document.querySelector(\".item--active\");\r\n    if (currentActiveItem !== null) {\r\n      const currentActiveItemTopPosition =\r\n        currentActiveItem.getBoundingClientRect().y;\r\n      this.indicator.classList.add(\"speed-zero\");\r\n      this.indicator.style.top = currentActiveItemTopPosition + \"px\";\r\n      // detect when scrolling has stopped\r\n      if (timer !== null) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(\r\n        function () {\r\n          // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n          this.indicator.classList.remove(\"speed-zero\");\r\n        }.bind(this),\r\n        50\r\n      );\r\n    }\r\n  }\r\n\r\n  // REPOSITION INDICATOR AFTER MENU COLLAPSE\r\n  repositionIndicatorAfterMenuCollapse() {\r\n    const activeItem = this.el.querySelector(\".item--active\");\r\n    if (activeItem !== null) {\r\n      const closestL1 = activeItem.closest(\".list-one__item\");\r\n      if (closestL1 !== null) {\r\n        const closestL1MainContainer =\r\n          closestL1.shadowRoot.querySelector(\".main-container\");\r\n        const topPosition = closestL1MainContainer.getBoundingClientRect().y;\r\n        const height = (closestL1MainContainer as HTMLElement).offsetHeight;\r\n        this.indicator.style.top = topPosition + \"px\";\r\n        this.indicator.style.height = height + \"px\";\r\n      } else {\r\n        // else, the active item has no parent l ist. just reposition indicator\r\n        const topPosition = activeItem.getBoundingClientRect().y;\r\n        const height = (activeItem as HTMLElement).offsetHeight;\r\n        this.indicator.style.top = topPosition + \"px\";\r\n        this.indicator.style.height = height + \"px\";\r\n      }\r\n    }\r\n  }\r\n  // REPOSITION INDICATOR AFTER MENU UNCOLLAPSE\r\n  repositionIndicatorAfterMenuUncollapse() {\r\n    const activeItem = this.el.querySelector(\".item--active\");\r\n    if (activeItem !== null) {\r\n      const activeItemMainContainer =\r\n        activeItem.shadowRoot.querySelector(\".main-container\");\r\n      const activeItemMainContainerTopPosition =\r\n        activeItemMainContainer.getBoundingClientRect().y;\r\n      const activeItemMainContainerHeight = (\r\n        activeItemMainContainer as HTMLElement\r\n      ).offsetHeight;\r\n      this.indicator.style.top = activeItemMainContainerTopPosition + \"px\";\r\n      this.indicator.style.height = activeItemMainContainerHeight + \"px\";\r\n    }\r\n  }\r\n\r\n  // HIDE INDICATOR\r\n  hideIndicator() {\r\n    this.indicator.classList.add(\"hide\");\r\n  }\r\n  // SHOW INDICATOR\r\n  showIndicator() {\r\n    this.indicator.classList.remove(\"hide\");\r\n  }\r\n\r\n  collapseUncollapsedLists1() {\r\n    const uncollapsedLists1Items = document.querySelectorAll(\r\n      \".list-one__item.uncollapsed\"\r\n    );\r\n    Array.from(uncollapsedLists1Items).forEach(function (item) {\r\n      item.classList.add(\"speed-zero\");\r\n      item.setAttribute(\r\n        \"data-uncollapsed-max-height\",\r\n        (item as HTMLElement).style.maxHeight\r\n      );\r\n      (item as HTMLElement).style.maxHeight =\r\n        item.shadowRoot.querySelector<HTMLElement>(\".main-container\")\r\n          .offsetHeight + \"px\";\r\n    });\r\n  }\r\n  uncollapseCollapsedLists() {\r\n    const uncollapsedLists1Items = document.querySelectorAll(\r\n      \".list-one__item.uncollapsed\"\r\n    );\r\n    Array.from(uncollapsedLists1Items).forEach(function (item) {\r\n      item.addEventListener(\"transitionend\", removeSpeedZero);\r\n      function removeSpeedZero(e) {\r\n        if (e.propertyName === \"max-height\") {\r\n          item.classList.remove(\"speed-zero\");\r\n          item.removeEventListener(\"transitionend\", removeSpeedZero);\r\n        }\r\n      }\r\n      const uncollapsedMaxHeight = item.getAttribute(\r\n        \"data-uncollapsed-max-height\"\r\n      );\r\n      (item as HTMLElement).style.maxHeight = uncollapsedMaxHeight;\r\n      item.removeAttribute(\"data-uncollapsed-max-height\");\r\n    });\r\n  }\r\n  switchListOneOrder() {\r\n    const listOneItems = document.querySelectorAll(\".list-one__item\");\r\n    Array.from(listOneItems).forEach(function (item) {\r\n      item.classList.add(\"switch-order\");\r\n    });\r\n  }\r\n  undoSwitchListOneOrder() {\r\n    const listOneItems = document.querySelectorAll(\".list-one__item\");\r\n    Array.from(listOneItems).forEach(function (item) {\r\n      item.classList.remove(\"switch-order\");\r\n    });\r\n  }\r\n\r\n  /* UPDATE LIST ITEM 1 TRANSITION SPEED*/\r\n  updateListItem1TransitionSpeed(item, height) {\r\n    if (height > this.topHeightSpeed) {\r\n      height = this.topHeightSpeed;\r\n    }\r\n    item.style.transitionDuration = height / this.speedDivisionValue + \"s\";\r\n  }\r\n\r\n  /* UPDATE LIST ITEM 1 MAX HEIGHT*/\r\n  updateListItem1MaxHeight(item) {\r\n    const mainContainerHeight =\r\n      item.shadowRoot.querySelector(\".main-container\").clientHeight;\r\n    const list2Items = item.querySelectorAll(\r\n      \":scope > ch-sidebar-menu-list > ch-sidebar-menu-list-item\"\r\n    );\r\n    let totalMaxHeight = mainContainerHeight;\r\n    Array.from(list2Items).forEach(function (item) {\r\n      totalMaxHeight += parseInt(\r\n        (item as HTMLElement).style.maxHeight.slice(0, -2)\r\n      );\r\n    });\r\n    item.style.maxHeight = totalMaxHeight + \"px\";\r\n  }\r\n\r\n  /* TOGGLE ITEM ICON*/\r\n  toggleIcon(item) {\r\n    if (item.classList.contains(\"uncollapsed\")) {\r\n      item.classList.remove(\"uncollapsed\");\r\n    } else {\r\n      item.classList.add(\"uncollapsed\");\r\n    }\r\n  }\r\n\r\n  /* SET ITEM TRANSITION SPEED*/\r\n  setTransitionSpeed(item) {\r\n    let transitionSpeed = 0;\r\n    const childListHeight = item.querySelector(\r\n      \"ch-sidebar-menu-list\"\r\n    ).clientHeight;\r\n    if (childListHeight > this.topHeightSpeed) {\r\n      transitionSpeed = this.topHeightSpeed;\r\n    } else {\r\n      transitionSpeed = childListHeight;\r\n    }\r\n    item.style.transitionDuration =\r\n      transitionSpeed / this.speedDivisionValue + \"s\";\r\n  }\r\n\r\n  /* COLLAPSE LIST*/\r\n  collapseList(item) {\r\n    const mainContainerHeight =\r\n      item.shadowRoot.querySelector(\".main-container\").offsetHeight;\r\n    item.style.maxHeight = mainContainerHeight + \"px\";\r\n\r\n    // store the item's collapsed state\r\n    this.storeSidebarCollapsedItem(item);\r\n  }\r\n  /* UNCOLLAPSE LIST*/\r\n  uncollapseList(item) {\r\n    const mainContainerHeight =\r\n      item.shadowRoot.querySelector(\".main-container\").clientHeight;\r\n    const childListHeight = item.querySelector(\r\n      \"ch-sidebar-menu-list\"\r\n    ).clientHeight;\r\n    item.style.maxHeight = mainContainerHeight + childListHeight + \"px\";\r\n\r\n    // store the item's uncollapsed state\r\n    this.storeSidebarUncollapsedItem(item);\r\n  }\r\n\r\n  /* PRESERVE SIDEBAR STATE */\r\n  storeSidebarActiveItem(item) {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    const sessionItemValue = storageHelper.get(\"active-item\");\r\n    if (sessionItemValue != \"\" && sessionItemValue != null) {\r\n      storageHelper.remove(\"active-item\");\r\n    }\r\n    storageHelper.add(\"active-item\", item.id);\r\n  }\r\n\r\n  storeSidebarUncollapsedItem(item) {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    if (!item.classList.contains(\"list-three__item\")) {\r\n      storageHelper.add(item.id, \"uncollapsed\");\r\n    }\r\n  }\r\n\r\n  storeSidebarCollapsedItem(item) {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    storageHelper.remove(item.id);\r\n  }\r\n\r\n  storeSidebarState() {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    const storageItem = storageHelper.get(\"isCollapsed\");\r\n    if (storageItem === \"false\") {\r\n      storageHelper.add(\"isCollapsed\", \"true\");\r\n    } else {\r\n      storageHelper.add(\"isCollapsed\", \"false\");\r\n    }\r\n  }\r\n\r\n  /* GET SIDEBAR STATE*/\r\n  getSidebarState() {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    const storageItems = storageHelper.getAllItems();\r\n    for (let i = 0; i < storageItems.length; i++) {\r\n      let item;\r\n      switch (true) {\r\n        case storageItems[i].key === \"active-item\": {\r\n          item = document.getElementById(storageItems[i].value);\r\n          if (item) {\r\n            item.classList.add(\"item--active\");\r\n            this.activeItem = item.id;\r\n            // fede\r\n            // const itemPos = item.offsetTop;\r\n            /*\r\n            this.main.scroll({\r\n              top: 100, \r\n              left: 0,\r\n              behavior: 'smooth'\r\n            })*/\r\n            this.main.scrollTop = 100;\r\n          }\r\n          break;\r\n        }\r\n\r\n        case storageItems[i].value === \"uncollapsed\": {\r\n          item = document.getElementById(storageItems[i].key);\r\n          if (item) {\r\n            item.classList.add(\"uncollapsed\");\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getSidebarCollapsedState() {\r\n    const storageHelper = new StorageHelper.SessionStorageWorker();\r\n    const storageItems = storageHelper.getAllItems();\r\n    for (let i = 0; i < storageItems.length; i++) {\r\n      switch (true) {\r\n        case storageItems[i].key === \"isCollapsed\": {\r\n          if (storageItems[i].value === \"true\") {\r\n            this.collapseUncollapsedLists1();\r\n            this.switchListOneOrder();\r\n            this.menu.classList.add(\"collapsed\");\r\n            setTimeout(\r\n              function () {\r\n                // @ts-expect-error: This control is deprecated, so we are avoiding this error\r\n                this.repositionIndicatorAfterMenuCollapse();\r\n              }.bind(this),\r\n              50\r\n            );\r\n            this.isCollapsed = true;\r\n            this.collapseMenuHandler();\r\n          } else {\r\n            this.isCollapsed = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // collapse menu button handler\r\n  collapseMenuHandler() {\r\n    this.collapseBtnClicked.emit({ isCollapsed: this.isCollapsed });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <nav id=\"menu\" part=\"menu\" ref={el => (this.menu = el as HTMLElement)}>\r\n          <h1 id=\"title\" ref={el => (this.title = el as HTMLElement)}>\r\n            {this.menuTitle}\r\n          </h1>\r\n          <main id=\"main\" ref={el => (this.main = el as HTMLElement)}>\r\n            <slot></slot>\r\n          </main>\r\n          <footer id=\"footer\" ref={el => (this.footer = el as HTMLElement)}>\r\n            <div id=\"custom-content\">\r\n              <slot name=\"footer\" />\r\n            </div>\r\n            {this.collapsible && (\r\n              <div\r\n                id=\"collapse-menu\"\r\n                ref={el => (this.collapseButton = el as HTMLElement)}\r\n              >\r\n                <div part=\"collapse-menu-icon\" class=\"collapse-icon\"></div>\r\n              </div>\r\n            )}\r\n          </footer>\r\n        </nav>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}