{"version":3,"names":["nextProgressBarCss","ChNextProgressBarStyle0","MIN_VALUE","TIME_TO_REMOVE_ANIMATION","INCREMENT_ADJUSTMENT_BETWEEN_STEPS","NextProgressBar","didLoad","incrementFromLastStep","lastDescription","handleCurrentStepChange","newCurrentStep","oldCurrentStep","this","handleCaptionChange","_newDescription","oldDescription","shouldAddFadeInOutAnimation","setTimeout","handlePresentedChange","newPresentedValue","currentStep","getStepPartName","stepValue","amountOfSteps","partName","componentWillLoad","presented","componentDidLoad","render","calculatedCurrentStep","Math","max","steps","accessibilityAttributes","role","caption","undefined","description","toString","h","Host","key","class","cssClass","part","id","style","Array","keys","map","step"],"sources":["src/components/next/progress-bar/next-progress-bar.scss?tag=ch-next-progress-bar&encapsulation=shadow","src/components/next/progress-bar/next-progress-bar.tsx"],"sourcesContent":["$step-background-color--last-checked: #fff;\r\n\r\n$checked-load-duration: 0.3s;\r\n\r\n*,\r\n::before,\r\n::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n:where(.title, .description) {\r\n  font: unset;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: start;\r\n}\r\n\r\n:host {\r\n  /**\r\n   * @prop --last-checked-gradient:\r\n   * Define the gradient background that the last checked step will animate.\r\n   */\r\n  --last-checked-gradient: linear-gradient(\r\n    90deg,\r\n    #00000000,\r\n    #{$step-background-color--last-checked},\r\n    #00000000\r\n  );\r\n\r\n  /**\r\n   * @prop --step-background-color:\r\n   * Define the gradient background color of the steps.\r\n   */\r\n  --step-background-color: #ddd;\r\n\r\n  /**\r\n   * @prop --step-background-color:\r\n   * Define the gradient background color of the steps when checked.\r\n   */\r\n  --step-background-color--checked: #bbb;\r\n\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.steps-container {\r\n  display: flex;\r\n  column-gap: 4px;\r\n  height: 8px;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//              Steps\r\n// - - - - - - - - - - - - - - - -\r\n.step {\r\n  position: relative;\r\n  background-color: var(--step-background-color);\r\n  border-radius: 20px;\r\n  width: 68px;\r\n  max-width: calc(100% / var(--amount-of-steps));\r\n  height: 100%;\r\n  overflow: hidden;\r\n\r\n  &--checked::before {\r\n    content: \"\";\r\n    display: flex;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 100%;\r\n    background-color: var(--step-background-color--checked);\r\n    animation: checked-load $checked-load-duration linear\r\n      calc(var(--delay) * #{$checked-load-duration}) forwards;\r\n  }\r\n\r\n  &--last-checked::after {\r\n    content: \"\";\r\n    display: flex;\r\n    position: absolute;\r\n    background: var(--last-checked-gradient), var(--last-checked-gradient);\r\n    width: 80%;\r\n    height: 100%;\r\n    margin-inline-start: -128%;\r\n    animation: last-checked-animation 2.25s ease-in-out\r\n      calc(var(--delay) * #{$checked-load-duration}) infinite;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//           Description\r\n// - - - - - - - - - - - - - - - -\r\n.description {\r\n  transition: opacity 300ms linear;\r\n}\r\n\r\n.description-transition {\r\n  opacity: 0;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//           Key frames\r\n// - - - - - - - - - - - - - - - -\r\n@keyframes checked-load {\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@keyframes last-checked-animation {\r\n  to {\r\n    margin-inline-start: 192%;\r\n  }\r\n}\r\n","import { Component, Host, Prop, Watch, State, h } from \"@stencil/core\";\r\nimport { Component as ChComponent } from \"../../../common/interfaces\";\r\n\r\nconst MIN_VALUE = 0;\r\nconst TIME_TO_REMOVE_ANIMATION = 325; // 325ms\r\nconst INCREMENT_ADJUSTMENT_BETWEEN_STEPS = 1;\r\n\r\n/**\r\n * @part ch-next-progress-bar__main-container - The main container of the control.\r\n * @part ch-next-progress-bar__caption - The caption displayed in the top of the control.\r\n * @part ch-next-progress-bar__steps-container - The container of the steps displayed below the caption of the control.\r\n * @part ch-next-progress-bar__step - Each step displayed in the control.\r\n * @part ch-next-progress-bar__description - The description displayed below the steps of the control.\r\n */\r\n@Component({\r\n  shadow: true,\r\n  styleUrl: \"next-progress-bar.scss\",\r\n  tag: \"ch-next-progress-bar\"\r\n})\r\nexport class NextProgressBar implements ChComponent {\r\n  /**\r\n   * `true` if the componentDidLoad lifecycle method was executed\r\n   */\r\n  private didLoad = false;\r\n\r\n  private incrementFromLastStep = 0;\r\n  private lastDescription: string;\r\n\r\n  @State() shouldAddFadeInOutAnimation = false;\r\n\r\n  /**\r\n   * It specifies the main text that is shown on the progress.\r\n   */\r\n  @Prop() readonly caption: string = null;\r\n\r\n  /**\r\n   * This attribute lets you specify the value of the progress.\r\n   */\r\n  @Prop() readonly currentStep: number = MIN_VALUE;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-progress-bar` element class.\r\n   */\r\n  @Prop() readonly cssClass: string;\r\n\r\n  /**\r\n   * It specifies more information that is shown on the progress.\r\n   */\r\n  @Prop() readonly description: string = null;\r\n\r\n  /**\r\n   * This attribute lets you specify if the progress bar is rendered.\r\n   */\r\n  @Prop() readonly presented: boolean = false;\r\n\r\n  /**\r\n   * This attribute lets you specify the amount of steps for the progress.\r\n   */\r\n  @Prop() readonly steps: number = 1;\r\n\r\n  @Watch(\"currentStep\")\r\n  handleCurrentStepChange(newCurrentStep: number, oldCurrentStep: number) {\r\n    this.incrementFromLastStep =\r\n      newCurrentStep - oldCurrentStep - INCREMENT_ADJUSTMENT_BETWEEN_STEPS;\r\n  }\r\n\r\n  @Watch(\"description\")\r\n  handleCaptionChange(_newDescription: string, oldDescription: string) {\r\n    if (this.didLoad && !this.shouldAddFadeInOutAnimation) {\r\n      this.shouldAddFadeInOutAnimation = true;\r\n      this.lastDescription = oldDescription; // Store the last description\r\n\r\n      setTimeout(() => {\r\n        this.shouldAddFadeInOutAnimation = false;\r\n      }, TIME_TO_REMOVE_ANIMATION);\r\n    }\r\n  }\r\n\r\n  @Watch(\"presented\")\r\n  handlePresentedChange(newPresentedValue: boolean) {\r\n    if (newPresentedValue) {\r\n      this.incrementFromLastStep = this.currentStep;\r\n    }\r\n  }\r\n\r\n  private getStepPartName(stepValue: number, amountOfSteps: number): string {\r\n    let partName = \"ch-next-progress-bar__step\";\r\n\r\n    if (stepValue <= amountOfSteps) {\r\n      partName += \" checked\";\r\n    }\r\n\r\n    if (stepValue === amountOfSteps) {\r\n      partName += \" last\";\r\n    }\r\n\r\n    return partName;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.presented) {\r\n      this.incrementFromLastStep = this.currentStep;\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.didLoad = true;\r\n  }\r\n\r\n  render() {\r\n    const calculatedCurrentStep = Math.max(this.currentStep, MIN_VALUE);\r\n    const amountOfSteps = Math.max(this.steps, MIN_VALUE);\r\n\r\n    const accessibilityAttributes = {\r\n      role: \"progressbar\",\r\n      \"aria-labelledby\": this.caption ? \"title\" : undefined,\r\n      \"aria-describedby\": this.description ? \"description\" : undefined,\r\n      \"aria-valuemin\": \"0\",\r\n      \"aria-valuemax\": amountOfSteps.toString(),\r\n      \"aria-valuenow\": calculatedCurrentStep.toString()\r\n    };\r\n\r\n    return (\r\n      <Host\r\n        class={this.cssClass || null}\r\n        aria-hidden={!this.presented ? \"true\" : undefined}\r\n      >\r\n        {this.presented && (\r\n          <div\r\n            {...accessibilityAttributes}\r\n            class=\"progress-bar\"\r\n            part=\"ch-next-progress-bar__main-container\"\r\n          >\r\n            {!!this.caption && (\r\n              <h1 id=\"title\" class=\"title\" part=\"ch-next-progress-bar__caption\">\r\n                {this.caption}\r\n              </h1>\r\n            )}\r\n\r\n            <div\r\n              class=\"steps-container\"\r\n              style={{\r\n                \"--amount-of-steps\": `${amountOfSteps}`\r\n              }}\r\n              part=\"ch-next-progress-bar__steps-container\"\r\n            >\r\n              {[...Array(amountOfSteps).keys()].map((step: number) => (\r\n                <div\r\n                  class={{\r\n                    step: true,\r\n                    \"step--checked\": step <= calculatedCurrentStep,\r\n                    \"step--last-checked\": step === calculatedCurrentStep\r\n                  }}\r\n                  part={this.getStepPartName(step, amountOfSteps)}\r\n                  style={{\r\n                    \"--delay\":\r\n                      calculatedCurrentStep - step <= this.incrementFromLastStep\r\n                        ? (\r\n                            this.incrementFromLastStep -\r\n                            calculatedCurrentStep +\r\n                            step\r\n                          ).toString()\r\n                        : \"0\"\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n\r\n            {!!this.description && (\r\n              <p\r\n                id=\"description\"\r\n                class={{\r\n                  description: true,\r\n                  \"description-transition\": this.shouldAddFadeInOutAnimation\r\n                }}\r\n                part=\"ch-next-progress-bar__description\"\r\n              >\r\n                {this.shouldAddFadeInOutAnimation\r\n                  ? this.lastDescription\r\n                  : this.description}\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"kDAAA,MAAMA,EAAqB,ytDAC3B,MAAAC,EAAeD,ECEf,MAAME,EAAY,EAClB,MAAMC,EAA2B,IACjC,MAAMC,EAAqC,E,MAc9BC,EAAe,M,0DASa,M,aAKJ,K,iBAKIH,E,yCAUA,K,eAKD,M,WAKL,C,CAnCzBI,QAAU,MAEVC,sBAAwB,EACxBC,gBAmCR,uBAAAC,CAAwBC,EAAwBC,GAC9CC,KAAKL,sBACHG,EAAiBC,EAAiBP,C,CAItC,mBAAAS,CAAoBC,EAAyBC,GAC3C,GAAIH,KAAKN,UAAYM,KAAKI,4BAA6B,CACrDJ,KAAKI,4BAA8B,KACnCJ,KAAKJ,gBAAkBO,EAEvBE,YAAW,KACTL,KAAKI,4BAA8B,KAAK,GACvCb,E,EAKP,qBAAAe,CAAsBC,GACpB,GAAIA,EAAmB,CACrBP,KAAKL,sBAAwBK,KAAKQ,W,EAI9B,eAAAC,CAAgBC,EAAmBC,GACzC,IAAIC,EAAW,6BAEf,GAAIF,GAAaC,EAAe,CAC9BC,GAAY,U,CAGd,GAAIF,IAAcC,EAAe,CAC/BC,GAAY,O,CAGd,OAAOA,C,CAGT,iBAAAC,GACE,GAAIb,KAAKc,UAAW,CAClBd,KAAKL,sBAAwBK,KAAKQ,W,EAItC,gBAAAO,GACEf,KAAKN,QAAU,I,CAGjB,MAAAsB,GACE,MAAMC,EAAwBC,KAAKC,IAAInB,KAAKQ,YAAalB,GACzD,MAAMqB,EAAgBO,KAAKC,IAAInB,KAAKoB,MAAO9B,GAE3C,MAAM+B,EAA0B,CAC9BC,KAAM,cACN,kBAAmBtB,KAAKuB,QAAU,QAAUC,UAC5C,mBAAoBxB,KAAKyB,YAAc,cAAgBD,UACvD,gBAAiB,IACjB,gBAAiBb,EAAce,WAC/B,gBAAiBT,EAAsBS,YAGzC,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO9B,KAAK+B,UAAY,KAAI,eACd/B,KAAKc,UAAY,OAASU,WAEvCxB,KAAKc,WACJa,EAAA,OAAAE,IAAA,8CACMR,EACJS,MAAM,eACNE,KAAK,0CAEFhC,KAAKuB,SACNI,EAAA,MAAAE,IAAA,2CAAII,GAAG,QAAQH,MAAM,QAAQE,KAAK,iCAC/BhC,KAAKuB,SAIVI,EAAA,OAAAE,IAAA,2CACEC,MAAM,kBACNI,MAAO,CACL,oBAAqB,GAAGvB,KAE1BqB,KAAK,yCAEJ,IAAIG,MAAMxB,GAAeyB,QAAQC,KAAKC,GACrCX,EAAA,OACEG,MAAO,CACLQ,KAAM,KACN,gBAAiBA,GAAQrB,EACzB,qBAAsBqB,IAASrB,GAEjCe,KAAMhC,KAAKS,gBAAgB6B,EAAM3B,GACjCuB,MAAO,CACL,UACEjB,EAAwBqB,GAAQtC,KAAKL,uBAE/BK,KAAKL,sBACLsB,EACAqB,GACAZ,WACF,YAMX1B,KAAKyB,aACNE,EAAA,KAAAE,IAAA,2CACEI,GAAG,cACHH,MAAO,CACLL,YAAa,KACb,yBAA0BzB,KAAKI,6BAEjC4B,KAAK,qCAEJhC,KAAKI,4BACFJ,KAAKJ,gBACLI,KAAKyB,c"}