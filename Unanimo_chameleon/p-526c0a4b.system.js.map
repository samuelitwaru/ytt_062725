{"version":3,"names":["o","e","n","keyword","meta","built_in","t","COMMENT","r","className","begin","a","inherit","APOS_STRING_MODE","relevance","i","QUOTE_STRING_MODE","_","contains","slice","push","name","aliases","keywords","variants","C_BLOCK_COMMENT_MODE","NUMBER_MODE"],"sources":["node_modules/@genexus/markdown-parser/dist/mercury-DabdbvSG.js"],"sourcesContent":["function o(e) {\n  const n = { keyword: \"module use_module import_module include_module end_module initialise mutable initialize finalize finalise interface implementation pred mode func type inst solver any_pred any_func is semidet det nondet multi erroneous failure cc_nondet cc_multi typeclass instance where pragma promise external trace atomic or_else require_complete_switch require_det require_semidet require_multi require_nondet require_cc_multi require_cc_nondet require_erroneous require_failure\", meta: \"inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing\", built_in: \"some all not if then else true fail false try catch catch_any semidet_true semidet_false semidet_fail impure_true impure semipure\" }, t = e.COMMENT(\"%\", \"$\"), r = { className: \"number\", begin: \"0'.\\\\|0[box][0-9a-fA-F]*\" }, a = e.inherit(e.APOS_STRING_MODE, { relevance: 0 }), i = e.inherit(e.QUOTE_STRING_MODE, { relevance: 0 }), _ = { className: \"subst\", begin: \"\\\\\\\\[abfnrtv]\\\\|\\\\\\\\x[0-9a-fA-F]*\\\\\\\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]\", relevance: 0 };\n  return i.contains = i.contains.slice(), i.contains.push(_), { name: \"Mercury\", aliases: [\"m\", \"moo\"], keywords: n, contains: [{ className: \"built_in\", variants: [{ begin: \"<=>\" }, { begin: \"<=\", relevance: 0 }, { begin: \"=>\", relevance: 0 }, { begin: \"/\\\\\\\\\" }, { begin: \"\\\\\\\\/\" }] }, { className: \"built_in\", variants: [{ begin: \":-\\\\|-->\" }, { begin: \"=\", relevance: 0 }] }, t, e.C_BLOCK_COMMENT_MODE, r, e.NUMBER_MODE, a, i, { begin: /:-/ }, { begin: /\\.$/ }] };\n}\nexport {\n  o as default\n};\n"],"mappings":"sFAAA,SAASA,EAAEC,GACT,IAAMC,EAAI,CAAEC,QAAS,odAAqdC,KAAM,grBAAirBC,SAAU,qIAAuIC,EAAIL,EAAEM,QAAQ,IAAK,KAAMC,EAAI,CAAEC,UAAW,SAAUC,MAAO,4BAA8BC,EAAIV,EAAEW,QAAQX,EAAEY,iBAAkB,CAAEC,UAAW,IAAMC,EAAId,EAAEW,QAAQX,EAAEe,kBAAmB,CAAEF,UAAW,IAAMG,EAAI,CAAER,UAAW,QAASC,MAAO,wEAAyEI,UAAW,GAC3mD,OAAOC,EAAEG,SAAWH,EAAEG,SAASC,QAASJ,EAAEG,SAASE,KAAKH,GAAI,CAAEI,KAAM,UAAWC,QAAS,CAAC,IAAK,OAAQC,SAAUrB,EAAGgB,SAAU,CAAC,CAAET,UAAW,WAAYe,SAAU,CAAC,CAAEd,MAAO,OAAS,CAAEA,MAAO,KAAMI,UAAW,GAAK,CAAEJ,MAAO,KAAMI,UAAW,GAAK,CAAEJ,MAAO,SAAW,CAAEA,MAAO,WAAc,CAAED,UAAW,WAAYe,SAAU,CAAC,CAAEd,MAAO,eAAc,CAAEA,MAAO,IAAKI,UAAW,KAAQR,EAAGL,EAAEwB,qBAAsBjB,EAAGP,EAAEyB,YAAaf,EAAGI,EAAG,CAAEL,MAAO,MAAQ,CAAEA,MAAO,QACxc,C"}