{"version":3,"names":["SHORTCUTS","Map","LATEST_SHORTCUT","loadShortcuts","name","root","shortcuts","forEach","shortcut","keyShortcuts","parseKeyShortcuts","keyShortcut","normalizedKeyShortcut","normalize","ctrl","alt","shift","meta","key","set","addListener","unloadShortcuts","removeKeyShortcuts","shortcutMap","push","delete","removeListener","getShortcuts","Array","from","values","filter","conditions","focusInclude","map","element","querySelectorPlus","selector","legendPosition","size","window","addEventListener","keydownHandler","capture","removeEventListener","eventInfo","repeat","allowRepeat","triggerShortcut","ctrlKey","altKey","shiftKey","metaKey","get","focus","focusComposedPath","keyShortcutPressedEvent","createEvent","id","dispatchEvent","action","Event","preventDefault","value","split","item","reduce","toLowerCase","charAt","toUpperCase","slice","join","querySelectorAllPlus","some","el","includes","focusExclude","target","CustomEvent","bubbles","cancelable","composed","detail","selectorItem","querySelectorAll","flat","querySelectorDeep","parts","shadow","shadowRoot","partList","partElement","querySelector","partName","exportPartElement","exportPartList","exportparts","getAttribute","partItem","exportPartName","match","length","selectorItems","entity","chShortcutsCss","ChShortcutsStyle0","KEY_SYMBOL","ChShortcuts","suspendHandler","this","suspend","src","getRootNode","componentDidLoad","fetch","then","response","ok","json","disconnectedCallback","windowKeyDownHandler","modifierKeys","showKey","showShortcuts","windowClosedHandler","renderShortcuts","h","container","modal","hidden","closeOnEscape","closeOnOutsideClick","xAlign","yAlign","onWindowClosed","renderKeyShortcuts","i","items","part","render","Host"],"sources":["src/components/shortcuts/ch-shortcuts-manager.ts","src/components/shortcuts/ch-shortcuts.scss?tag=ch-shortcuts&encapsulation=shadow","src/components/shortcuts/ch-shortcuts.tsx"],"sourcesContent":["import { focusComposedPath } from \"../common/helpers\";\r\n\r\nconst SHORTCUTS = new Map<string, ShortcutMap>();\r\nlet LATEST_SHORTCUT: ShortcutMap;\r\n\r\nexport function loadShortcuts(\r\n  name: string,\r\n  root: Document | ShadowRoot,\r\n  shortcuts: Shortcut[]\r\n) {\r\n  shortcuts.forEach(shortcut => {\r\n    const keyShortcuts = parseKeyShortcuts(shortcut.keyShortcuts);\r\n    keyShortcuts.forEach(keyShortcut => {\r\n      const normalizedKeyShortcut = normalize(\r\n        keyShortcut.ctrl,\r\n        keyShortcut.alt,\r\n        keyShortcut.shift,\r\n        keyShortcut.meta,\r\n        keyShortcut.key\r\n      );\r\n\r\n      SHORTCUTS.set(normalizedKeyShortcut, {\r\n        name,\r\n        root,\r\n        shortcut\r\n      });\r\n    });\r\n  });\r\n\r\n  addListener();\r\n}\r\n\r\nexport function unloadShortcuts(name: string) {\r\n  const removeKeyShortcuts: string[] = [];\r\n\r\n  SHORTCUTS.forEach((shortcutMap, key) => {\r\n    if (shortcutMap.name === name) {\r\n      removeKeyShortcuts.push(key);\r\n    }\r\n  });\r\n\r\n  removeKeyShortcuts.forEach(key => SHORTCUTS.delete(key));\r\n  removeListener();\r\n}\r\n\r\nexport function getShortcuts(name: string): {\r\n  element: HTMLElement;\r\n  keyShortcuts: string;\r\n  legendPosition: string;\r\n}[] {\r\n  return Array.from(SHORTCUTS.values())\r\n    .filter(shortcutMap => {\r\n      return (\r\n        shortcutMap.name === name &&\r\n        !shortcutMap.shortcut.conditions?.focusInclude\r\n      );\r\n    })\r\n    .map(shortcutMap => ({\r\n      element: querySelectorPlus(\r\n        shortcutMap.shortcut.selector,\r\n        shortcutMap.root\r\n      ) as HTMLElement,\r\n      keyShortcuts: shortcutMap.shortcut.keyShortcuts,\r\n      legendPosition: shortcutMap.shortcut.legendPosition\r\n    }));\r\n}\r\n\r\nfunction addListener() {\r\n  if (SHORTCUTS.size > 0) {\r\n    window.addEventListener(\"keydown\", keydownHandler, { capture: true });\r\n  }\r\n}\r\n\r\nfunction removeListener() {\r\n  if (SHORTCUTS.size === 0) {\r\n    window.removeEventListener(\"keydown\", keydownHandler, { capture: true });\r\n  }\r\n}\r\n\r\nfunction keydownHandler(eventInfo: KeyboardEvent) {\r\n  if (\r\n    !eventInfo.repeat ||\r\n    (eventInfo.repeat && LATEST_SHORTCUT?.shortcut.conditions?.allowRepeat)\r\n  ) {\r\n    LATEST_SHORTCUT = triggerShortcut(eventInfo);\r\n  }\r\n}\r\n\r\nfunction triggerShortcut(eventInfo: KeyboardEvent): ShortcutMap {\r\n  const shortcut = normalize(\r\n    eventInfo.ctrlKey,\r\n    eventInfo.altKey,\r\n    eventInfo.shiftKey,\r\n    eventInfo.metaKey,\r\n    eventInfo.key\r\n  );\r\n  const shortcutMap = SHORTCUTS.get(shortcut);\r\n  const focus = focusComposedPath();\r\n\r\n  if (shortcutMap && conditions(shortcutMap, focus)) {\r\n    const element = querySelectorPlus(\r\n      shortcutMap.shortcut.selector,\r\n      shortcutMap.root\r\n    ) as HTMLElement;\r\n    const keyShortcutPressedEvent = createEvent(\r\n      shortcut,\r\n      shortcutMap.shortcut.id,\r\n      element,\r\n      focus\r\n    );\r\n\r\n    if (shortcutMap.root.dispatchEvent(keyShortcutPressedEvent)) {\r\n      switch (shortcutMap.shortcut.action) {\r\n        case \"click\":\r\n          element?.dispatchEvent(new Event(\"click\"));\r\n          break;\r\n        default:\r\n          element?.focus();\r\n      }\r\n\r\n      if (shortcutMap.shortcut.preventDefault !== false) {\r\n        eventInfo.preventDefault();\r\n      }\r\n    } else {\r\n      eventInfo.preventDefault();\r\n    }\r\n  }\r\n\r\n  return shortcutMap;\r\n}\r\n\r\nfunction parseKeyShortcuts(value = \"\"): KeyShortcut[] {\r\n  return value.split(/(?<!(?:[+]|^))\\s/).map(item => {\r\n    return item.split(/(?<!(?:[+]|^))[+]/).reduce(\r\n      (keyShortcut: KeyShortcut, key: string) => {\r\n        switch (key.toLowerCase()) {\r\n          case \"ctrl\":\r\n            keyShortcut.ctrl = true;\r\n            break;\r\n          case \"alt\":\r\n            keyShortcut.alt = true;\r\n            break;\r\n          case \"shift\":\r\n            keyShortcut.shift = true;\r\n            break;\r\n          case \"meta\":\r\n            keyShortcut.meta = true;\r\n            break;\r\n          default:\r\n            keyShortcut.key = key;\r\n        }\r\n        return keyShortcut;\r\n      },\r\n      {\r\n        ctrl: false,\r\n        alt: false,\r\n        shift: false,\r\n        meta: false,\r\n        key: \"\"\r\n      } as KeyShortcut\r\n    );\r\n  });\r\n}\r\n\r\nfunction normalize(\r\n  ctrl: boolean,\r\n  alt: boolean,\r\n  shift: boolean,\r\n  meta: boolean,\r\n  key: string\r\n): string {\r\n  return [\r\n    ctrl ? \"Ctrl\" : null,\r\n    alt ? \"Alt\" : null,\r\n    shift ? \"Shift\" : null,\r\n    meta ? \"Meta\" : null,\r\n    key ? key.charAt(0).toUpperCase() + key.slice(1) : null\r\n  ]\r\n    .filter(element => {\r\n      return element !== null;\r\n    })\r\n    .join(\"+\");\r\n}\r\n\r\nfunction conditions(shortcutMap: ShortcutMap, focus: HTMLElement[]): boolean {\r\n  if (shortcutMap.shortcut.conditions?.focusInclude) {\r\n    return querySelectorAllPlus(\r\n      shortcutMap.shortcut.conditions.focusInclude,\r\n      shortcutMap.root\r\n    ).some((el: HTMLElement) => focus.includes(el));\r\n  }\r\n  if (shortcutMap.shortcut.conditions?.focusExclude) {\r\n    return !querySelectorAllPlus(\r\n      shortcutMap.shortcut.conditions.focusExclude,\r\n      shortcutMap.root\r\n    ).some((el: HTMLElement) => focus.includes(el));\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction createEvent(\r\n  keyShortcut: string,\r\n  id: string,\r\n  target: HTMLElement,\r\n  focusComposedPath: HTMLElement[]\r\n): CustomEvent {\r\n  return new CustomEvent<KeyShortcutPressedEvent>(\"keyShortcutPressed\", {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    composed: false,\r\n    detail: {\r\n      keyShortcut,\r\n      id: id,\r\n      target,\r\n      focusComposedPath\r\n    }\r\n  });\r\n}\r\n\r\nfunction querySelectorAllPlus(\r\n  selector: string,\r\n  root: Document | ShadowRoot\r\n): HTMLElement[] {\r\n  return (\r\n    selector\r\n      ?.split(\",\")\r\n      .map(selectorItem => {\r\n        if (selector.includes(\"::part\")) {\r\n          return querySelectorPlus(selectorItem, root);\r\n        }\r\n        return Array.from(root.querySelectorAll(selector)) as HTMLElement[];\r\n      })\r\n      .flat() ?? []\r\n  );\r\n}\r\n\r\nfunction querySelectorPlus(\r\n  selector: string,\r\n  root: Document | ShadowRoot\r\n): HTMLElement {\r\n  const querySelectorDeep = (\r\n    element: HTMLElement,\r\n    parts: string\r\n  ): HTMLElement => {\r\n    const shadow = element.shadowRoot;\r\n    const partList = parts.split(\" \");\r\n\r\n    const partElement: HTMLElement = shadow.querySelector(\r\n      partList.map(partName => `[part~=\"${partName}\"]`).join(\"\")\r\n    );\r\n    if (partElement) {\r\n      return partElement;\r\n    }\r\n\r\n    const exportPartElement: HTMLElement = shadow.querySelector(\r\n      partList.map(partName => `[exportparts*=\"${partName}\"]`).join(\"\")\r\n    );\r\n    if (exportPartElement) {\r\n      const exportPartList: string[] = [];\r\n      const exportparts = exportPartElement.getAttribute(\"exportparts\");\r\n\r\n      partList.forEach(partItem => {\r\n        const exportPartName = exportparts.match(\r\n          `(?:([\\\\w-]+):)?(${partItem})`\r\n        )[1];\r\n        if (exportPartName) {\r\n          exportPartList.push(exportPartName);\r\n        }\r\n      });\r\n\r\n      if (partList.length === exportPartList.length) {\r\n        return querySelectorDeep(exportPartElement, exportPartList.join(\" \"));\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  if (selector?.includes(\"::part\")) {\r\n    const selectorItems = selector.match(\"(.*)::part\\\\(([^)]+)\\\\)\");\r\n    const entity = selectorItems[1];\r\n    const partName = selectorItems[2];\r\n\r\n    return querySelectorDeep(root.querySelector(entity), partName);\r\n  }\r\n  return root.querySelector(selector);\r\n}\r\n\r\ninterface ShortcutMap {\r\n  name: string;\r\n  root: Document | ShadowRoot;\r\n  shortcut: Shortcut;\r\n}\r\n\r\nexport interface Shortcut {\r\n  keyShortcuts: string;\r\n  id?: string;\r\n  selector?: string;\r\n  preventDefault?: boolean;\r\n  conditions?: {\r\n    focusInclude?: string;\r\n    focusExclude?: string;\r\n    allowRepeat?: boolean;\r\n  };\r\n  legendPosition?: string;\r\n  action?: \"focus\" | \"click\";\r\n}\r\n\r\nexport type KeyShortcut = {\r\n  key: string;\r\n  ctrl: boolean;\r\n  alt: boolean;\r\n  shift: boolean;\r\n  meta: boolean;\r\n};\r\n\r\nexport interface KeyShortcutPressedEvent {\r\n  id: string;\r\n  keyShortcut: string;\r\n  target: HTMLElement;\r\n  focusComposedPath: HTMLElement[];\r\n}\r\n",":host {\r\n  display: contents;\r\n}\r\n","import {\r\n  Component,\r\n  Prop,\r\n  Listen,\r\n  State,\r\n  Host,\r\n  h,\r\n  Element,\r\n  Watch\r\n} from \"@stencil/core\";\r\nimport {\r\n  Shortcut,\r\n  getShortcuts,\r\n  loadShortcuts,\r\n  unloadShortcuts\r\n} from \"./ch-shortcuts-manager\";\r\n\r\nconst KEY_SYMBOL = {\r\n  \" \": \"\\u2334\"\r\n};\r\n\r\n@Component({\r\n  tag: \"ch-shortcuts\",\r\n  styleUrl: \"ch-shortcuts.scss\",\r\n  shadow: true\r\n})\r\nexport class ChShortcuts {\r\n  private shortcuts: Shortcut[];\r\n\r\n  @Element() el: HTMLChShortcutsElement;\r\n\r\n  @State() showShortcuts = false;\r\n\r\n  /**\r\n   * The URL of the shortcut definitions.\r\n   */\r\n  @Prop() readonly src!: string;\r\n\r\n  /**\r\n   * Key to show shortcut tooltips.\r\n   */\r\n  @Prop() readonly showKey = \"F10\";\r\n\r\n  /**\r\n   * Suspend shortcuts.\r\n   */\r\n  @Prop() readonly suspend: boolean = false;\r\n\r\n  @Watch(\"suspend\")\r\n  suspendHandler() {\r\n    if (this.suspend) {\r\n      unloadShortcuts(this.src);\r\n    } else {\r\n      const root = this.el.getRootNode() as Document | ShadowRoot;\r\n      loadShortcuts(this.src, root, this.shortcuts);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.src) {\r\n      fetch(this.src).then(response => {\r\n        if (response.ok) {\r\n          response.json().then(json => {\r\n            const root = this.el.getRootNode() as Document | ShadowRoot;\r\n            this.shortcuts = json;\r\n\r\n            loadShortcuts(this.src, root, this.shortcuts);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    unloadShortcuts(this.src);\r\n  }\r\n\r\n  @Listen(\"keydown\", { target: \"window\", capture: true })\r\n  windowKeyDownHandler(eventInfo: KeyboardEvent) {\r\n    const modifierKeys = [\"Ctrl\", \"Alt\", \"Shift\", \"Meta\"];\r\n\r\n    if (eventInfo.repeat || this.suspend) {\r\n      return;\r\n    }\r\n\r\n    if (eventInfo.key === this.showKey) {\r\n      this.showShortcuts = !this.showShortcuts;\r\n      eventInfo.preventDefault();\r\n    } else if (this.showShortcuts && !modifierKeys.includes(eventInfo.key)) {\r\n      this.showShortcuts = false;\r\n    }\r\n  }\r\n\r\n  private windowClosedHandler = () => {\r\n    this.showShortcuts = false;\r\n  };\r\n\r\n  private renderShortcuts() {\r\n    return getShortcuts(this.src)\r\n      .filter(shortcut => shortcut.element)\r\n      .map(shortcut => (\r\n        <ch-window\r\n          container={shortcut.element}\r\n          modal={false}\r\n          hidden={false}\r\n          closeOnEscape={true}\r\n          closeOnOutsideClick={true}\r\n          xAlign=\"outside-end\"\r\n          yAlign=\"inside-start\"\r\n          onWindowClosed={this.windowClosedHandler}\r\n          exportparts=\"mask:element, main:tooltip\"\r\n        >\r\n          {this.renderKeyShortcuts(shortcut.keyShortcuts)}\r\n        </ch-window>\r\n      ));\r\n  }\r\n\r\n  private renderKeyShortcuts(keyShortcuts: string) {\r\n    return keyShortcuts.split(/(?<!(?:[+]|^))([+\\s])/).map((key, i, items) => {\r\n      if (key === \"+\" && i > 0 && items[i - 1] !== \"+\") {\r\n        return <span part=\"plus\">+</span>;\r\n      }\r\n      if (key === \" \" && i > 0 && items[i - 1] !== \"+\") {\r\n        return <span part=\"slash\">/</span>;\r\n      }\r\n      return <kbd part={`key`}>{KEY_SYMBOL[key] ?? key}</kbd>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Host>{this.showShortcuts && this.renderShortcuts()}</Host>;\r\n  }\r\n}\r\n"],"mappings":"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"}