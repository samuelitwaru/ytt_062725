{"version":3,"names":["e","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","t","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/pug-DrAJxA5u.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }, { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }], folding: { offSide: !0 } }, t = { defaultToken: \"\", tokenPostfix: \".pug\", ignoreCase: !0, brackets: [{ token: \"delimiter.curly\", open: \"{\", close: \"}\" }, { token: \"delimiter.array\", open: \"[\", close: \"]\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }], keywords: [\"append\", \"block\", \"case\", \"default\", \"doctype\", \"each\", \"else\", \"extends\", \"for\", \"if\", \"in\", \"include\", \"mixin\", \"typeof\", \"unless\", \"var\", \"when\"], tags: [\"a\", \"abbr\", \"acronym\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"command\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"keygen\", \"kbd\", \"label\", \"li\", \"link\", \"map\", \"mark\", \"menu\", \"meta\", \"meter\", \"nav\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"tracks\", \"tt\", \"u\", \"ul\", \"video\", \"wbr\"], symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/^(\\s*)([a-zA-Z_-][\\w-]*)/, { cases: { \"$2@tags\": { cases: { \"@eos\": [\"\", \"tag\"], \"@default\": [\"\", { token: \"tag\", next: \"@tag.$1\" }] } }, \"$2@keywords\": [\"\", { token: \"keyword.$2\" }], \"@default\": [\"\", \"\"] } }], [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, { cases: { \"@eos\": [\"\", \"tag.id\"], \"@default\": [\"\", { token: \"tag.id\", next: \"@tag.$1\" }] } }], [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, { cases: { \"@eos\": [\"\", \"tag.class\"], \"@default\": [\"\", { token: \"tag.class\", next: \"@tag.$1\" }] } }], [/^(\\s*)(\\|.*)$/, \"\"], { include: \"@whitespace\" }, [/[a-zA-Z_$][\\w$]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"\" } }], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/\\d+/, \"number\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"]], tag: [[/(\\.)(\\s*$)/, [{ token: \"delimiter\", next: \"@blockText.$S2.\" }, \"\"]], [/\\s+/, { token: \"\", next: \"@simpleText\" }], [/#[a-zA-Z_-][\\w-]*/, { cases: { \"@eos\": { token: \"tag.id\", next: \"@pop\" }, \"@default\": \"tag.id\" } }], [/\\.[a-zA-Z_-][\\w-]*/, { cases: { \"@eos\": { token: \"tag.class\", next: \"@pop\" }, \"@default\": \"tag.class\" } }], [/\\(/, { token: \"delimiter.parenthesis\", next: \"@attributeList\" }]], simpleText: [[/[^#]+$/, { token: \"\", next: \"@popall\" }], [/[^#]+/, { token: \"\" }], [/(#{)([^}]*)(})/, { cases: { \"@eos\": [\"interpolation.delimiter\", \"interpolation\", { token: \"interpolation.delimiter\", next: \"@popall\" }], \"@default\": [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"] } }], [/#$/, { token: \"\", next: \"@popall\" }], [/#/, \"\"]], attributeList: [[/\\s+/, \"\"], [/(\\w+)(\\s*=\\s*)(\"|')/, [\"attribute.name\", \"delimiter\", { token: \"attribute.value\", next: \"@value.$3\" }]], [/\\w+/, \"attribute.name\"], [/,/, { cases: { \"@eos\": { token: \"attribute.delimiter\", next: \"@popall\" }, \"@default\": \"attribute.delimiter\" } }], [/\\)$/, { token: \"delimiter.parenthesis\", next: \"@popall\" }], [/\\)/, { token: \"delimiter.parenthesis\", next: \"@pop\" }]], whitespace: [[/^(\\s*)(\\/\\/.*)$/, { token: \"comment\", next: \"@blockText.$1.comment\" }], [/[ \\t\\r\\n]+/, \"\"], [/<!--/, { token: \"comment\", next: \"@comment\" }]], blockText: [[/^\\s+.*$/, { cases: { \"($S2\\\\s+.*$)\": { token: \"$S3\" }, \"@default\": { token: \"@rematch\", next: \"@popall\" } } }], [/./, { token: \"@rematch\", next: \"@popall\" }]], comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, { token: \"comment\", next: \"@pop\" }], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]], string: [[/[^\\\\\"'#]+/, { cases: { \"@eos\": { token: \"string\", next: \"@popall\" }, \"@default\": \"string\" } }], [/@escapes/, { cases: { \"@eos\": { token: \"string.escape\", next: \"@popall\" }, \"@default\": \"string.escape\" } }], [/\\\\./, { cases: { \"@eos\": { token: \"string.escape.invalid\", next: \"@popall\" }, \"@default\": \"string.escape.invalid\" } }], [/(#{)([^}]*)(})/, [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"]], [/#/, \"string\"], [/[\"']/, { cases: { \"$#==$S2\": { token: \"string\", next: \"@pop\" }, \"@default\": { token: \"string\" } } }]], value: [[/[^\\\\\"']+/, { cases: { \"@eos\": { token: \"attribute.value\", next: \"@popall\" }, \"@default\": \"attribute.value\" } }], [/\\\\./, { cases: { \"@eos\": { token: \"attribute.value\", next: \"@popall\" }, \"@default\": \"attribute.value\" } }], [/[\"']/, { cases: { \"$#==$S2\": { token: \"attribute.value\", next: \"@pop\" }, \"@default\": { token: \"attribute.value\" } } }]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}