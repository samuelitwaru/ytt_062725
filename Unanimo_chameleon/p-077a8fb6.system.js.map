{"version":3,"names":["e","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","t","defaultToken","tokenPostfix","token","keywords","operators","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","cases","include","whitespace","comment","doccomment","string","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/sophia-dUW-Rpx-.js"],"sourcesContent":["var e = { comments: { lineComment: \"//\", blockComment: [\"/*\", \"*/\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"<\", \">\"]], autoClosingPairs: [{ open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }, { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] }, { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }, { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }] }, t = { defaultToken: \"\", tokenPostfix: \".aes\", brackets: [{ token: \"delimiter.curly\", open: \"{\", close: \"}\" }, { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }, { token: \"delimiter.square\", open: \"[\", close: \"]\" }, { token: \"delimiter.angle\", open: \"<\", close: \">\" }], keywords: [\"contract\", \"library\", \"entrypoint\", \"function\", \"stateful\", \"state\", \"hash\", \"signature\", \"tuple\", \"list\", \"address\", \"string\", \"bool\", \"int\", \"record\", \"datatype\", \"type\", \"option\", \"oracle\", \"oracle_query\", \"Call\", \"Bits\", \"Bytes\", \"Oracle\", \"String\", \"Crypto\", \"Address\", \"Auth\", \"Chain\", \"None\", \"Some\", \"bits\", \"bytes\", \"event\", \"let\", \"map\", \"private\", \"public\", \"true\", \"false\", \"var\", \"if\", \"else\", \"throw\"], operators: [\"=\", \">\", \"<\", \"!\", \"~\", \"?\", \"::\", \":\", \"==\", \"<=\", \">=\", \"!=\", \"&&\", \"||\", \"++\", \"--\", \"+\", \"-\", \"*\", \"/\", \"&\", \"|\", \"^\", \"%\", \"<<\", \">>\", \">>>\", \"+=\", \"-=\", \"*=\", \"/=\", \"&=\", \"|=\", \"^=\", \"%=\", \"<<=\", \">>=\", \">>>=\"], symbols: /[=><!~?:&|+\\-*\\/\\^%]+/, escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/, floatsuffix: /[fFlL]?/, tokenizer: { root: [[/[a-zA-Z_]\\w*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/\\[\\[.*\\]\\]/, \"annotation\"], [/^\\s*#\\w+/, \"keyword\"], [/int\\d*/, \"keyword\"], [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, \"number.hex\"], [/0[0-7']*[0-7](@integersuffix)/, \"number.octal\"], [/0[bB][0-1']*[0-1](@integersuffix)/, \"number.binary\"], [/\\d[\\d']*\\d(@integersuffix)/, \"number\"], [/\\d(@integersuffix)/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]], whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@doccomment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]], comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]], doccomment: [[/[^\\/*]+/, \"comment.doc\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]], string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"uEAAG,IAACA,EAAI,CAAEC,SAAU,CAAEC,YAAa,KAAMC,aAAc,CAAC,KAAM,OAASC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOC,iBAAkB,CAAC,CAAEC,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAAc,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAAc,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAAc,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,cAAiBC,EAAI,CAAEC,aAAc,GAAIC,aAAc,OAAQP,SAAU,CAAC,CAAEQ,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,KAAO,CAAEK,MAAO,wBAAyBN,KAAM,IAAKC,MAAO,KAAO,CAAEK,MAAO,mBAAoBN,KAAM,IAAKC,MAAO,KAAO,CAAEK,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,MAAQM,SAAU,CAAC,WAAY,UAAW,aAAc,WAAY,WAAY,QAAS,OAAQ,YAAa,QAAS,OAAQ,UAAW,SAAU,OAAQ,MAAO,SAAU,WAAY,OAAQ,SAAU,SAAU,eAAgB,OAAQ,OAAQ,QAAS,SAAU,SAAU,SAAU,UAAW,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,MAAO,MAAO,UAAW,SAAU,OAAQ,QAAS,MAAO,KAAM,OAAQ,SAAUC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,QAASC,QAAS,wBAAyBC,QAAS,wEAAyEC,cAAe,mCAAoCC,YAAa,UAAWC,UAAW,CAAEC,KAAM,CAAC,CAAC,eAAgB,CAAEC,MAAO,CAAE,YAAa,CAAET,MAAO,cAAgB,WAAY,gBAAmB,CAAEU,QAAS,eAAiB,CAAC,aAAc,cAAe,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,aAAc,aAAc,CAAC,mBAAoB,aAAc,CAAC,WAAY,CAAED,MAAO,CAAE,aAAc,YAAa,WAAY,MAAS,CAAC,uCAAwC,gBAAiB,CAAC,yCAA0C,gBAAiB,CAAC,gDAAiD,cAAe,CAAC,gCAAiC,gBAAiB,CAAC,oCAAqC,iBAAkB,CAAC,6BAA8B,UAAW,CAAC,qBAAsB,UAAW,CAAC,QAAS,aAAc,CAAC,kBAAmB,kBAAmB,CAAC,IAAK,SAAU,WAAY,CAAC,WAAY,UAAW,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WAAY,CAAC,IAAK,mBAAoBE,WAAY,CAAC,CAAC,aAAc,IAAK,CAAC,eAAgB,cAAe,eAAgB,CAAC,OAAQ,UAAW,YAAa,CAAC,UAAW,YAAaC,QAAS,CAAC,CAAC,UAAW,WAAY,CAAC,OAAQ,UAAW,QAAS,CAAC,QAAS,YAAaC,WAAY,CAAC,CAAC,UAAW,eAAgB,CAAC,OAAQ,cAAe,QAAS,CAAC,QAAS,gBAAiBC,OAAQ,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,IAAK,SAAU,WAAUC,EAAA,CAAAC,KAAA5B,EAAA6B,SAAApB,G"}