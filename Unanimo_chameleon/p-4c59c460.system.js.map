{"version":3,"names":["e","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","t","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace","exports","conf","language"],"sources":["src/components/code-editor/monaco/output/pascal-DheuMH6q.js"],"sourcesContent":["var e = { wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g, comments: { lineComment: \"//\", blockComment: [\"{\", \"}\"] }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"<\", \">\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"<\", close: \">\" }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: \"<\", close: \">\" }, { open: \"'\", close: \"'\" }], folding: { markers: { start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"), end: new RegExp(\"^\\\\s*\\\\{\\\\$ENDREGION\\\\}\") } } }, t = { defaultToken: \"\", tokenPostfix: \".pascal\", ignoreCase: !0, brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }, { open: \"<\", close: \">\", token: \"delimiter.angle\" }], keywords: [\"absolute\", \"abstract\", \"all\", \"and_then\", \"array\", \"as\", \"asm\", \"attribute\", \"begin\", \"bindable\", \"case\", \"class\", \"const\", \"contains\", \"default\", \"div\", \"else\", \"end\", \"except\", \"exports\", \"external\", \"far\", \"file\", \"finalization\", \"finally\", \"forward\", \"generic\", \"goto\", \"if\", \"implements\", \"import\", \"in\", \"index\", \"inherited\", \"initialization\", \"interrupt\", \"is\", \"label\", \"library\", \"mod\", \"module\", \"name\", \"near\", \"not\", \"object\", \"of\", \"on\", \"only\", \"operator\", \"or_else\", \"otherwise\", \"override\", \"package\", \"packed\", \"pow\", \"private\", \"program\", \"protected\", \"public\", \"published\", \"interface\", \"implementation\", \"qualified\", \"read\", \"record\", \"resident\", \"requires\", \"resourcestring\", \"restricted\", \"segment\", \"set\", \"shl\", \"shr\", \"specialize\", \"stored\", \"strict\", \"then\", \"threadvar\", \"to\", \"try\", \"type\", \"unit\", \"uses\", \"var\", \"view\", \"virtual\", \"dynamic\", \"overload\", \"reintroduce\", \"with\", \"write\", \"xor\", \"true\", \"false\", \"procedure\", \"function\", \"constructor\", \"destructor\", \"property\", \"break\", \"continue\", \"exit\", \"abort\", \"while\", \"do\", \"for\", \"raise\", \"repeat\", \"until\"], typeKeywords: [\"boolean\", \"double\", \"byte\", \"integer\", \"shortint\", \"char\", \"longint\", \"float\", \"string\"], operators: [\"=\", \">\", \"<\", \"<=\", \">=\", \"<>\", \":\", \":=\", \"and\", \"or\", \"+\", \"-\", \"*\", \"/\", \"@\", \"&\", \"^\", \"%\"], symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/, tokenizer: { root: [[/[a-zA-Z_][\\w]*/, { cases: { \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"identifier\" } }], { include: \"@whitespace\" }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, { cases: { \"@operators\": \"delimiter\", \"@default\": \"\" } }], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/\\$[0-9a-fA-F]{1,16}/, \"number.hex\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/'/, \"string\", \"@string\"], [/'[^\\\\']'/, \"string\"], [/'/, \"string.invalid\"], [/\\#\\d+/, \"string\"]], comment: [[/[^\\*\\}]+/, \"comment\"], [/\\}/, \"comment\", \"@pop\"], [/[\\{]/, \"comment\"]], string: [[/[^\\\\']+/, \"string\"], [/\\\\./, \"string.escape.invalid\"], [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]], whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\{/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]] } };\nexport {\n  e as conf,\n  t as language\n};\n"],"mappings":"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"}