{"version":3,"names":["n","e","t","name","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin"],"sources":["node_modules/@genexus/markdown-parser/dist/thrift-K8FUI8mk.js"],"sourcesContent":["function n(e) {\n  const t = [\"bool\", \"byte\", \"i16\", \"i32\", \"i64\", \"double\", \"string\", \"binary\"];\n  return { name: \"Thrift\", keywords: { keyword: [\"namespace\", \"const\", \"typedef\", \"struct\", \"enum\", \"service\", \"exception\", \"void\", \"oneway\", \"set\", \"list\", \"map\", \"required\", \"optional\"], type: t, literal: \"true false\" }, contains: [e.QUOTE_STRING_MODE, e.NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, { className: \"class\", beginKeywords: \"struct enum service exception\", end: /\\{/, illegal: /\\n/, contains: [e.inherit(e.TITLE_MODE, { starts: { endsWithParent: !0, excludeEnd: !0 } })] }, { begin: \"\\\\b(set|list|map)\\\\s*<\", keywords: { type: [...t, \"set\", \"list\", \"map\"] }, end: \">\", contains: [\"self\"] }] };\n}\nexport {\n  n as default\n};\n"],"mappings":"AAAA,SAASA,EAAEC,GACT,MAAMC,EAAI,CAAC,OAAQ,OAAQ,MAAO,MAAO,MAAO,SAAU,SAAU,UACpE,MAAO,CAAEC,KAAM,SAAUC,SAAU,CAAEC,QAAS,CAAC,YAAa,QAAS,UAAW,SAAU,OAAQ,UAAW,YAAa,OAAQ,SAAU,MAAO,OAAQ,MAAO,WAAY,YAAaC,KAAMJ,EAAGK,QAAS,cAAgBC,SAAU,CAACP,EAAEQ,kBAAmBR,EAAES,YAAaT,EAAEU,oBAAqBV,EAAEW,qBAAsB,CAAEC,UAAW,QAASC,cAAe,gCAAiCC,IAAK,KAAMC,QAAS,KAAMR,SAAU,CAACP,EAAEgB,QAAQhB,EAAEiB,WAAY,CAAEC,OAAQ,CAAEC,gBAAiB,EAAGC,YAAa,OAAW,CAAEC,MAAO,yBAA0BlB,SAAU,CAAEE,KAAM,IAAIJ,EAAG,MAAO,OAAQ,QAAUa,IAAK,IAAKP,SAAU,CAAC,UAClmB,Q"}