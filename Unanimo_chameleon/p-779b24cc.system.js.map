{"version":3,"names":["mouseEventModifierKey","exports","eventInfo","navigator","userAgent","includes","metaKey","ctrlKey","mouseEventHasButtonPressed","button","buttons","MouseEventButton","MouseEventButtons","focusComposedPath","composedPath","root","document","activeElement","push","shadowRoot","reverse"],"sources":["src/components/common/helpers.ts"],"sourcesContent":["export const mouseEventModifierKey = (\r\n  eventInfo: MouseEvent | KeyboardEvent\r\n): boolean =>\r\n  navigator.userAgent.includes(\"Mac\") ? eventInfo.metaKey : eventInfo.ctrlKey;\r\n\r\nexport function mouseEventHasButtonPressed(\r\n  eventInfo: MouseEvent,\r\n  button: MouseEventButtons\r\n): boolean {\r\n  return (eventInfo.buttons & button) === button;\r\n}\r\n\r\nexport enum MouseEventButton {\r\n  KEY_SHORTCUT = -1,\r\n  LEFT = 0,\r\n  WHEEL = 1,\r\n  RIGHT = 2,\r\n  BACK = 3,\r\n  FORWARD = 4\r\n}\r\n\r\nexport enum MouseEventButtons {\r\n  LEFT = 1,\r\n  RIGHT = 2,\r\n  WHEEL = 4,\r\n  BACK = 8,\r\n  FORWARD = 16\r\n}\r\n\r\nexport function focusComposedPath(): HTMLElement[] {\r\n  const composedPath = [];\r\n  let root: Document | ShadowRoot = document;\r\n\r\n  while (root && root.activeElement) {\r\n    composedPath.push(root.activeElement);\r\n    root = root.activeElement.shadowRoot;\r\n  }\r\n\r\n  return composedPath.reverse();\r\n}\r\n"],"mappings":"wFAAaA,EAAqBC,EAAA,KAAG,SACnCC,GAEA,OAAAC,UAAUC,UAAUC,SAAS,OAASH,EAAUI,QAAUJ,EAAUK,OAApE,I,SAEcC,EACdN,EACAO,GAEA,OAAQP,EAAUQ,QAAUD,KAAYA,CAC1C,C,IAEYE,EAAAV,EAAA,IAAAU,IAAZ,SAAYA,GACVA,IAAA,mCACAA,IAAA,kBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,kBACAA,IAAA,uBACD,EAPD,CAAYA,GAAgBV,EAAA,IAAhBU,EAAgB,K,IAShBC,EAAAX,EAAA,IAAAW,IAAZ,SAAYA,GACVA,IAAA,kBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,kBACAA,IAAA,wBACD,EAND,CAAYA,GAAiBX,EAAA,IAAjBW,EAAiB,K,SAQbC,IACd,IAAMC,EAAe,GACrB,IAAIC,EAA8BC,SAElC,MAAOD,GAAQA,EAAKE,cAAe,CACjCH,EAAaI,KAAKH,EAAKE,eACvBF,EAAOA,EAAKE,cAAcE,U,CAG5B,OAAOL,EAAaM,SACtB,C"}