{"version":3,"names":["e","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","r","defaultToken","ignoreCase","tokenPostfix","token","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","next","string","herestring","comment","hereregexp"],"sources":["src/components/code-editor/monaco/output/coffee-7FzaZYLM.js"],"sourcesContent":["var e = { wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g, comments: { blockComment: [\"###\", \"###\"], lineComment: \"#\" }, brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]], autoClosingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], surroundingPairs: [{ open: \"{\", close: \"}\" }, { open: \"[\", close: \"]\" }, { open: \"(\", close: \")\" }, { open: '\"', close: '\"' }, { open: \"'\", close: \"'\" }], folding: { markers: { start: new RegExp(\"^\\\\s*#region\\\\b\"), end: new RegExp(\"^\\\\s*#endregion\\\\b\") } } }, r = { defaultToken: \"\", ignoreCase: !0, tokenPostfix: \".coffee\", brackets: [{ open: \"{\", close: \"}\", token: \"delimiter.curly\" }, { open: \"[\", close: \"]\", token: \"delimiter.square\" }, { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }], regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/, keywords: [\"and\", \"or\", \"is\", \"isnt\", \"not\", \"on\", \"yes\", \"@\", \"no\", \"off\", \"true\", \"false\", \"null\", \"this\", \"new\", \"delete\", \"typeof\", \"in\", \"instanceof\", \"return\", \"throw\", \"break\", \"continue\", \"debugger\", \"if\", \"else\", \"switch\", \"for\", \"while\", \"do\", \"try\", \"catch\", \"finally\", \"class\", \"extends\", \"super\", \"undefined\", \"then\", \"unless\", \"until\", \"loop\", \"of\", \"by\", \"when\"], symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/, escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/, tokenizer: { root: [[/\\@[a-zA-Z_]\\w*/, \"variable.predefined\"], [/[a-zA-Z_]\\w*/, { cases: { this: \"variable.predefined\", \"@keywords\": { token: \"keyword.$0\" }, \"@default\": \"\" } }], [/[ \\t\\r\\n]+/, \"\"], [/###/, \"comment\", \"@comment\"], [/#.*$/, \"comment\"], [\"///\", { token: \"regexp\", next: \"@hereregexp\" }], [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]], [/(\\()(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\=)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\[)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\!)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\&)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\|)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\?)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\{)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\;)(\\s*)(@regEx)/, [\"\", \"\", \"regexp\"]], [/}/, { cases: { \"$S2==interpolatedstring\": { token: \"string\", next: \"@pop\" }, \"@default\": \"@brackets\" } }], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"], [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/0[0-7]+(?!\\d)/, \"number.octal\"], [/\\d+/, \"number\"], [/[,.]/, \"delimiter\"], [/\"\"\"/, \"string\", '@herestring.\"\"\"'], [/'''/, \"string\", \"@herestring.'''\"], [/\"/, { cases: { \"@eos\": \"string\", \"@default\": { token: \"string\", next: '@string.\"' } } }], [/'/, { cases: { \"@eos\": \"string\", \"@default\": { token: \"string\", next: \"@string.'\" } } }]], string: [[/[^\"'\\#\\\\]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/\\./, \"string.escape.invalid\"], [/#{/, { cases: { '$S2==\"': { token: \"string\", next: \"root.interpolatedstring\" }, \"@default\": \"string\" } }], [/[\"']/, { cases: { \"$#==$S2\": { token: \"string\", next: \"@pop\" }, \"@default\": \"string\" } }], [/#/, \"string\"]], herestring: [[/(\"\"\"|''')/, { cases: { \"$1==$S2\": { token: \"string\", next: \"@pop\" }, \"@default\": \"string\" } }], [/[^#\\\\'\"]+/, \"string\"], [/['\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/#{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }], [/#/, \"string\"]], comment: [[/[^#]+/, \"comment\"], [/###/, \"comment\", \"@pop\"], [/#/, \"comment\"]], hereregexp: [[/[^\\\\\\/#]+/, \"regexp\"], [/\\\\./, \"regexp\"], [/#.*$/, \"comment\"], [\"///[igm]*\", { token: \"regexp\", next: \"@pop\" }], [/\\//, \"regexp\"]] } };\nexport {\n  e as conf,\n  r as language\n};\n"],"mappings":"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"}