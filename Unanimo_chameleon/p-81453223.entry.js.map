{"version":3,"names":["THEMES","Map","BASEURL_REGEX","isEnabledTheme","theme","styleSheet","disabled","instanceTheme","el","addThemeElement","attachTheme","setLoadedTheme","loadTheme","then","loaded","enableTheme","attachAllTheme","setLoadedAllTheme","removeThemeElement","get","name","index","elements","indexOf","removeElement","set","push","async","href","trim","some","item","appendThemeStyleSheetUrl","getThemeStyleSheet","baseUrl","innerText","match","appendThemeStyleSheetText","CSSStyleSheet","baseURL","root","getRootNode","Document","ShadowRoot","adoptedStyleSheets","includes","forEach","cssText","Promise","resolve","appendCssText","applyBaseUrl","error","url","requestStyleSheet","response","fetch","ok","text","Error","themeStyleSheet","parserStyleSheet","replace","cssRule","cssRules","insertRule","ChTheme","loadedHandler","this","themeLoaded","emit","connectedCallback","hidden","componentWillLoad","disconnectedCallback"],"sources":["src/components/theme/theme-stylesheet.ts","src/components/theme/theme.tsx"],"sourcesContent":["import { removeElement } from \"../../common/array\";\r\n\r\nconst THEMES = new Map<string, Theme>();\r\nconst BASEURL_REGEX =\r\n  /(url\\((?!\\s*[\"']?(?:\\/|https?:|data:))\\s*[\"']?)([^'\")]+)/g;\r\n\r\ntype Theme = {\r\n  elements: HTMLChThemeElement[];\r\n  styleSheet?: CSSStyleSheet;\r\n};\r\n\r\n/**\r\n * Event interface for when a theme is loaded.\r\n */\r\nexport interface ChThemeLoadedEvent {\r\n  name: string;\r\n}\r\n\r\nconst isEnabledTheme = (theme: Theme): boolean =>\r\n  theme.styleSheet ? !theme.styleSheet.disabled : false;\r\n\r\n/**\r\n * Initializes a theme instance within the Document or ShadowRoot to which the HTMLChThemeElement belongs.\r\n * If the HTMLChThemeElement indicates the source of the theme, it loads the theme.\r\n */\r\nexport function instanceTheme(el: HTMLChThemeElement) {\r\n  const theme = addThemeElement(el);\r\n\r\n  /**\r\n   * If the theme is already loaded and enabled,\r\n   * just attach it and mark as loaded in HTMLChThemeElement context\r\n   */\r\n  if (isEnabledTheme(theme)) {\r\n    attachTheme(el, theme);\r\n    setLoadedTheme(el);\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Otherwise, load the theme asynchronously,\r\n   * then attach it and mark as loaded in all HTMLChThemeElement contexts\r\n   */\r\n  loadTheme(el, theme).then(loaded => {\r\n    if (loaded) {\r\n      enableTheme(theme);\r\n      attachAllTheme(theme);\r\n      setLoadedAllTheme(theme);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Removes a theme element.\r\n * @param el The HTMLChThemeElement to remove the theme from.\r\n */\r\nexport function removeThemeElement(el: HTMLChThemeElement) {\r\n  const theme = THEMES.get(el.name);\r\n  const index = theme.elements.indexOf(el);\r\n\r\n  if (theme && index >= 0) {\r\n    removeElement(theme.elements, index);\r\n  }\r\n}\r\n\r\nfunction addThemeElement(el: HTMLChThemeElement): Theme {\r\n  const theme =\r\n    THEMES.get(el.name) ?? THEMES.set(el.name, { elements: [] }).get(el.name);\r\n\r\n  theme.elements.push(el);\r\n\r\n  return theme;\r\n}\r\n\r\nasync function loadTheme(\r\n  el: HTMLChThemeElement,\r\n  theme: Theme\r\n): Promise<boolean> {\r\n  let loaded = false;\r\n\r\n  if (\r\n    typeof el.href === \"string\" &&\r\n    el.href.trim() !== \"\" &&\r\n    !theme.elements.some(item => item !== el && item.href === el.href)\r\n  ) {\r\n    loaded = await appendThemeStyleSheetUrl(\r\n      el.href,\r\n      getThemeStyleSheet(el, theme),\r\n      el.baseUrl\r\n    );\r\n  } else if (!el.innerText.match(/^\\s*$/)) {\r\n    loaded = await appendThemeStyleSheetText(\r\n      el.innerText,\r\n      getThemeStyleSheet(el, theme),\r\n      el.baseUrl\r\n    );\r\n  }\r\n\r\n  return loaded;\r\n}\r\n\r\nfunction getThemeStyleSheet(el: HTMLChThemeElement, theme: Theme) {\r\n  theme.styleSheet ||= new CSSStyleSheet({\r\n    disabled: true,\r\n    baseURL: el.baseUrl\r\n  });\r\n\r\n  return theme.styleSheet;\r\n}\r\n\r\nfunction attachTheme(el: HTMLChThemeElement, theme: Theme) {\r\n  const root = el.getRootNode();\r\n\r\n  if (root instanceof Document || root instanceof ShadowRoot) {\r\n    if (!root.adoptedStyleSheets.includes(theme.styleSheet)) {\r\n      root.adoptedStyleSheets.push(theme.styleSheet);\r\n    }\r\n  }\r\n}\r\n\r\nfunction attachAllTheme(theme: Theme) {\r\n  theme.elements.forEach(el => attachTheme(el, theme));\r\n}\r\n\r\nfunction enableTheme(theme: Theme) {\r\n  theme.styleSheet.disabled = false;\r\n}\r\n\r\nfunction setLoadedTheme(el: HTMLChThemeElement) {\r\n  el.loaded = true;\r\n}\r\n\r\nfunction setLoadedAllTheme(theme: Theme) {\r\n  theme.elements.forEach(el => setLoadedTheme(el));\r\n}\r\n\r\nfunction appendThemeStyleSheetText(\r\n  cssText: string,\r\n  styleSheet: CSSStyleSheet,\r\n  baseUrl: string\r\n): Promise<boolean> {\r\n  return new Promise(async resolve => {\r\n    try {\r\n      resolve(appendCssText(styleSheet, applyBaseUrl(baseUrl, cssText)));\r\n    } catch (error) {\r\n      resolve(false);\r\n    }\r\n  });\r\n}\r\n\r\nasync function appendThemeStyleSheetUrl(\r\n  url: string,\r\n  styleSheet: CSSStyleSheet,\r\n  baseUrl: string\r\n): Promise<boolean> {\r\n  return new Promise(async resolve => {\r\n    try {\r\n      resolve(\r\n        appendCssText(\r\n          styleSheet,\r\n          applyBaseUrl(baseUrl, await requestStyleSheet(url))\r\n        )\r\n      );\r\n    } catch (error) {\r\n      resolve(false);\r\n    }\r\n  });\r\n}\r\n\r\nasync function requestStyleSheet(url: string): Promise<string> {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return await response.text();\r\n    }\r\n    throw new Error(\"Network response was not ok.\");\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction appendCssText(\r\n  themeStyleSheet: CSSStyleSheet,\r\n  cssText: string\r\n): Promise<boolean> {\r\n  return new Promise(async resolve => {\r\n    try {\r\n      const parserStyleSheet = await new CSSStyleSheet({\r\n        disabled: true\r\n      }).replace(cssText);\r\n\r\n      for (const cssRule of parserStyleSheet.cssRules) {\r\n        themeStyleSheet.insertRule(cssRule.cssText);\r\n      }\r\n\r\n      resolve(true);\r\n    } catch (error) {\r\n      resolve(false);\r\n    }\r\n  });\r\n}\r\n\r\nfunction applyBaseUrl(baseUrl: string, cssText: string): string {\r\n  if (baseUrl) {\r\n    return cssText.replace(BASEURL_REGEX, `$1${baseUrl}$2`);\r\n  }\r\n  return cssText;\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Prop,\r\n  Watch\r\n} from \"@stencil/core\";\r\nimport {\r\n  ChThemeLoadedEvent,\r\n  instanceTheme,\r\n  removeThemeElement\r\n} from \"./theme-stylesheet\";\r\n\r\n/**\r\n * It allows you to load a style sheet in a similar way to the\r\n * native LINK or STYLE tags, but assigning it a name so that\r\n * it can be reused in different contexts,\r\n * either in the Document or in a Shadow-Root.\r\n */\r\n@Component({\r\n  tag: \"ch-theme\"\r\n})\r\nexport class ChTheme {\r\n  @Element() el: HTMLChThemeElement;\r\n\r\n  /**\r\n   * Specifies the name of the theme to instantiate\r\n   */\r\n  @Prop({ reflect: true }) readonly name: string;\r\n\r\n  /**\r\n   * Specifies the location of the stylesheet theme\r\n   */\r\n  @Prop({ reflect: true }) readonly href: string;\r\n\r\n  /**\r\n   * A string containing the baseURL used to resolve relative URLs in the stylesheet\r\n   */\r\n  @Prop({ reflect: true }) readonly baseUrl: string;\r\n\r\n  /**\r\n   * Indicates whether the theme has successfully loaded\r\n   */\r\n  @Prop() readonly loaded: boolean = false;\r\n  @Watch(\"loaded\")\r\n  loadedHandler() {\r\n    if (this.loaded) {\r\n      this.themeLoaded.emit({ name: this.name ?? \"\" });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event emitted when the theme has successfully loaded\r\n   */\r\n  @Event({ bubbles: true, composed: false })\r\n  themeLoaded: EventEmitter<ChThemeLoadedEvent>;\r\n\r\n  connectedCallback() {\r\n    this.el.hidden = true;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    instanceTheme(this.el);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    removeThemeElement(this.el);\r\n  }\r\n}\r\n"],"mappings":"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"}