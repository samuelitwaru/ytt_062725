{"version":3,"names":["nextDataModelingRenderCss","ChNextDataModelingRenderStyle0","getSubLevelEntitiesATTs","result","level","forEach","entityItem","entityItemLevel","Level","Type","DataType","map","subEntityItem","Name","updateToEntityATTs","dm","Entities","entity","entityLevel","NextDataModeling","exports","this","entities","editedControl","entityWasAdded","addField","collection","event","_this","addEntityItem","detail","updateReferences","deleteField","index","remove","editField","name","type","addEntity","newItem","createGxCollectionCallback","push","editEntity","ATT","ENTITY","LEVEL","adding","addNewEntity","addNewField","cancel","confirm","delete","deleteMode","deleting","edit","editing","newEntity","newField","Empty","AlreadyDefined1","AlreadyDefinedEntity1","AlreadyDefined2","class_1","prototype","handleDataModelChange","newDataModel","entityNameToATTs","Object","keys","handleHideLoadingChange","hideWaitingMode","processEntityAdding","item","fieldAdded","stopPropagation","target","emit","fieldRemoved","entityClassList","classList","firstItemContainerClassList","firstElementChild","firstItemClassList","addingModeCommonClass","entityAddingModeClass","add","entityClass","commonClass","fieldContainerClass","apply","__spreadArray","fieldAddingModeClass","split","fieldClass","fieldCommonClass","componentWillLoad","dataModel","render","h","key","class","cssClass","i","captions","disabled","errorTexts","fieldNames","readonly","onDeleteField","_a","dataModelToEdit","onEditField","_b","field","j","dataType","maxAtts","length","subFieldContainerClass","subField","k","subFieldClass","subFieldAddingModeClass","mode","onNewField","_c","onNewEntity","actionsVisible","showNewFieldBtn"],"sources":["src/components/next/data-modeling-render/next-data-modeling-render.scss?tag=ch-next-data-modeling-render","src/components/next/data-modeling-render/next-data-modeling-render.tsx"],"sourcesContent":["ch-next-data-modeling-render {\r\n  display: contents;\r\n}\r\n","import { Component, Event, EventEmitter, Prop, Watch, h } from \"@stencil/core\";\r\nimport { Component as ChComponent } from \"../../../common/interfaces\";\r\nimport {\r\n  DataModelItemLabels,\r\n  EntityInfo,\r\n  ErrorText,\r\n  ItemInfo\r\n} from \"../data-modeling-item/next-data-modeling-item\";\r\nimport {\r\n  DataModel,\r\n  Entity,\r\n  EntityItem,\r\n  EntityNameToATTs\r\n} from \"../data-modeling/data-model\";\r\nimport { ChNextDataModelingItemCustomEvent } from \"../../../components\";\r\n\r\nconst getSubLevelEntitiesATTs = (\r\n  result: EntityNameToATTs,\r\n  level: EntityItem[]\r\n) => {\r\n  level.forEach(entityItem => {\r\n    const entityItemLevel = entityItem.Level;\r\n\r\n    if (entityItem.Type === \"LEVEL\") {\r\n      /* Following level entities with DataType */\r\n      result[entityItem.DataType] = entityItemLevel.map(\r\n        subEntityItem => subEntityItem.Name\r\n      );\r\n\r\n      getSubLevelEntitiesATTs(result, entityItemLevel);\r\n    }\r\n  });\r\n};\r\n\r\nconst updateToEntityATTs = (dm: DataModel): EntityNameToATTs => {\r\n  if (!dm) {\r\n    return {};\r\n  }\r\n  const result: EntityNameToATTs = {};\r\n\r\n  dm.Entities.forEach((entity: Entity) => {\r\n    const entityLevel = entity.Level;\r\n    /* First level entities with name */\r\n    result[entity.Name] = entityLevel.map(entityItem => entityItem.Name);\r\n\r\n    if (entityLevel) {\r\n      getSubLevelEntitiesATTs(result, entityLevel);\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n@Component({\r\n  shadow: false,\r\n  styleUrl: \"next-data-modeling-render.scss\",\r\n  tag: \"ch-next-data-modeling-render\"\r\n})\r\nexport class NextDataModeling implements ChComponent {\r\n  private entityNameToATTs: EntityNameToATTs;\r\n  private entities: string[] = [];\r\n\r\n  private editedControl: HTMLChNextDataModelingItemElement = null;\r\n  private entityWasAdded: \"adding\" | \"finished\" | \"none\" = \"none\";\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class when\r\n   * adding mode is enabled.\r\n   */\r\n  @Prop() readonly addingModeCommonClass: string;\r\n\r\n  /**\r\n   * The labels used in the buttons of the items. Important for accessibility.\r\n   */\r\n  @Prop() readonly captions: DataModelItemLabels = {\r\n    ATT: \"Attribute\",\r\n    ENTITY: \"Entity\",\r\n    LEVEL: \"Collection\",\r\n    adding: \"Adding...\",\r\n    addNewEntity: \"Add new entity\",\r\n    addNewField: \"Add new field\",\r\n    cancel: \"Cancel\",\r\n    collection: \"Collection\",\r\n    confirm: \"Confirm\",\r\n    delete: \"Delete\",\r\n    deleteMode: \"Confirm delete?\",\r\n    deleting: \"Deleting...\",\r\n    edit: \"Edit\",\r\n    editing: \"Saving...\",\r\n    newEntity: \"New Entity\",\r\n    newField: \"New Field\"\r\n  };\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class.\r\n   */\r\n  @Prop() readonly commonClass: string;\r\n\r\n  /**\r\n   * This callback is used to created a new SDT GxCollectionField based on the\r\n   * EntityItem type.\r\n   */\r\n  @Prop() readonly createGxCollectionCallback: () => EntityItem[];\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling` element class.\r\n   */\r\n  @Prop() readonly cssClass: string;\r\n\r\n  /**\r\n   * This property represents the UI model that is currently rendered.\r\n   */\r\n  @Prop() readonly dataModel: DataModel;\r\n  @Watch(\"dataModel\")\r\n  handleDataModelChange(newDataModel: DataModel) {\r\n    this.entityNameToATTs = updateToEntityATTs(newDataModel);\r\n    this.entities = Object.keys(this.entityNameToATTs);\r\n  }\r\n\r\n  /**\r\n   * This property represents a copy of the UI model that is currently rendered.\r\n   * Useful for making changes that may or may not be accepted by the server.\r\n   */\r\n  @Prop() readonly dataModelToEdit: DataModel;\r\n\r\n  /**\r\n   * This attribute lets you specify if the element is disabled.\r\n   * If disabled, it will not fire any user interaction related event.\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level === \"0\"` and `mode === \"add\"`.\r\n   */\r\n  @Prop() readonly entityAddingModeClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level === \"0\"` and `mode !== \"add\"`.\r\n   */\r\n  @Prop() readonly entityClass: string;\r\n\r\n  /**\r\n   * The error texts used for the new field input.\r\n   */\r\n  @Prop() readonly errorTexts: { [key in ErrorText]: string } = {\r\n    Empty: \"Field is empty.\",\r\n    AlreadyDefined1: \"Field \",\r\n    AlreadyDefinedEntity1: \"Entity \",\r\n    AlreadyDefined2: \" already exists.\"\r\n  };\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level === \"0\" | \"1\"` and `mode === \"add\"`.\r\n   */\r\n  @Prop() readonly fieldAddingModeClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level === \"1\"` and `mode !== \"add\"`.\r\n   */\r\n  @Prop() readonly fieldClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling` element class with\r\n   * `level === \"1\"`.\r\n   */\r\n  @Prop() readonly fieldContainerClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * (`level === \"0\"` and `mode !== \"add\"`) or `level === \"1\" | \"2\"`.\r\n   */\r\n  @Prop() readonly fieldCommonClass: string;\r\n\r\n  /**\r\n   * This property is a WA due to Angular's bug not letting execute UC 2.0\r\n   * methods on different layouts.\r\n   */\r\n  @Prop() readonly hideLoading: any = null;\r\n  @Watch(\"hideLoading\")\r\n  handleHideLoadingChange() {\r\n    this.editedControl.hideWaitingMode();\r\n\r\n    if (this.entityWasAdded === \"adding\") {\r\n      this.entityWasAdded = \"finished\";\r\n      this.processEntityAdding();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine the maximum amount of ATTs displayed per entity.\r\n   */\r\n  @Prop() readonly maxAtts: number = 3;\r\n\r\n  /**\r\n   * This attribute indicates that the user cannot modify the value of the control.\r\n   * Same as [readonly](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)\r\n   * attribute for `input` elements.\r\n   */\r\n  @Prop() readonly readonly: boolean = false;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level = \"2\"` and `mode !== \"add\"`.\r\n   */\r\n  @Prop() readonly subFieldClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling-item` element class with\r\n   * `level = \"2\"` and `mode === \"add\"`.\r\n   */\r\n  @Prop() readonly subFieldAddingModeClass: string;\r\n\r\n  /**\r\n   * A CSS class to set as the `ch-next-data-modeling` element class with\r\n   * `level === \"2\"`.\r\n   */\r\n  @Prop() readonly subFieldContainerClass: string;\r\n\r\n  /**\r\n   * Emitted when a new field is added or edited.\r\n   */\r\n  @Event() fieldAdded: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when a new field is removed.\r\n   */\r\n  @Event() fieldRemoved: EventEmitter;\r\n\r\n  private addField =\r\n    (collection: any) =>\r\n    (event: ChNextDataModelingItemCustomEvent<ItemInfo>) => {\r\n      this.addEntityItem(collection, event.detail);\r\n      this.updateReferences(event, true);\r\n    };\r\n\r\n  private addEntityItem(collection: any, item: ItemInfo) {\r\n    const newItem: EntityItem = {\r\n      Name: item.name,\r\n      Type: item.type,\r\n      DataType: \"\"\r\n    };\r\n    collection.push(newItem);\r\n  }\r\n\r\n  private deleteField =\r\n    (collection: any, index: number) =>\r\n    (event: ChNextDataModelingItemCustomEvent<any>) => {\r\n      collection.remove(index + 1);\r\n\r\n      this.updateReferences(event);\r\n    };\r\n\r\n  private editField =\r\n    (entityItem: EntityItem) =>\r\n    (event: ChNextDataModelingItemCustomEvent<ItemInfo>) => {\r\n      entityItem.Name = event.detail.name;\r\n      entityItem.Type = event.detail.type;\r\n      entityItem.DataType = \"\"; // Remove DataType\r\n\r\n      this.updateReferences(event, true);\r\n    };\r\n\r\n  private addEntity =\r\n    (collection: any) =>\r\n    (event: ChNextDataModelingItemCustomEvent<EntityInfo>) => {\r\n      this.entityWasAdded = \"adding\";\r\n\r\n      const newItem: Entity = {\r\n        Name: event.detail.name,\r\n        Level: this.createGxCollectionCallback()\r\n      };\r\n      collection.push(newItem);\r\n      this.addEntityItem(newItem.Level, event.detail.level[0]);\r\n\r\n      this.updateReferences(event, true);\r\n    };\r\n\r\n  private editEntity =\r\n    (entityItem: Entity) =>\r\n    (event: ChNextDataModelingItemCustomEvent<ItemInfo>) => {\r\n      entityItem.Name = event.detail.name;\r\n\r\n      this.updateReferences(event, true);\r\n    };\r\n\r\n  private updateReferences(\r\n    event: ChNextDataModelingItemCustomEvent<any>,\r\n    fieldAdded = false\r\n  ) {\r\n    event.stopPropagation();\r\n    this.editedControl = event.target;\r\n\r\n    if (fieldAdded) {\r\n      this.fieldAdded.emit();\r\n    } else {\r\n      this.fieldRemoved.emit();\r\n    }\r\n\r\n    this.processEntityAdding();\r\n  }\r\n\r\n  private processEntityAdding() {\r\n    if (!this.editedControl || this.entityWasAdded === \"none\") {\r\n      return;\r\n    }\r\n\r\n    const entityClassList = this.editedControl.classList;\r\n    const firstItemContainerClassList =\r\n      this.editedControl.firstElementChild.classList;\r\n    const firstItemClassList =\r\n      this.editedControl.firstElementChild.firstElementChild.classList;\r\n\r\n    if (this.entityWasAdded === \"adding\") {\r\n      entityClassList.remove(\r\n        this.addingModeCommonClass,\r\n        this.entityAddingModeClass\r\n      );\r\n      entityClassList.add(this.entityClass, this.commonClass);\r\n\r\n      firstItemContainerClassList.add(this.fieldContainerClass);\r\n\r\n      firstItemClassList.remove(\r\n        this.addingModeCommonClass,\r\n        ...this.fieldAddingModeClass.split(\" \")\r\n      );\r\n      firstItemClassList.add(\r\n        this.fieldClass,\r\n        this.fieldCommonClass,\r\n        this.commonClass\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.entityWasAdded === \"finished\") {\r\n      entityClassList.remove(this.entityClass);\r\n      entityClassList.add(\r\n        this.addingModeCommonClass,\r\n        this.entityAddingModeClass\r\n      );\r\n\r\n      firstItemContainerClassList.remove(this.fieldContainerClass);\r\n\r\n      firstItemClassList.remove(this.fieldClass);\r\n      firstItemClassList.add(\r\n        this.addingModeCommonClass,\r\n        ...this.fieldAddingModeClass.split(\" \")\r\n      );\r\n\r\n      this.entityWasAdded = \"none\";\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.handleDataModelChange(this.dataModel);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ch-next-data-modeling class={this.cssClass}>\r\n        {this.dataModel != null &&\r\n          this.dataModel.Entities != null &&\r\n          this.dataModel.Entities.map((entity, i) => (\r\n            <ch-next-data-modeling-item\r\n              key={entity.Name}\r\n              captions={this.captions}\r\n              class={this.entityClass + \" \" + this.commonClass}\r\n              disabled={this.disabled}\r\n              errorTexts={this.errorTexts}\r\n              fieldNames={this.entities}\r\n              name={entity.Name}\r\n              level={0}\r\n              readonly={this.readonly}\r\n              onDeleteField={\r\n                !this.readonly\r\n                  ? this.deleteField(this.dataModelToEdit?.Entities, i)\r\n                  : null\r\n              }\r\n              onEditField={\r\n                !this.readonly\r\n                  ? this.editEntity(this.dataModelToEdit?.Entities[i])\r\n                  : null\r\n              }\r\n            >\r\n              <ch-next-data-modeling class={this.fieldContainerClass}>\r\n                {entity.Level.map((field, j) => (\r\n                  <ch-next-data-modeling-item\r\n                    key={field.Name}\r\n                    captions={this.captions}\r\n                    class={\r\n                      this.fieldClass +\r\n                      \" \" +\r\n                      this.fieldCommonClass +\r\n                      \" \" +\r\n                      this.commonClass\r\n                    }\r\n                    dataType={field.DataType}\r\n                    disabled={this.disabled}\r\n                    entityNameToATTs={this.entityNameToATTs}\r\n                    errorTexts={this.errorTexts}\r\n                    fieldNames={this.entityNameToATTs[entity.Name]}\r\n                    maxAtts={this.maxAtts}\r\n                    name={field.Name}\r\n                    readonly={this.readonly}\r\n                    type={field.Type}\r\n                    onDeleteField={\r\n                      !this.readonly\r\n                        ? this.deleteField(\r\n                            this.dataModelToEdit?.Entities[i].Level,\r\n                            j\r\n                          )\r\n                        : null\r\n                    }\r\n                    onEditField={\r\n                      !this.readonly\r\n                        ? this.editField(\r\n                            this.dataModelToEdit?.Entities[i].Level[j]\r\n                          )\r\n                        : null\r\n                    }\r\n                  >\r\n                    {field.Level != null && field.Level.length > 0 && (\r\n                      <ch-next-data-modeling\r\n                        class={this.subFieldContainerClass}\r\n                      >\r\n                        {field.Level.map((subField, k) => (\r\n                          <ch-next-data-modeling-item\r\n                            key={subField.Name}\r\n                            captions={this.captions}\r\n                            class={\r\n                              this.subFieldClass +\r\n                              \" \" +\r\n                              this.fieldCommonClass +\r\n                              \" \" +\r\n                              this.commonClass\r\n                            }\r\n                            dataType={subField.DataType}\r\n                            disabled={this.disabled}\r\n                            entityNameToATTs={this.entityNameToATTs}\r\n                            errorTexts={this.errorTexts}\r\n                            fieldNames={this.entityNameToATTs[field.DataType]}\r\n                            level={2}\r\n                            maxAtts={this.maxAtts}\r\n                            name={subField.Name}\r\n                            readonly={this.readonly}\r\n                            type={subField.Type}\r\n                            onDeleteField={\r\n                              !this.readonly\r\n                                ? this.deleteField(\r\n                                    this.dataModelToEdit?.Entities[i].Level[j]\r\n                                      .Level,\r\n                                    k\r\n                                  )\r\n                                : null\r\n                            }\r\n                            onEditField={\r\n                              !this.readonly\r\n                                ? this.editField(\r\n                                    this.dataModelToEdit?.Entities[i].Level[j]\r\n                                      .Level[k]\r\n                                  )\r\n                                : null\r\n                            }\r\n                          ></ch-next-data-modeling-item>\r\n                        ))}\r\n\r\n                        {!this.readonly && (\r\n                          <ch-next-data-modeling-item\r\n                            key=\"-1\"\r\n                            captions={this.captions}\r\n                            class={\r\n                              this.subFieldAddingModeClass +\r\n                              \" \" +\r\n                              this.fieldCommonClass +\r\n                              \" \" +\r\n                              this.addingModeCommonClass +\r\n                              \" \" +\r\n                              this.commonClass\r\n                            }\r\n                            disabled={this.disabled}\r\n                            errorTexts={this.errorTexts}\r\n                            fieldNames={this.entityNameToATTs[field.DataType]}\r\n                            level={2}\r\n                            mode=\"add\"\r\n                            type=\"ATT\"\r\n                            onNewField={this.addField(\r\n                              this.dataModelToEdit?.Entities[i].Level[j].Level\r\n                            )}\r\n                          ></ch-next-data-modeling-item>\r\n                        )}\r\n                      </ch-next-data-modeling>\r\n                    )}\r\n                  </ch-next-data-modeling-item>\r\n                ))}\r\n\r\n                {!this.readonly && (\r\n                  <ch-next-data-modeling-item\r\n                    key=\"-1\"\r\n                    captions={this.captions}\r\n                    class={\r\n                      this.fieldAddingModeClass +\r\n                      \" \" +\r\n                      this.fieldCommonClass +\r\n                      \" \" +\r\n                      this.addingModeCommonClass +\r\n                      \" \" +\r\n                      this.commonClass\r\n                    }\r\n                    disabled={this.disabled}\r\n                    errorTexts={this.errorTexts}\r\n                    fieldNames={this.entityNameToATTs[entity.Name]}\r\n                    mode=\"add\"\r\n                    type=\"ATT\"\r\n                    onNewField={this.addField(\r\n                      this.dataModelToEdit?.Entities[i].Level\r\n                    )}\r\n                  ></ch-next-data-modeling-item>\r\n                )}\r\n              </ch-next-data-modeling>\r\n            </ch-next-data-modeling-item>\r\n          ))}\r\n\r\n        {this.dataModel?.Entities && !this.readonly && (\r\n          <ch-next-data-modeling-item\r\n            key=\"-1\"\r\n            captions={this.captions}\r\n            class={\r\n              this.entityAddingModeClass +\r\n              \" \" +\r\n              this.addingModeCommonClass +\r\n              \" \" +\r\n              this.commonClass\r\n            }\r\n            disabled={this.disabled}\r\n            errorTexts={this.errorTexts}\r\n            fieldNames={this.entities}\r\n            level={0}\r\n            mode=\"add\"\r\n            onNewEntity={this.addEntity(this.dataModelToEdit?.Entities)}\r\n          >\r\n            <ch-next-data-modeling>\r\n              <ch-next-data-modeling-item\r\n                actionsVisible={false}\r\n                captions={this.captions}\r\n                class={\r\n                  this.fieldAddingModeClass +\r\n                  \" \" +\r\n                  this.fieldCommonClass +\r\n                  \" \" +\r\n                  this.addingModeCommonClass +\r\n                  \" \" +\r\n                  this.commonClass\r\n                }\r\n                disabled={this.disabled}\r\n                errorTexts={this.errorTexts}\r\n                mode=\"add\"\r\n                showNewFieldBtn={false}\r\n                type=\"ATT\"\r\n              ></ch-next-data-modeling-item>\r\n            </ch-next-data-modeling>\r\n          </ch-next-data-modeling-item>\r\n        )}\r\n      </ch-next-data-modeling>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}