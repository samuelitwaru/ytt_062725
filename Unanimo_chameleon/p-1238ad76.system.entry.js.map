{"version":3,"names":["chFormCheckboxCss","ChFormCheckboxStyle0","ChFormCheckbox","exports","class_1","prototype","compontentDidLoad","this","checked","disabled","checkboxInput","removeAttribute","changed","change","emit","checkboxId","handlerOnKeyUp","event","keyCode","el","setAttribute","ariaChecked","handleInputClick","e","stopPropagation","render","_this","h","Host","key","role","value","label","class","ref","type","id","name","onChange","bind","onKeyUp","tabindex","onClick","checkmark"],"sources":["src/deprecated-components/form-checkbox/ch-form-checkbox.scss?tag=ch-form-checkbox&encapsulation=shadow","src/deprecated-components/form-checkbox/ch-form-checkbox.tsx"],"sourcesContent":["@import \"../../deprecated-globals/normalize\";\r\n@import \"../../deprecated-globals/mixins\";\r\n\r\n:host {\r\n  // margin-bottom: var(--spacing-comp-03);\r\n  display: flex;\r\n}\r\n\r\n:host {\r\n  .label {\r\n    display: block;\r\n    margin-bottom: 16px; //var(--spacing-lay-m);\r\n  }\r\n  .label:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  input:focus + .checkmark {\r\n    box-shadow: 0px 0px 0px var(--border-width-sm) var(--color-primary-active);\r\n    border-color: var(--color-primary-active) !important  ;\r\n  }\r\n  input[disabled] {\r\n    cursor: not-allowed;\r\n  }\r\n  input[disabled] + .checkmark {\r\n    border-color: var(--darkGray) !important;\r\n    pointer-events: none;\r\n  }\r\n  input[disabled] + .checkmark:after {\r\n    border-color: var(--darkGray) !important;\r\n  }\r\n}\r\n\r\n:host([inline]) .outer-wrapper {\r\n  display: flex;\r\n}\r\n:host([inline]) .label {\r\n  margin-inline-end: var(--spacing-comp-04);\r\n  margin-bottom: 0;\r\n}\r\n\r\n:host {\r\n  /* The label */\r\n  .label {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    cursor: pointer;\r\n    @include form-element-common-styles-label();\r\n  }\r\n  .label__required {\r\n    @include form-element-common-styles-label-required();\r\n  }\r\n\r\n  /* Hide the browser's default checkbox */\r\n  .label input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    height: 0;\r\n    width: 0;\r\n  }\r\n\r\n  .label input[on-focus] + .checkmark {\r\n    box-shadow: inset 0px 0px 0px 1px var(--color-primary-active);\r\n    border-color: var(--color-primary-active) !important;\r\n  }\r\n  .checkmark:focus {\r\n    box-shadow: none;\r\n  }\r\n\r\n  /* Create a custom checkbox */\r\n  .checkmark {\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-inline-end: var(--spacing-comp-02);\r\n    height: var(--spacing-comp-04);\r\n    width: var(--spacing-comp-04);\r\n    //background-color: transparent;\r\n    border-width: 1px; //var(--border-width-sm);\r\n    border-style: solid; //var(--border-style-regular);\r\n    border-radius: 3px; //var(--border-radius-md);\r\n    border-color: var(--gray-04);\r\n    box-sizing: border-box;\r\n    flex-shrink: 0;\r\n    background: var(--color-background);\r\n    &.no-label {\r\n      margin-inline-end: 0;\r\n    }\r\n  }\r\n\r\n  /* When the checkbox is checked, add a blue background */\r\n\r\n  /* Create the checkmark/indicator (hidden when not checked) */\r\n  .checkmark:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  .label input ~ .checkmark:after {\r\n    display: block;\r\n    border-color: transparent;\r\n  }\r\n  /* Show the checkmark when checked */\r\n  .label input:checked ~ .checkmark:after {\r\n    display: block;\r\n    border-color: var(--color-primary-hover);\r\n    @include ui-animation(border-color);\r\n  }\r\n  .label input:checked ~ .checkmark {\r\n    border-color: var(--color-primary-hover);\r\n  }\r\n\r\n  /* Style the checkmark/indicator */\r\n  .label .checkmark:after {\r\n    left: 5px;\r\n    top: 2px;\r\n    width: 3px;\r\n    height: 7px;\r\n    border: solid;\r\n    border-color: var(--color-primary-hover);\r\n    border-width: 0 2px 2px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n  }\r\n}\r\n/*indeterminate*/\r\n:host([indeterminate]) .label input:checked ~ .checkmark:after {\r\n  display: block;\r\n  width: 10px;\r\n  height: 2px;\r\n  transform: rotate(0deg);\r\n  border: 0;\r\n  background-color: var(--color-primary-hover);\r\n  left: 2px;\r\n  top: 6px;\r\n}\r\n:host([disabled=\"true\"]) label {\r\n  cursor: not-allowed;\r\n}\r\n","/* eslint-disable @stencil-community/required-jsdoc */\r\nimport {\r\n  Component,\r\n  Element,\r\n  Host,\r\n  Prop,\r\n  h,\r\n  Event,\r\n  EventEmitter\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"ch-form-checkbox\",\r\n  styleUrl: \"ch-form-checkbox.scss\",\r\n  shadow: true\r\n})\r\nexport class ChFormCheckbox {\r\n  @Element() el: HTMLChFormCheckboxElement;\r\n\r\n  // A reference to the input\r\n  checkboxInput!: HTMLInputElement;\r\n\r\n  /** *******************************\r\n    PROPERTIES & STATE\r\n    *********************************/\r\n\r\n  /**\r\n   * The checkbox id\r\n   */\r\n  @Prop() readonly checkboxId: string;\r\n\r\n  /**\r\n   * The presence of this attribute makes the checkbox checked by default\r\n   */\r\n  @Prop({ reflect: false, mutable: true }) checked = false;\r\n\r\n  /**\r\n   * The presence of this attribute makes the checkbox indeterminate\r\n   */\r\n  @Prop({ reflect: true }) readonly indeterminate: boolean = false;\r\n\r\n  /**\r\n   * The presence of this attribute disables the checkbox\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * The checkbox label\r\n   */\r\n  @Prop() readonly label: string;\r\n\r\n  /**\r\n   * The checkbox value\r\n   */\r\n  @Prop() readonly value: string;\r\n\r\n  /**\r\n   * The checkbox name\r\n   */\r\n  @Prop() readonly name: string;\r\n\r\n  @Event() change: EventEmitter;\r\n\r\n  /** *******************************\r\n    METHODS\r\n    *********************************/\r\n\r\n  compontentDidLoad() {\r\n    if (this.checked && this.disabled) {\r\n      this.checked = false;\r\n      this.checkboxInput.removeAttribute(\"checked\");\r\n    }\r\n  }\r\n\r\n  changed() {\r\n    this.checked = this.checkboxInput.checked;\r\n    this.change.emit({\r\n      \"checkbox id\": this.checkboxId,\r\n      \"checkbox value\": this.checked\r\n    });\r\n  }\r\n\r\n  handlerOnKeyUp(event) {\r\n    if (event.keyCode == 13) {\r\n      // Enter key was pressed\r\n      if (!this.checked) {\r\n        this.el.setAttribute(\"checked\", \"true\");\r\n      } else {\r\n        this.el.removeAttribute(\"checked\");\r\n      }\r\n      this.change.emit({\r\n        \"checkbox id\": this.checkboxId,\r\n        \"checkbox value\": this.checked\r\n      });\r\n    }\r\n  }\r\n\r\n  ariaChecked() {\r\n    if (this.checked) {\r\n      return \"true\";\r\n    }\r\n    return \"false\";\r\n  }\r\n\r\n  handleInputClick(e) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        role=\"checkbox\"\r\n        value={this.value}\r\n        aria-checked={this.ariaChecked}\r\n        aria-label={this.label}\r\n      >\r\n        <label class=\"label\">\r\n          <input\r\n            ref={el => (this.checkboxInput = el as HTMLInputElement)}\r\n            type=\"checkbox\"\r\n            checked={this.checked}\r\n            class=\"input\"\r\n            id={this.checkboxId}\r\n            name={this.name}\r\n            value={this.value}\r\n            disabled={this.disabled}\r\n            onChange={this.changed.bind(this)}\r\n            onKeyUp={this.handlerOnKeyUp.bind(this)}\r\n            tabindex=\"0\"\r\n            onClick={this.handleInputClick}\r\n          ></input>\r\n          <span\r\n            class={{ checkmark: true, \"no-label\": !this.label }}\r\n            role=\"checkbox\"\r\n          ></span>\r\n          {this.label ? this.label : null}\r\n        </label>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"kKAAA,IAAMA,EAAoB,6gKAC1B,IAAAC,EAAeD,E,ICeFE,EAAcC,EAAA,8B,8FAkB0B,M,mBAKQ,M,cAKtB,M,0KAuBrCC,EAAAC,UAAAC,kBAAA,WACE,GAAIC,KAAKC,SAAWD,KAAKE,SAAU,CACjCF,KAAKC,QAAU,MACfD,KAAKG,cAAcC,gBAAgB,U,GAIvCP,EAAAC,UAAAO,QAAA,WACEL,KAAKC,QAAUD,KAAKG,cAAcF,QAClCD,KAAKM,OAAOC,KAAK,CACf,cAAeP,KAAKQ,WACpB,iBAAkBR,KAAKC,S,EAI3BJ,EAAAC,UAAAW,eAAA,SAAeC,GACb,GAAIA,EAAMC,SAAW,GAAI,CAEvB,IAAKX,KAAKC,QAAS,CACjBD,KAAKY,GAAGC,aAAa,UAAW,O,KAC3B,CACLb,KAAKY,GAAGR,gBAAgB,U,CAE1BJ,KAAKM,OAAOC,KAAK,CACf,cAAeP,KAAKQ,WACpB,iBAAkBR,KAAKC,S,GAK7BJ,EAAAC,UAAAgB,YAAA,WACE,GAAId,KAAKC,QAAS,CAChB,MAAO,M,CAET,MAAO,O,EAGTJ,EAAAC,UAAAiB,iBAAA,SAAiBC,GACfA,EAAEC,iB,EAGJpB,EAAAC,UAAAoB,OAAA,eAAAC,EAAAnB,KACE,OACEoB,EAACC,EAAI,CAAAC,IAAA,2CACHC,KAAK,WACLC,MAAOxB,KAAKwB,MAAK,eACHxB,KAAKc,YAAW,aAClBd,KAAKyB,OAEjBL,EAAA,SAAAE,IAAA,2CAAOI,MAAM,SACXN,EAAA,SAAAE,IAAA,2CACEK,IAAK,SAAAf,GAAE,OAAKO,EAAKhB,cAAgBS,CAA1B,EACPgB,KAAK,WACL3B,QAASD,KAAKC,QACdyB,MAAM,QACNG,GAAI7B,KAAKQ,WACTsB,KAAM9B,KAAK8B,KACXN,MAAOxB,KAAKwB,MACZtB,SAAUF,KAAKE,SACf6B,SAAU/B,KAAKK,QAAQ2B,KAAKhC,MAC5BiC,QAASjC,KAAKS,eAAeuB,KAAKhC,MAClCkC,SAAS,IACTC,QAASnC,KAAKe,mBAEhBK,EAAA,QAAAE,IAAA,2CACEI,MAAO,CAAEU,UAAW,KAAM,YAAapC,KAAKyB,OAC5CF,KAAK,aAENvB,KAAKyB,MAAQzB,KAAKyB,MAAQ,M,WAvHV,I"}